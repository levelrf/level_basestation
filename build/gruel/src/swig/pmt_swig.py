# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pmt_swig', [dirname(__file__)])
        except ImportError:
            import _pmt_swig
            return _pmt_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_pmt_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _pmt_swig = swig_import_helper()
    del swig_import_helper
else:
    import _pmt_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class swig_int_ptr(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        this = _pmt_swig.new_swig_int_ptr()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pmt_swig.delete_swig_int_ptr
    __del__ = lambda self : None;
swig_int_ptr_swigregister = _pmt_swig.swig_int_ptr_swigregister
swig_int_ptr_swigregister(swig_int_ptr)


def pmt_is_bool(*args, **kwargs):
  return _pmt_swig.pmt_is_bool(*args, **kwargs)
pmt_is_bool = _pmt_swig.pmt_is_bool

def pmt_is_true(*args, **kwargs):
  return _pmt_swig.pmt_is_true(*args, **kwargs)
pmt_is_true = _pmt_swig.pmt_is_true

def pmt_is_false(*args, **kwargs):
  return _pmt_swig.pmt_is_false(*args, **kwargs)
pmt_is_false = _pmt_swig.pmt_is_false

def pmt_from_bool(*args, **kwargs):
  return _pmt_swig.pmt_from_bool(*args, **kwargs)
pmt_from_bool = _pmt_swig.pmt_from_bool

def pmt_to_bool(*args, **kwargs):
  return _pmt_swig.pmt_to_bool(*args, **kwargs)
pmt_to_bool = _pmt_swig.pmt_to_bool

def pmt_is_symbol(*args, **kwargs):
  return _pmt_swig.pmt_is_symbol(*args, **kwargs)
pmt_is_symbol = _pmt_swig.pmt_is_symbol

def pmt_string_to_symbol(*args, **kwargs):
  return _pmt_swig.pmt_string_to_symbol(*args, **kwargs)
pmt_string_to_symbol = _pmt_swig.pmt_string_to_symbol

def pmt_intern(*args, **kwargs):
  return _pmt_swig.pmt_intern(*args, **kwargs)
pmt_intern = _pmt_swig.pmt_intern

def pmt_symbol_to_string(*args, **kwargs):
  return _pmt_swig.pmt_symbol_to_string(*args, **kwargs)
pmt_symbol_to_string = _pmt_swig.pmt_symbol_to_string

def pmt_is_number(*args, **kwargs):
  return _pmt_swig.pmt_is_number(*args, **kwargs)
pmt_is_number = _pmt_swig.pmt_is_number

def pmt_is_integer(*args, **kwargs):
  return _pmt_swig.pmt_is_integer(*args, **kwargs)
pmt_is_integer = _pmt_swig.pmt_is_integer

def pmt_from_long(*args, **kwargs):
  return _pmt_swig.pmt_from_long(*args, **kwargs)
pmt_from_long = _pmt_swig.pmt_from_long

def pmt_to_long(*args, **kwargs):
  return _pmt_swig.pmt_to_long(*args, **kwargs)
pmt_to_long = _pmt_swig.pmt_to_long

def pmt_is_uint64(*args, **kwargs):
  return _pmt_swig.pmt_is_uint64(*args, **kwargs)
pmt_is_uint64 = _pmt_swig.pmt_is_uint64

def pmt_from_uint64(*args, **kwargs):
  return _pmt_swig.pmt_from_uint64(*args, **kwargs)
pmt_from_uint64 = _pmt_swig.pmt_from_uint64

def pmt_to_uint64(*args, **kwargs):
  return _pmt_swig.pmt_to_uint64(*args, **kwargs)
pmt_to_uint64 = _pmt_swig.pmt_to_uint64

def pmt_is_real(*args, **kwargs):
  return _pmt_swig.pmt_is_real(*args, **kwargs)
pmt_is_real = _pmt_swig.pmt_is_real

def pmt_from_double(*args, **kwargs):
  return _pmt_swig.pmt_from_double(*args, **kwargs)
pmt_from_double = _pmt_swig.pmt_from_double

def pmt_to_double(*args, **kwargs):
  return _pmt_swig.pmt_to_double(*args, **kwargs)
pmt_to_double = _pmt_swig.pmt_to_double

def pmt_is_complex(*args, **kwargs):
  return _pmt_swig.pmt_is_complex(*args, **kwargs)
pmt_is_complex = _pmt_swig.pmt_is_complex

def pmt_make_rectangular(*args, **kwargs):
  return _pmt_swig.pmt_make_rectangular(*args, **kwargs)
pmt_make_rectangular = _pmt_swig.pmt_make_rectangular

def pmt_to_complex(*args, **kwargs):
  return _pmt_swig.pmt_to_complex(*args, **kwargs)
pmt_to_complex = _pmt_swig.pmt_to_complex

def pmt_is_null(*args, **kwargs):
  return _pmt_swig.pmt_is_null(*args, **kwargs)
pmt_is_null = _pmt_swig.pmt_is_null

def pmt_is_pair(*args, **kwargs):
  return _pmt_swig.pmt_is_pair(*args, **kwargs)
pmt_is_pair = _pmt_swig.pmt_is_pair

def pmt_cons(*args, **kwargs):
  return _pmt_swig.pmt_cons(*args, **kwargs)
pmt_cons = _pmt_swig.pmt_cons

def pmt_car(*args, **kwargs):
  return _pmt_swig.pmt_car(*args, **kwargs)
pmt_car = _pmt_swig.pmt_car

def pmt_cdr(*args, **kwargs):
  return _pmt_swig.pmt_cdr(*args, **kwargs)
pmt_cdr = _pmt_swig.pmt_cdr

def pmt_set_car(*args, **kwargs):
  return _pmt_swig.pmt_set_car(*args, **kwargs)
pmt_set_car = _pmt_swig.pmt_set_car

def pmt_set_cdr(*args, **kwargs):
  return _pmt_swig.pmt_set_cdr(*args, **kwargs)
pmt_set_cdr = _pmt_swig.pmt_set_cdr

def pmt_caar(*args, **kwargs):
  return _pmt_swig.pmt_caar(*args, **kwargs)
pmt_caar = _pmt_swig.pmt_caar

def pmt_cadr(*args, **kwargs):
  return _pmt_swig.pmt_cadr(*args, **kwargs)
pmt_cadr = _pmt_swig.pmt_cadr

def pmt_cdar(*args, **kwargs):
  return _pmt_swig.pmt_cdar(*args, **kwargs)
pmt_cdar = _pmt_swig.pmt_cdar

def pmt_cddr(*args, **kwargs):
  return _pmt_swig.pmt_cddr(*args, **kwargs)
pmt_cddr = _pmt_swig.pmt_cddr

def pmt_caddr(*args, **kwargs):
  return _pmt_swig.pmt_caddr(*args, **kwargs)
pmt_caddr = _pmt_swig.pmt_caddr

def pmt_cadddr(*args, **kwargs):
  return _pmt_swig.pmt_cadddr(*args, **kwargs)
pmt_cadddr = _pmt_swig.pmt_cadddr

def pmt_is_tuple(*args, **kwargs):
  return _pmt_swig.pmt_is_tuple(*args, **kwargs)
pmt_is_tuple = _pmt_swig.pmt_is_tuple

def pmt_to_tuple(*args, **kwargs):
  return _pmt_swig.pmt_to_tuple(*args, **kwargs)
pmt_to_tuple = _pmt_swig.pmt_to_tuple

def pmt_tuple_ref(*args, **kwargs):
  return _pmt_swig.pmt_tuple_ref(*args, **kwargs)
pmt_tuple_ref = _pmt_swig.pmt_tuple_ref

def pmt_is_vector(*args, **kwargs):
  return _pmt_swig.pmt_is_vector(*args, **kwargs)
pmt_is_vector = _pmt_swig.pmt_is_vector

def pmt_make_vector(*args, **kwargs):
  return _pmt_swig.pmt_make_vector(*args, **kwargs)
pmt_make_vector = _pmt_swig.pmt_make_vector

def pmt_vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_vector_ref(*args, **kwargs)
pmt_vector_ref = _pmt_swig.pmt_vector_ref

def pmt_vector_set(*args, **kwargs):
  return _pmt_swig.pmt_vector_set(*args, **kwargs)
pmt_vector_set = _pmt_swig.pmt_vector_set

def pmt_vector_fill(*args, **kwargs):
  return _pmt_swig.pmt_vector_fill(*args, **kwargs)
pmt_vector_fill = _pmt_swig.pmt_vector_fill

def pmt_is_blob(*args, **kwargs):
  return _pmt_swig.pmt_is_blob(*args, **kwargs)
pmt_is_blob = _pmt_swig.pmt_is_blob

def pmt_make_blob(*args, **kwargs):
  return _pmt_swig.pmt_make_blob(*args, **kwargs)
pmt_make_blob = _pmt_swig.pmt_make_blob

def pmt_blob_data(*args, **kwargs):
  return _pmt_swig.pmt_blob_data(*args, **kwargs)
pmt_blob_data = _pmt_swig.pmt_blob_data

def pmt_blob_length(*args, **kwargs):
  return _pmt_swig.pmt_blob_length(*args, **kwargs)
pmt_blob_length = _pmt_swig.pmt_blob_length

def pmt_is_uniform_vector(*args, **kwargs):
  return _pmt_swig.pmt_is_uniform_vector(*args, **kwargs)
pmt_is_uniform_vector = _pmt_swig.pmt_is_uniform_vector

def pmt_is_u8vector(*args, **kwargs):
  return _pmt_swig.pmt_is_u8vector(*args, **kwargs)
pmt_is_u8vector = _pmt_swig.pmt_is_u8vector

def pmt_is_s8vector(*args, **kwargs):
  return _pmt_swig.pmt_is_s8vector(*args, **kwargs)
pmt_is_s8vector = _pmt_swig.pmt_is_s8vector

def pmt_is_u16vector(*args, **kwargs):
  return _pmt_swig.pmt_is_u16vector(*args, **kwargs)
pmt_is_u16vector = _pmt_swig.pmt_is_u16vector

def pmt_is_s16vector(*args, **kwargs):
  return _pmt_swig.pmt_is_s16vector(*args, **kwargs)
pmt_is_s16vector = _pmt_swig.pmt_is_s16vector

def pmt_is_u32vector(*args, **kwargs):
  return _pmt_swig.pmt_is_u32vector(*args, **kwargs)
pmt_is_u32vector = _pmt_swig.pmt_is_u32vector

def pmt_is_s32vector(*args, **kwargs):
  return _pmt_swig.pmt_is_s32vector(*args, **kwargs)
pmt_is_s32vector = _pmt_swig.pmt_is_s32vector

def pmt_is_u64vector(*args, **kwargs):
  return _pmt_swig.pmt_is_u64vector(*args, **kwargs)
pmt_is_u64vector = _pmt_swig.pmt_is_u64vector

def pmt_is_s64vector(*args, **kwargs):
  return _pmt_swig.pmt_is_s64vector(*args, **kwargs)
pmt_is_s64vector = _pmt_swig.pmt_is_s64vector

def pmt_is_f32vector(*args, **kwargs):
  return _pmt_swig.pmt_is_f32vector(*args, **kwargs)
pmt_is_f32vector = _pmt_swig.pmt_is_f32vector

def pmt_is_f64vector(*args, **kwargs):
  return _pmt_swig.pmt_is_f64vector(*args, **kwargs)
pmt_is_f64vector = _pmt_swig.pmt_is_f64vector

def pmt_is_c32vector(*args, **kwargs):
  return _pmt_swig.pmt_is_c32vector(*args, **kwargs)
pmt_is_c32vector = _pmt_swig.pmt_is_c32vector

def pmt_is_c64vector(*args, **kwargs):
  return _pmt_swig.pmt_is_c64vector(*args, **kwargs)
pmt_is_c64vector = _pmt_swig.pmt_is_c64vector

def pmt_make_u8vector(*args, **kwargs):
  return _pmt_swig.pmt_make_u8vector(*args, **kwargs)
pmt_make_u8vector = _pmt_swig.pmt_make_u8vector

def pmt_make_s8vector(*args, **kwargs):
  return _pmt_swig.pmt_make_s8vector(*args, **kwargs)
pmt_make_s8vector = _pmt_swig.pmt_make_s8vector

def pmt_make_u16vector(*args, **kwargs):
  return _pmt_swig.pmt_make_u16vector(*args, **kwargs)
pmt_make_u16vector = _pmt_swig.pmt_make_u16vector

def pmt_make_s16vector(*args, **kwargs):
  return _pmt_swig.pmt_make_s16vector(*args, **kwargs)
pmt_make_s16vector = _pmt_swig.pmt_make_s16vector

def pmt_make_u32vector(*args, **kwargs):
  return _pmt_swig.pmt_make_u32vector(*args, **kwargs)
pmt_make_u32vector = _pmt_swig.pmt_make_u32vector

def pmt_make_s32vector(*args, **kwargs):
  return _pmt_swig.pmt_make_s32vector(*args, **kwargs)
pmt_make_s32vector = _pmt_swig.pmt_make_s32vector

def pmt_make_u64vector(*args, **kwargs):
  return _pmt_swig.pmt_make_u64vector(*args, **kwargs)
pmt_make_u64vector = _pmt_swig.pmt_make_u64vector

def pmt_make_s64vector(*args, **kwargs):
  return _pmt_swig.pmt_make_s64vector(*args, **kwargs)
pmt_make_s64vector = _pmt_swig.pmt_make_s64vector

def pmt_make_f32vector(*args, **kwargs):
  return _pmt_swig.pmt_make_f32vector(*args, **kwargs)
pmt_make_f32vector = _pmt_swig.pmt_make_f32vector

def pmt_make_f64vector(*args, **kwargs):
  return _pmt_swig.pmt_make_f64vector(*args, **kwargs)
pmt_make_f64vector = _pmt_swig.pmt_make_f64vector

def pmt_make_c32vector(*args, **kwargs):
  return _pmt_swig.pmt_make_c32vector(*args, **kwargs)
pmt_make_c32vector = _pmt_swig.pmt_make_c32vector

def pmt_make_c64vector(*args, **kwargs):
  return _pmt_swig.pmt_make_c64vector(*args, **kwargs)
pmt_make_c64vector = _pmt_swig.pmt_make_c64vector

def pmt_init_u8vector(*args, **kwargs):
  return _pmt_swig.pmt_init_u8vector(*args, **kwargs)
pmt_init_u8vector = _pmt_swig.pmt_init_u8vector

def pmt_init_s8vector(*args, **kwargs):
  return _pmt_swig.pmt_init_s8vector(*args, **kwargs)
pmt_init_s8vector = _pmt_swig.pmt_init_s8vector

def pmt_init_u16vector(*args, **kwargs):
  return _pmt_swig.pmt_init_u16vector(*args, **kwargs)
pmt_init_u16vector = _pmt_swig.pmt_init_u16vector

def pmt_init_s16vector(*args, **kwargs):
  return _pmt_swig.pmt_init_s16vector(*args, **kwargs)
pmt_init_s16vector = _pmt_swig.pmt_init_s16vector

def pmt_init_u32vector(*args, **kwargs):
  return _pmt_swig.pmt_init_u32vector(*args, **kwargs)
pmt_init_u32vector = _pmt_swig.pmt_init_u32vector

def pmt_init_s32vector(*args, **kwargs):
  return _pmt_swig.pmt_init_s32vector(*args, **kwargs)
pmt_init_s32vector = _pmt_swig.pmt_init_s32vector

def pmt_init_f32vector(*args, **kwargs):
  return _pmt_swig.pmt_init_f32vector(*args, **kwargs)
pmt_init_f32vector = _pmt_swig.pmt_init_f32vector

def pmt_init_f64vector(*args, **kwargs):
  return _pmt_swig.pmt_init_f64vector(*args, **kwargs)
pmt_init_f64vector = _pmt_swig.pmt_init_f64vector

def pmt_init_c32vector(*args, **kwargs):
  return _pmt_swig.pmt_init_c32vector(*args, **kwargs)
pmt_init_c32vector = _pmt_swig.pmt_init_c32vector

def pmt_init_c64vector(*args, **kwargs):
  return _pmt_swig.pmt_init_c64vector(*args, **kwargs)
pmt_init_c64vector = _pmt_swig.pmt_init_c64vector

def pmt_u8vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_u8vector_ref(*args, **kwargs)
pmt_u8vector_ref = _pmt_swig.pmt_u8vector_ref

def pmt_s8vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_s8vector_ref(*args, **kwargs)
pmt_s8vector_ref = _pmt_swig.pmt_s8vector_ref

def pmt_u16vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_u16vector_ref(*args, **kwargs)
pmt_u16vector_ref = _pmt_swig.pmt_u16vector_ref

def pmt_s16vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_s16vector_ref(*args, **kwargs)
pmt_s16vector_ref = _pmt_swig.pmt_s16vector_ref

def pmt_u32vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_u32vector_ref(*args, **kwargs)
pmt_u32vector_ref = _pmt_swig.pmt_u32vector_ref

def pmt_s32vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_s32vector_ref(*args, **kwargs)
pmt_s32vector_ref = _pmt_swig.pmt_s32vector_ref

def pmt_u64vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_u64vector_ref(*args, **kwargs)
pmt_u64vector_ref = _pmt_swig.pmt_u64vector_ref

def pmt_s64vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_s64vector_ref(*args, **kwargs)
pmt_s64vector_ref = _pmt_swig.pmt_s64vector_ref

def pmt_f32vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_f32vector_ref(*args, **kwargs)
pmt_f32vector_ref = _pmt_swig.pmt_f32vector_ref

def pmt_f64vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_f64vector_ref(*args, **kwargs)
pmt_f64vector_ref = _pmt_swig.pmt_f64vector_ref

def pmt_c32vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_c32vector_ref(*args, **kwargs)
pmt_c32vector_ref = _pmt_swig.pmt_c32vector_ref

def pmt_c64vector_ref(*args, **kwargs):
  return _pmt_swig.pmt_c64vector_ref(*args, **kwargs)
pmt_c64vector_ref = _pmt_swig.pmt_c64vector_ref

def pmt_u8vector_set(*args, **kwargs):
  return _pmt_swig.pmt_u8vector_set(*args, **kwargs)
pmt_u8vector_set = _pmt_swig.pmt_u8vector_set

def pmt_s8vector_set(*args, **kwargs):
  return _pmt_swig.pmt_s8vector_set(*args, **kwargs)
pmt_s8vector_set = _pmt_swig.pmt_s8vector_set

def pmt_u16vector_set(*args, **kwargs):
  return _pmt_swig.pmt_u16vector_set(*args, **kwargs)
pmt_u16vector_set = _pmt_swig.pmt_u16vector_set

def pmt_s16vector_set(*args, **kwargs):
  return _pmt_swig.pmt_s16vector_set(*args, **kwargs)
pmt_s16vector_set = _pmt_swig.pmt_s16vector_set

def pmt_u32vector_set(*args, **kwargs):
  return _pmt_swig.pmt_u32vector_set(*args, **kwargs)
pmt_u32vector_set = _pmt_swig.pmt_u32vector_set

def pmt_s32vector_set(*args, **kwargs):
  return _pmt_swig.pmt_s32vector_set(*args, **kwargs)
pmt_s32vector_set = _pmt_swig.pmt_s32vector_set

def pmt_u64vector_set(*args, **kwargs):
  return _pmt_swig.pmt_u64vector_set(*args, **kwargs)
pmt_u64vector_set = _pmt_swig.pmt_u64vector_set

def pmt_s64vector_set(*args, **kwargs):
  return _pmt_swig.pmt_s64vector_set(*args, **kwargs)
pmt_s64vector_set = _pmt_swig.pmt_s64vector_set

def pmt_f32vector_set(*args, **kwargs):
  return _pmt_swig.pmt_f32vector_set(*args, **kwargs)
pmt_f32vector_set = _pmt_swig.pmt_f32vector_set

def pmt_f64vector_set(*args, **kwargs):
  return _pmt_swig.pmt_f64vector_set(*args, **kwargs)
pmt_f64vector_set = _pmt_swig.pmt_f64vector_set

def pmt_c32vector_set(*args, **kwargs):
  return _pmt_swig.pmt_c32vector_set(*args, **kwargs)
pmt_c32vector_set = _pmt_swig.pmt_c32vector_set

def pmt_c64vector_set(*args, **kwargs):
  return _pmt_swig.pmt_c64vector_set(*args, **kwargs)
pmt_c64vector_set = _pmt_swig.pmt_c64vector_set

def pmt_uniform_vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_uniform_vector_elements(*args, **kwargs)
pmt_uniform_vector_elements = _pmt_swig.pmt_uniform_vector_elements

def pmt_u8vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_u8vector_elements(*args, **kwargs)
pmt_u8vector_elements = _pmt_swig.pmt_u8vector_elements

def pmt_s8vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_s8vector_elements(*args, **kwargs)
pmt_s8vector_elements = _pmt_swig.pmt_s8vector_elements

def pmt_u16vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_u16vector_elements(*args, **kwargs)
pmt_u16vector_elements = _pmt_swig.pmt_u16vector_elements

def pmt_s16vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_s16vector_elements(*args, **kwargs)
pmt_s16vector_elements = _pmt_swig.pmt_s16vector_elements

def pmt_u32vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_u32vector_elements(*args, **kwargs)
pmt_u32vector_elements = _pmt_swig.pmt_u32vector_elements

def pmt_s32vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_s32vector_elements(*args, **kwargs)
pmt_s32vector_elements = _pmt_swig.pmt_s32vector_elements

def pmt_u64vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_u64vector_elements(*args, **kwargs)
pmt_u64vector_elements = _pmt_swig.pmt_u64vector_elements

def pmt_s64vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_s64vector_elements(*args, **kwargs)
pmt_s64vector_elements = _pmt_swig.pmt_s64vector_elements

def pmt_f32vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_f32vector_elements(*args, **kwargs)
pmt_f32vector_elements = _pmt_swig.pmt_f32vector_elements

def pmt_f64vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_f64vector_elements(*args, **kwargs)
pmt_f64vector_elements = _pmt_swig.pmt_f64vector_elements

def pmt_c32vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_c32vector_elements(*args, **kwargs)
pmt_c32vector_elements = _pmt_swig.pmt_c32vector_elements

def pmt_c64vector_elements(*args, **kwargs):
  return _pmt_swig.pmt_c64vector_elements(*args, **kwargs)
pmt_c64vector_elements = _pmt_swig.pmt_c64vector_elements

def pmt_uniform_vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_uniform_vector_writable_elements(*args, **kwargs)
pmt_uniform_vector_writable_elements = _pmt_swig.pmt_uniform_vector_writable_elements

def pmt_u8vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_u8vector_writable_elements(*args, **kwargs)
pmt_u8vector_writable_elements = _pmt_swig.pmt_u8vector_writable_elements

def pmt_s8vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_s8vector_writable_elements(*args, **kwargs)
pmt_s8vector_writable_elements = _pmt_swig.pmt_s8vector_writable_elements

def pmt_u16vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_u16vector_writable_elements(*args, **kwargs)
pmt_u16vector_writable_elements = _pmt_swig.pmt_u16vector_writable_elements

def pmt_s16vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_s16vector_writable_elements(*args, **kwargs)
pmt_s16vector_writable_elements = _pmt_swig.pmt_s16vector_writable_elements

def pmt_u32vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_u32vector_writable_elements(*args, **kwargs)
pmt_u32vector_writable_elements = _pmt_swig.pmt_u32vector_writable_elements

def pmt_s32vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_s32vector_writable_elements(*args, **kwargs)
pmt_s32vector_writable_elements = _pmt_swig.pmt_s32vector_writable_elements

def pmt_u64vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_u64vector_writable_elements(*args, **kwargs)
pmt_u64vector_writable_elements = _pmt_swig.pmt_u64vector_writable_elements

def pmt_s64vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_s64vector_writable_elements(*args, **kwargs)
pmt_s64vector_writable_elements = _pmt_swig.pmt_s64vector_writable_elements

def pmt_f32vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_f32vector_writable_elements(*args, **kwargs)
pmt_f32vector_writable_elements = _pmt_swig.pmt_f32vector_writable_elements

def pmt_f64vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_f64vector_writable_elements(*args, **kwargs)
pmt_f64vector_writable_elements = _pmt_swig.pmt_f64vector_writable_elements

def pmt_c32vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_c32vector_writable_elements(*args, **kwargs)
pmt_c32vector_writable_elements = _pmt_swig.pmt_c32vector_writable_elements

def pmt_c64vector_writable_elements(*args, **kwargs):
  return _pmt_swig.pmt_c64vector_writable_elements(*args, **kwargs)
pmt_c64vector_writable_elements = _pmt_swig.pmt_c64vector_writable_elements

def pmt_is_dict(*args, **kwargs):
  return _pmt_swig.pmt_is_dict(*args, **kwargs)
pmt_is_dict = _pmt_swig.pmt_is_dict

def pmt_make_dict():
  return _pmt_swig.pmt_make_dict()
pmt_make_dict = _pmt_swig.pmt_make_dict

def pmt_dict_add(*args, **kwargs):
  return _pmt_swig.pmt_dict_add(*args, **kwargs)
pmt_dict_add = _pmt_swig.pmt_dict_add

def pmt_dict_delete(*args, **kwargs):
  return _pmt_swig.pmt_dict_delete(*args, **kwargs)
pmt_dict_delete = _pmt_swig.pmt_dict_delete

def pmt_dict_has_key(*args, **kwargs):
  return _pmt_swig.pmt_dict_has_key(*args, **kwargs)
pmt_dict_has_key = _pmt_swig.pmt_dict_has_key

def pmt_dict_ref(*args, **kwargs):
  return _pmt_swig.pmt_dict_ref(*args, **kwargs)
pmt_dict_ref = _pmt_swig.pmt_dict_ref

def pmt_dict_items(*args, **kwargs):
  return _pmt_swig.pmt_dict_items(*args, **kwargs)
pmt_dict_items = _pmt_swig.pmt_dict_items

def pmt_dict_keys(*args, **kwargs):
  return _pmt_swig.pmt_dict_keys(*args, **kwargs)
pmt_dict_keys = _pmt_swig.pmt_dict_keys

def pmt_dict_values(*args, **kwargs):
  return _pmt_swig.pmt_dict_values(*args, **kwargs)
pmt_dict_values = _pmt_swig.pmt_dict_values

def pmt_is_any(*args, **kwargs):
  return _pmt_swig.pmt_is_any(*args, **kwargs)
pmt_is_any = _pmt_swig.pmt_is_any

def pmt_make_any(*args, **kwargs):
  return _pmt_swig.pmt_make_any(*args, **kwargs)
pmt_make_any = _pmt_swig.pmt_make_any

def pmt_any_ref(*args, **kwargs):
  return _pmt_swig.pmt_any_ref(*args, **kwargs)
pmt_any_ref = _pmt_swig.pmt_any_ref

def pmt_any_set(*args, **kwargs):
  return _pmt_swig.pmt_any_set(*args, **kwargs)
pmt_any_set = _pmt_swig.pmt_any_set

def pmt_is_msg_accepter(*args, **kwargs):
  return _pmt_swig.pmt_is_msg_accepter(*args, **kwargs)
pmt_is_msg_accepter = _pmt_swig.pmt_is_msg_accepter

def pmt_make_msg_accepter(*args, **kwargs):
  return _pmt_swig.pmt_make_msg_accepter(*args, **kwargs)
pmt_make_msg_accepter = _pmt_swig.pmt_make_msg_accepter

def pmt_msg_accepter_ref(*args, **kwargs):
  return _pmt_swig.pmt_msg_accepter_ref(*args, **kwargs)
pmt_msg_accepter_ref = _pmt_swig.pmt_msg_accepter_ref

def pmt_eq(*args, **kwargs):
  return _pmt_swig.pmt_eq(*args, **kwargs)
pmt_eq = _pmt_swig.pmt_eq

def pmt_eqv(*args, **kwargs):
  return _pmt_swig.pmt_eqv(*args, **kwargs)
pmt_eqv = _pmt_swig.pmt_eqv

def pmt_equal(*args, **kwargs):
  return _pmt_swig.pmt_equal(*args, **kwargs)
pmt_equal = _pmt_swig.pmt_equal

def pmt_length(*args, **kwargs):
  return _pmt_swig.pmt_length(*args, **kwargs)
pmt_length = _pmt_swig.pmt_length

def pmt_assq(*args, **kwargs):
  return _pmt_swig.pmt_assq(*args, **kwargs)
pmt_assq = _pmt_swig.pmt_assq

def pmt_assv(*args, **kwargs):
  return _pmt_swig.pmt_assv(*args, **kwargs)
pmt_assv = _pmt_swig.pmt_assv

def pmt_assoc(*args, **kwargs):
  return _pmt_swig.pmt_assoc(*args, **kwargs)
pmt_assoc = _pmt_swig.pmt_assoc

def pmt_map(*args, **kwargs):
  return _pmt_swig.pmt_map(*args, **kwargs)
pmt_map = _pmt_swig.pmt_map

def pmt_reverse(*args, **kwargs):
  return _pmt_swig.pmt_reverse(*args, **kwargs)
pmt_reverse = _pmt_swig.pmt_reverse

def pmt_reverse_x(*args, **kwargs):
  return _pmt_swig.pmt_reverse_x(*args, **kwargs)
pmt_reverse_x = _pmt_swig.pmt_reverse_x

def pmt_acons(*args, **kwargs):
  return _pmt_swig.pmt_acons(*args, **kwargs)
pmt_acons = _pmt_swig.pmt_acons

def pmt_nth(*args, **kwargs):
  return _pmt_swig.pmt_nth(*args, **kwargs)
pmt_nth = _pmt_swig.pmt_nth

def pmt_nthcdr(*args, **kwargs):
  return _pmt_swig.pmt_nthcdr(*args, **kwargs)
pmt_nthcdr = _pmt_swig.pmt_nthcdr

def pmt_memq(*args, **kwargs):
  return _pmt_swig.pmt_memq(*args, **kwargs)
pmt_memq = _pmt_swig.pmt_memq

def pmt_memv(*args, **kwargs):
  return _pmt_swig.pmt_memv(*args, **kwargs)
pmt_memv = _pmt_swig.pmt_memv

def pmt_member(*args, **kwargs):
  return _pmt_swig.pmt_member(*args, **kwargs)
pmt_member = _pmt_swig.pmt_member

def pmt_subsetp(*args, **kwargs):
  return _pmt_swig.pmt_subsetp(*args, **kwargs)
pmt_subsetp = _pmt_swig.pmt_subsetp

def pmt_list1(*args, **kwargs):
  return _pmt_swig.pmt_list1(*args, **kwargs)
pmt_list1 = _pmt_swig.pmt_list1

def pmt_list2(*args, **kwargs):
  return _pmt_swig.pmt_list2(*args, **kwargs)
pmt_list2 = _pmt_swig.pmt_list2

def pmt_list3(*args, **kwargs):
  return _pmt_swig.pmt_list3(*args, **kwargs)
pmt_list3 = _pmt_swig.pmt_list3

def pmt_list4(*args, **kwargs):
  return _pmt_swig.pmt_list4(*args, **kwargs)
pmt_list4 = _pmt_swig.pmt_list4

def pmt_list5(*args, **kwargs):
  return _pmt_swig.pmt_list5(*args, **kwargs)
pmt_list5 = _pmt_swig.pmt_list5

def pmt_list6(*args, **kwargs):
  return _pmt_swig.pmt_list6(*args, **kwargs)
pmt_list6 = _pmt_swig.pmt_list6

def pmt_list_add(*args, **kwargs):
  return _pmt_swig.pmt_list_add(*args, **kwargs)
pmt_list_add = _pmt_swig.pmt_list_add

def pmt_is_eof_object(*args, **kwargs):
  return _pmt_swig.pmt_is_eof_object(*args, **kwargs)
pmt_is_eof_object = _pmt_swig.pmt_is_eof_object

def pmt_read(*args, **kwargs):
  return _pmt_swig.pmt_read(*args, **kwargs)
pmt_read = _pmt_swig.pmt_read

def pmt_write(*args, **kwargs):
  return _pmt_swig.pmt_write(*args, **kwargs)
pmt_write = _pmt_swig.pmt_write

def pmt_write_string(*args, **kwargs):
  return _pmt_swig.pmt_write_string(*args, **kwargs)
pmt_write_string = _pmt_swig.pmt_write_string

def pmt_print(*args, **kwargs):
  return _pmt_swig.pmt_print(*args, **kwargs)
pmt_print = _pmt_swig.pmt_print

def pmt_serialize(*args, **kwargs):
  return _pmt_swig.pmt_serialize(*args, **kwargs)
pmt_serialize = _pmt_swig.pmt_serialize

def pmt_deserialize(*args, **kwargs):
  return _pmt_swig.pmt_deserialize(*args, **kwargs)
pmt_deserialize = _pmt_swig.pmt_deserialize

def pmt_dump_sizeof():
  return _pmt_swig.pmt_dump_sizeof()
pmt_dump_sizeof = _pmt_swig.pmt_dump_sizeof

def pmt_serialize_str(*args, **kwargs):
  return _pmt_swig.pmt_serialize_str(*args, **kwargs)
pmt_serialize_str = _pmt_swig.pmt_serialize_str

def pmt_deserialize_str(*args, **kwargs):
  return _pmt_swig.pmt_deserialize_str(*args, **kwargs)
pmt_deserialize_str = _pmt_swig.pmt_deserialize_str

cvar = _pmt_swig.cvar
PMT_T = cvar.PMT_T
PMT_F = cvar.PMT_F
PMT_NIL = cvar.PMT_NIL

def pmt_make_tuple(*args):
  return _pmt_swig.pmt_make_tuple(*args)
pmt_make_tuple = _pmt_swig.pmt_make_tuple
PMT_EOF = cvar.PMT_EOF

