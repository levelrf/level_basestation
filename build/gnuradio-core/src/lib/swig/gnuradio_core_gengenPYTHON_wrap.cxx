/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_DIRECTORS
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif 
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



/* Python.h has to appear first */
#include <Python.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.
  
  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The SWIG conversion methods, as ConvertPtr, return an integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/* 
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule()
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, (char *) msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char *)name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, (char *)name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      register int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", name, (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_print(SwigPyObject *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char *str;
#ifdef METH_NOARGS
  PyObject *repr = SwigPyObject_repr(v);
#else
  PyObject *repr = SwigPyObject_repr(v, NULL);
#endif
  if (repr) {
    str = SWIG_Python_str_AsChar(repr); 
    fputs(str, fp);
    SWIG_Python_str_DelForPy3(str);
    Py_DECREF(repr);
    return 0; 
  } else {
    return 1; 
  }
}

SWIGRUNTIME PyObject *
SwigPyObject_str(SwigPyObject *v)
{
  char result[SWIG_BUFFER_SIZE];
  return SWIG_PackVoidPtr(result, v->ptr, v->ty->name, sizeof(result)) ?
    SWIG_Python_str_FromChar(result) : 0;
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#else
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyObject_print,        /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyObject_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (flags & SWIG_POINTER_IMPLICIT_CONV) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = PyBaseObject_Type.tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    PyObject_SetAttr(inst, SWIG_This(), swig_this);
    Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
#else
    PyObject *dict = PyDict_New();
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst;
  PyObject *dict = PyDict_New();
  PyDict_SetItem(dict, SWIG_This(), swig_this);
  inst = PyInstance_NewRaw(data->newargs, dict);
  Py_DECREF(dict);
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args,(char*)"swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    if (inst) {
      Py_DECREF(robj);
      robj = inst;
    }
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_Python_GetModule();
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : (char*)"";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res;

#ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
#else
  if (!PyString_Check(name))
#endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  res = -1;
  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 

/* -----------------------------------------------------------------------------
 * director.swg
 *
 * This file contains support for director classes that proxy
 * method calls from C++ to Python extensions.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_PYTHON_HEADER_
#define SWIG_DIRECTOR_PYTHON_HEADER_

#ifdef __cplusplus

#include <string>
#include <iostream>
#include <exception>
#include <vector>
#include <map>


/*
  Use -DSWIG_PYTHON_DIRECTOR_NO_VTABLE if you don't want to generate a 'virtual
  table', and avoid multiple GetAttr calls to retrieve the python
  methods.
*/

#ifndef SWIG_PYTHON_DIRECTOR_NO_VTABLE
#ifndef SWIG_PYTHON_DIRECTOR_VTABLE
#define SWIG_PYTHON_DIRECTOR_VTABLE
#endif
#endif



/*
  Use -DSWIG_DIRECTOR_NO_UEH if you prefer to avoid the use of the
  Undefined Exception Handler provided by swift
*/
#ifndef SWIG_DIRECTOR_NO_UEH
#ifndef SWIG_DIRECTOR_UEH
#define SWIG_DIRECTOR_UEH
#endif
#endif


/*
  Use -DSWIG_DIRECTOR_STATIC if you prefer to avoid the use of the
  'Swig' namespace. This could be useful for multi-modules projects.
*/
#ifdef SWIG_DIRECTOR_STATIC
/* Force anonymous (static) namespace */
#define Swig
#endif


/*
  Use -DSWIG_DIRECTOR_NORTTI if you prefer to avoid the use of the
  native C++ RTTI and dynamic_cast<>. But be aware that directors
  could stop working when using this option.
*/
#ifdef SWIG_DIRECTOR_NORTTI
/* 
   When we don't use the native C++ RTTI, we implement a minimal one
   only for Directors.
*/
# ifndef SWIG_DIRECTOR_RTDIR
# define SWIG_DIRECTOR_RTDIR
#include <map>

namespace Swig {
  class Director;
  SWIGINTERN std::map<void*,Director*>& get_rtdir_map() {
    static std::map<void*,Director*> rtdir_map;
    return rtdir_map;
  }

  SWIGINTERNINLINE void set_rtdir(void *vptr, Director *rtdir) {
    get_rtdir_map()[vptr] = rtdir;
  }

  SWIGINTERNINLINE Director *get_rtdir(void *vptr) {
    std::map<void*,Director*>::const_iterator pos = get_rtdir_map().find(vptr);
    Director *rtdir = (pos != get_rtdir_map().end()) ? pos->second : 0;
    return rtdir;
  }
}
# endif /* SWIG_DIRECTOR_RTDIR */

# define SWIG_DIRECTOR_CAST(ARG) Swig::get_rtdir(static_cast<void*>(ARG))
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2) Swig::set_rtdir(static_cast<void*>(ARG1), ARG2)

#else

# define SWIG_DIRECTOR_CAST(ARG) dynamic_cast<Swig::Director *>(ARG)
# define SWIG_DIRECTOR_RGTR(ARG1, ARG2)

#endif /* SWIG_DIRECTOR_NORTTI */

extern "C" {
  struct swig_type_info;
}

namespace Swig {  

  /* memory handler */
  struct GCItem 
  {
    virtual ~GCItem() {}

    virtual int get_own() const
    {
      return 0;
    }
  };

  struct GCItem_var
  {
    GCItem_var(GCItem *item = 0) : _item(item)
    {
    }

    GCItem_var& operator=(GCItem *item)
    {
      GCItem *tmp = _item;
      _item = item;
      delete tmp;
      return *this;
    }

    ~GCItem_var() 
    {
      delete _item;
    }
    
    GCItem * operator->() const
    {
      return _item;
    }
    
  private:
    GCItem *_item;
  };
  
  struct GCItem_Object : GCItem
  {
    GCItem_Object(int own) : _own(own)
    {
    }
    
    virtual ~GCItem_Object() 
    {
    }

    int get_own() const
    {
      return _own;
    }
    
  private:
    int _own;
  };

  template <typename Type>
  struct GCItem_T : GCItem
  {
    GCItem_T(Type *ptr) : _ptr(ptr)
    {
    }
    
    virtual ~GCItem_T() 
    {
      delete _ptr;
    }
    
  private:
    Type *_ptr;
  };

  template <typename Type>
  struct GCArray_T : GCItem
  {
    GCArray_T(Type *ptr) : _ptr(ptr)
    {
    }
    
    virtual ~GCArray_T() 
    {
      delete[] _ptr;
    }
    
  private:
    Type *_ptr;
  };

  /* base class for director exceptions */
  class DirectorException {
  protected:
    std::string swig_msg;
  public:
    DirectorException(PyObject *error, const char* hdr ="", const char* msg ="") 
      : swig_msg(hdr)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
      if (strlen(msg)) {
        swig_msg += " ";
        swig_msg += msg;
      }
      if (!PyErr_Occurred()) {
        PyErr_SetString(error, getMessage());
      }
      SWIG_PYTHON_THREAD_END_BLOCK; 
    }

    const char *getMessage() const
    { 
      return swig_msg.c_str(); 
    }

    static void raise(PyObject *error, const char *msg) 
    {
      throw DirectorException(error, msg);
    }

    static void raise(const char *msg) 
    {
      raise(PyExc_RuntimeError, msg);
    }
  };

  /* unknown exception handler  */
  class UnknownExceptionHandler 
  {
#ifdef SWIG_DIRECTOR_UEH
    static void handler()  {
      try {
        throw;
      } catch (DirectorException& e) {
        std::cerr << "SWIG Director exception caught:" << std::endl
                  << e.getMessage() << std::endl;
      } catch (std::exception& e) {
        std::cerr << "std::exception caught: "<< e.what() << std::endl;
      } catch (...) {
        std::cerr << "Unknown exception caught." << std::endl;
      }
      
      std::cerr << std::endl
                << "Python interpreter traceback:" << std::endl;
      PyErr_Print();
      std::cerr << std::endl;
      
      std::cerr << "This exception was caught by the SWIG unexpected exception handler." << std::endl
                << "Try using %feature(\"director:except\") to avoid reaching this point." << std::endl
                << std::endl
                << "Exception is being re-thrown, program will like abort/terminate." << std::endl;
      throw;
    }

  public:
    
    std::unexpected_handler old;
    UnknownExceptionHandler(std::unexpected_handler nh = handler)
    {
      old = std::set_unexpected(nh);
    }

    ~UnknownExceptionHandler()
    {
      std::set_unexpected(old);
    }
#endif
  };

  /* type mismatch in the return value from a python method call */
  class DirectorTypeMismatchException : public Swig::DirectorException {
  public:
    DirectorTypeMismatchException(PyObject *error, const char* msg="") 
      : Swig::DirectorException(error, "SWIG director type mismatch", msg)
    {
    }

    DirectorTypeMismatchException(const char* msg="") 
      : Swig::DirectorException(PyExc_TypeError, "SWIG director type mismatch", msg)
    {
    }

    static void raise(PyObject *error, const char *msg)
    {
      throw DirectorTypeMismatchException(error, msg);
    }

    static void raise(const char *msg)
    {
      throw DirectorTypeMismatchException(msg);
    }
  };

  /* any python exception that occurs during a director method call */
  class DirectorMethodException : public Swig::DirectorException {
  public:
    DirectorMethodException(const char* msg = "") 
      : DirectorException(PyExc_RuntimeError, "SWIG director method error.", msg)
    {
    }    

    static void raise(const char *msg)
    {
      throw DirectorMethodException(msg);
    }
  };

  /* attempt to call a pure virtual method via a director method */
  class DirectorPureVirtualException : public Swig::DirectorException
  {
  public:
    DirectorPureVirtualException(const char* msg = "") 
      : DirectorException(PyExc_RuntimeError, "SWIG director pure virtual method called", msg)
    { 
    }

    static void raise(const char *msg) 
    {
      throw DirectorPureVirtualException(msg);
    }
  };


#if defined(SWIG_PYTHON_THREADS)
/*  __THREAD__ is the old macro to activate some thread support */
# if !defined(__THREAD__)
#   define __THREAD__ 1
# endif
#endif

#ifdef __THREAD__
# include "pythread.h"
  class Guard
  {
    PyThread_type_lock & mutex_;
    
  public:
    Guard(PyThread_type_lock & mutex) : mutex_(mutex)
    {
      PyThread_acquire_lock(mutex_, WAIT_LOCK);
    }
    
    ~Guard()
    {
      PyThread_release_lock(mutex_);
    }
  };
# define SWIG_GUARD(mutex) Guard _guard(mutex)
#else
# define SWIG_GUARD(mutex) 
#endif

  /* director base class */
  class Director {
  private:
    /* pointer to the wrapped python object */
    PyObject* swig_self;
    /* flag indicating whether the object is owned by python or c++ */
    mutable bool swig_disown_flag;

    /* decrement the reference count of the wrapped python object */
    void swig_decref() const { 
      if (swig_disown_flag) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
        Py_DECREF(swig_self); 
        SWIG_PYTHON_THREAD_END_BLOCK; 
      }
    }

  public:
    /* wrap a python object, optionally taking ownership */
    Director(PyObject* self) : swig_self(self), swig_disown_flag(false) {
      swig_incref();
    }


    /* discard our reference at destruction */
    virtual ~Director() {
      swig_decref(); 
    }


    /* return a pointer to the wrapped python object */
    PyObject *swig_get_self() const { 
      return swig_self; 
    }

    /* acquire ownership of the wrapped python object (the sense of "disown"
     * is from python) */
    void swig_disown() const { 
      if (!swig_disown_flag) { 
        swig_disown_flag=true;
        swig_incref(); 
      } 
    }

    /* increase the reference count of the wrapped python object */
    void swig_incref() const { 
      if (swig_disown_flag) {
        Py_INCREF(swig_self); 
      }
    }

    /* methods to implement pseudo protected director members */
    virtual bool swig_get_inner(const char* /* swig_protected_method_name */) const {
      return true;
    }
    
    virtual void swig_set_inner(const char* /* swig_protected_method_name */, bool /* swig_val */) const {
    }

  /* ownership management */
  private:
    typedef std::map<void*, GCItem_var> swig_ownership_map;
    mutable swig_ownership_map swig_owner;
#ifdef __THREAD__
    static PyThread_type_lock swig_mutex_own;
#endif

  public:
    template <typename Type>
    void swig_acquire_ownership_array(Type *vptr)  const
    {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCArray_T<Type>(vptr);
      }
    }
    
    template <typename Type>
    void swig_acquire_ownership(Type *vptr)  const
    {
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_T<Type>(vptr);
      }
    }

    void swig_acquire_ownership_obj(void *vptr, int own) const
    {
      if (vptr && own) {
        SWIG_GUARD(swig_mutex_own);
        swig_owner[vptr] = new GCItem_Object(own);
      }
    }
    
    int swig_release_ownership(void *vptr) const
    {
      int own = 0;
      if (vptr) {
        SWIG_GUARD(swig_mutex_own);
        swig_ownership_map::iterator iter = swig_owner.find(vptr);
        if (iter != swig_owner.end()) {
          own = iter->second->get_own();
          swig_owner.erase(iter);
        }
      }
      return own;
    }

    template <typename Type>
    static PyObject* swig_pyobj_disown(PyObject *pyobj, PyObject *SWIGUNUSEDPARM(args))
    {
      SwigPyObject *sobj = (SwigPyObject *)pyobj;
      sobj->own = 0;
      Director *d = SWIG_DIRECTOR_CAST(reinterpret_cast<Type *>(sobj->ptr));
      if (d)
        d->swig_disown();
      return PyWeakref_NewProxy(pyobj, NULL);
    }

  };

#ifdef __THREAD__
  PyThread_type_lock Director::swig_mutex_own = PyThread_allocate_lock();
#endif
}

#endif /* __cplusplus */


#endif

/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_allocator_type swig_types[0]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t swig_types[1]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t swig_types[2]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t swig_types[3]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t swig_types[4]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t swig_types[5]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t swig_types[6]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t swig_types[7]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t swig_types[8]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t swig_types[9]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t swig_types[10]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t swig_types[11]
#define SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t swig_types[12]
#define SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t swig_types[13]
#define SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t swig_types[14]
#define SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t swig_types[15]
#define SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t swig_types[16]
#define SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t swig_types[17]
#define SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t swig_types[18]
#define SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t swig_types[19]
#define SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t swig_types[20]
#define SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t swig_types[21]
#define SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t swig_types[22]
#define SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t swig_types[23]
#define SWIGTYPE_p_boost__shared_ptrT_gr_block_t swig_types[24]
#define SWIGTYPE_p_boost__shared_ptrT_gr_buffer_reader_t swig_types[25]
#define SWIGTYPE_p_boost__shared_ptrT_gr_buffer_t swig_types[26]
#define SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t swig_types[27]
#define SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t swig_types[28]
#define SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t swig_types[29]
#define SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t swig_types[30]
#define SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t swig_types[31]
#define SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t swig_types[32]
#define SWIGTYPE_p_boost__shared_ptrT_gr_dispatcher_t swig_types[33]
#define SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t swig_types[34]
#define SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t swig_types[35]
#define SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t swig_types[36]
#define SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t swig_types[37]
#define SWIGTYPE_p_boost__shared_ptrT_gr_hier_block2_t swig_types[38]
#define SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t swig_types[39]
#define SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t swig_types[40]
#define SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t swig_types[41]
#define SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t swig_types[42]
#define SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t swig_types[43]
#define SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t swig_types[44]
#define SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t swig_types[45]
#define SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t swig_types[46]
#define SWIGTYPE_p_boost__shared_ptrT_gr_message_t swig_types[47]
#define SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t swig_types[48]
#define SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t swig_types[49]
#define SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t swig_types[50]
#define SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t swig_types[51]
#define SWIGTYPE_p_boost__shared_ptrT_gr_msg_queue_t swig_types[52]
#define SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t swig_types[53]
#define SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t swig_types[54]
#define SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t swig_types[55]
#define SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t swig_types[56]
#define SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t swig_types[57]
#define SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t swig_types[58]
#define SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t swig_types[59]
#define SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t swig_types[60]
#define SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t swig_types[61]
#define SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t swig_types[62]
#define SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t swig_types[63]
#define SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t swig_types[64]
#define SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t swig_types[65]
#define SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t swig_types[66]
#define SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t swig_types[67]
#define SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t swig_types[68]
#define SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t swig_types[69]
#define SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t swig_types[70]
#define SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t swig_types[71]
#define SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t swig_types[72]
#define SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t swig_types[73]
#define SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t swig_types[74]
#define SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t swig_types[75]
#define SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t swig_types[76]
#define SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t swig_types[77]
#define SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t swig_types[78]
#define SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t swig_types[79]
#define SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t swig_types[80]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t swig_types[81]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t swig_types[82]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t swig_types[83]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t swig_types[84]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t swig_types[85]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t swig_types[86]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t swig_types[87]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t swig_types[88]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t swig_types[89]
#define SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t swig_types[90]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t swig_types[91]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t swig_types[92]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t swig_types[93]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t swig_types[94]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t swig_types[95]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t swig_types[96]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t swig_types[97]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t swig_types[98]
#define SWIGTYPE_p_boost__shared_ptrT_gr_single_threaded_scheduler_t swig_types[99]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t swig_types[100]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t swig_types[101]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t swig_types[102]
#define SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t swig_types[103]
#define SWIGTYPE_p_boost__shared_ptrT_gr_top_block_t swig_types[104]
#define SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t swig_types[105]
#define SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t swig_types[106]
#define SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t swig_types[107]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t swig_types[108]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t swig_types[109]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t swig_types[110]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t swig_types[111]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t swig_types[112]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t swig_types[113]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t swig_types[114]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t swig_types[115]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t swig_types[116]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t swig_types[117]
#define SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t swig_types[118]
#define SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t swig_types[119]
#define SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t swig_types[120]
#define SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t swig_types[121]
#define SWIGTYPE_p_char swig_types[122]
#define SWIGTYPE_p_difference_type swig_types[123]
#define SWIGTYPE_p_gr_add_cc swig_types[124]
#define SWIGTYPE_p_gr_add_const_cc swig_types[125]
#define SWIGTYPE_p_gr_add_const_ff swig_types[126]
#define SWIGTYPE_p_gr_add_const_ii swig_types[127]
#define SWIGTYPE_p_gr_add_const_sf swig_types[128]
#define SWIGTYPE_p_gr_add_const_ss swig_types[129]
#define SWIGTYPE_p_gr_add_const_vcc swig_types[130]
#define SWIGTYPE_p_gr_add_const_vff swig_types[131]
#define SWIGTYPE_p_gr_add_const_vii swig_types[132]
#define SWIGTYPE_p_gr_add_const_vss swig_types[133]
#define SWIGTYPE_p_gr_add_ii swig_types[134]
#define SWIGTYPE_p_gr_add_ss swig_types[135]
#define SWIGTYPE_p_gr_and_bb swig_types[136]
#define SWIGTYPE_p_gr_and_const_bb swig_types[137]
#define SWIGTYPE_p_gr_and_const_ii swig_types[138]
#define SWIGTYPE_p_gr_and_const_ss swig_types[139]
#define SWIGTYPE_p_gr_and_ii swig_types[140]
#define SWIGTYPE_p_gr_and_ss swig_types[141]
#define SWIGTYPE_p_gr_argmax_fs swig_types[142]
#define SWIGTYPE_p_gr_argmax_is swig_types[143]
#define SWIGTYPE_p_gr_argmax_ss swig_types[144]
#define SWIGTYPE_p_gr_basic_block swig_types[145]
#define SWIGTYPE_p_gr_block swig_types[146]
#define SWIGTYPE_p_gr_chunks_to_symbols_bc swig_types[147]
#define SWIGTYPE_p_gr_chunks_to_symbols_bf swig_types[148]
#define SWIGTYPE_p_gr_chunks_to_symbols_ic swig_types[149]
#define SWIGTYPE_p_gr_chunks_to_symbols_if swig_types[150]
#define SWIGTYPE_p_gr_chunks_to_symbols_sc swig_types[151]
#define SWIGTYPE_p_gr_chunks_to_symbols_sf swig_types[152]
#define SWIGTYPE_p_gr_divide_cc swig_types[153]
#define SWIGTYPE_p_gr_divide_ff swig_types[154]
#define SWIGTYPE_p_gr_divide_ii swig_types[155]
#define SWIGTYPE_p_gr_divide_ss swig_types[156]
#define SWIGTYPE_p_gr_endianness_t swig_types[157]
#define SWIGTYPE_p_gr_hier_block2 swig_types[158]
#define SWIGTYPE_p_gr_integrate_cc swig_types[159]
#define SWIGTYPE_p_gr_integrate_ff swig_types[160]
#define SWIGTYPE_p_gr_integrate_ii swig_types[161]
#define SWIGTYPE_p_gr_integrate_ss swig_types[162]
#define SWIGTYPE_p_gr_max_ff swig_types[163]
#define SWIGTYPE_p_gr_max_ii swig_types[164]
#define SWIGTYPE_p_gr_max_ss swig_types[165]
#define SWIGTYPE_p_gr_moving_average_cc swig_types[166]
#define SWIGTYPE_p_gr_moving_average_ff swig_types[167]
#define SWIGTYPE_p_gr_moving_average_ii swig_types[168]
#define SWIGTYPE_p_gr_moving_average_ss swig_types[169]
#define SWIGTYPE_p_gr_multiply_const_ii swig_types[170]
#define SWIGTYPE_p_gr_multiply_const_ss swig_types[171]
#define SWIGTYPE_p_gr_multiply_const_vcc swig_types[172]
#define SWIGTYPE_p_gr_multiply_const_vff swig_types[173]
#define SWIGTYPE_p_gr_multiply_const_vii swig_types[174]
#define SWIGTYPE_p_gr_multiply_const_vss swig_types[175]
#define SWIGTYPE_p_gr_multiply_ii swig_types[176]
#define SWIGTYPE_p_gr_multiply_ss swig_types[177]
#define SWIGTYPE_p_gr_mute_cc swig_types[178]
#define SWIGTYPE_p_gr_mute_ff swig_types[179]
#define SWIGTYPE_p_gr_mute_ii swig_types[180]
#define SWIGTYPE_p_gr_mute_ss swig_types[181]
#define SWIGTYPE_p_gr_noise_source_c swig_types[182]
#define SWIGTYPE_p_gr_noise_source_f swig_types[183]
#define SWIGTYPE_p_gr_noise_source_i swig_types[184]
#define SWIGTYPE_p_gr_noise_source_s swig_types[185]
#define SWIGTYPE_p_gr_noise_type_t swig_types[186]
#define SWIGTYPE_p_gr_not_bb swig_types[187]
#define SWIGTYPE_p_gr_not_ii swig_types[188]
#define SWIGTYPE_p_gr_not_ss swig_types[189]
#define SWIGTYPE_p_gr_or_bb swig_types[190]
#define SWIGTYPE_p_gr_or_ii swig_types[191]
#define SWIGTYPE_p_gr_or_ss swig_types[192]
#define SWIGTYPE_p_gr_packed_to_unpacked_bb swig_types[193]
#define SWIGTYPE_p_gr_packed_to_unpacked_ii swig_types[194]
#define SWIGTYPE_p_gr_packed_to_unpacked_ss swig_types[195]
#define SWIGTYPE_p_gr_peak_detector_fb swig_types[196]
#define SWIGTYPE_p_gr_peak_detector_ib swig_types[197]
#define SWIGTYPE_p_gr_peak_detector_sb swig_types[198]
#define SWIGTYPE_p_gr_probe_signal_b swig_types[199]
#define SWIGTYPE_p_gr_probe_signal_c swig_types[200]
#define SWIGTYPE_p_gr_probe_signal_f swig_types[201]
#define SWIGTYPE_p_gr_probe_signal_i swig_types[202]
#define SWIGTYPE_p_gr_probe_signal_s swig_types[203]
#define SWIGTYPE_p_gr_probe_signal_vb swig_types[204]
#define SWIGTYPE_p_gr_probe_signal_vc swig_types[205]
#define SWIGTYPE_p_gr_probe_signal_vf swig_types[206]
#define SWIGTYPE_p_gr_probe_signal_vi swig_types[207]
#define SWIGTYPE_p_gr_probe_signal_vs swig_types[208]
#define SWIGTYPE_p_gr_sample_and_hold_bb swig_types[209]
#define SWIGTYPE_p_gr_sample_and_hold_ff swig_types[210]
#define SWIGTYPE_p_gr_sample_and_hold_ii swig_types[211]
#define SWIGTYPE_p_gr_sample_and_hold_ss swig_types[212]
#define SWIGTYPE_p_gr_sig_source_c swig_types[213]
#define SWIGTYPE_p_gr_sig_source_f swig_types[214]
#define SWIGTYPE_p_gr_sig_source_i swig_types[215]
#define SWIGTYPE_p_gr_sig_source_s swig_types[216]
#define SWIGTYPE_p_gr_sub_cc swig_types[217]
#define SWIGTYPE_p_gr_sub_ff swig_types[218]
#define SWIGTYPE_p_gr_sub_ii swig_types[219]
#define SWIGTYPE_p_gr_sub_ss swig_types[220]
#define SWIGTYPE_p_gr_sync_block swig_types[221]
#define SWIGTYPE_p_gr_sync_decimator swig_types[222]
#define SWIGTYPE_p_gr_sync_interpolator swig_types[223]
#define SWIGTYPE_p_gr_top_block swig_types[224]
#define SWIGTYPE_p_gr_unpacked_to_packed_bb swig_types[225]
#define SWIGTYPE_p_gr_unpacked_to_packed_ii swig_types[226]
#define SWIGTYPE_p_gr_unpacked_to_packed_ss swig_types[227]
#define SWIGTYPE_p_gr_vector_insert_b swig_types[228]
#define SWIGTYPE_p_gr_vector_sink_b swig_types[229]
#define SWIGTYPE_p_gr_vector_sink_c swig_types[230]
#define SWIGTYPE_p_gr_vector_sink_f swig_types[231]
#define SWIGTYPE_p_gr_vector_sink_i swig_types[232]
#define SWIGTYPE_p_gr_vector_sink_s swig_types[233]
#define SWIGTYPE_p_gr_vector_source_b swig_types[234]
#define SWIGTYPE_p_gr_vector_source_c swig_types[235]
#define SWIGTYPE_p_gr_vector_source_f swig_types[236]
#define SWIGTYPE_p_gr_vector_source_i swig_types[237]
#define SWIGTYPE_p_gr_vector_source_s swig_types[238]
#define SWIGTYPE_p_gr_waveform_t swig_types[239]
#define SWIGTYPE_p_gr_xor_bb swig_types[240]
#define SWIGTYPE_p_gr_xor_ii swig_types[241]
#define SWIGTYPE_p_gr_xor_ss swig_types[242]
#define SWIGTYPE_p_gruel__rt_status_t swig_types[243]
#define SWIGTYPE_p_long_long swig_types[244]
#define SWIGTYPE_p_size_type swig_types[245]
#define SWIGTYPE_p_std__complexT_double_t swig_types[246]
#define SWIGTYPE_p_std__complexT_float_t swig_types[247]
#define SWIGTYPE_p_std__invalid_argument swig_types[248]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[249]
#define SWIGTYPE_p_unsigned_long_long swig_types[250]
#define SWIGTYPE_p_value_type swig_types[251]
static swig_type_info *swig_types[253];
static swig_module_info swig_module = {swig_types, 252, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodern' option"
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodernargs' option"
#endif

/*-----------------------------------------------
              @(target):= _gnuradio_core_gengen.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__gnuradio_core_gengen

#else
#  define SWIG_init    init_gnuradio_core_gengen

#endif
#define SWIG_name    "_gnuradio_core_gengen"

#define SWIGVERSION 0x020004 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}



#define GR_PYTHON_BLOCKING_CODE(code) {                                 \
    PyThreadState *_save;                                               \
    _save = PyEval_SaveThread();                                        \
    try{code}                                                           \
    catch(...){PyEval_RestoreThread(_save); throw;}                     \
    PyEval_RestoreThread(_save);                                        \
}



#include "gnuradio_swig_bug_workaround.h"	// mandatory bug fix
#include <gr_types.h>
#include <stddef.h>		// size_t
#include <complex>


#include <complex> 


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>
#include <stdexcept>
#include <stddef.h>

  
namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_long   PyInt_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <stdexcept>


#include <algorithm>


#include <vector>


#include <string>


#include <utility>


#include <map>
#include <algorithm>
#include <stdexcept>


namespace swig {  
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };  
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> 
  struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }    
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }    
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category> 
  struct traits_as { };
 
  template <class Type, class Category> 
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p;
      int res = SWIG_ConvertPtr(obj, (void**)&p, type_info<Type>(), 0);
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	// Uninitialized return value, no Type() constructor required.
	static Type *v_def = (Type*) malloc(sizeof(Type));
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	memset(v_def,0,sizeof(Type));
	return *v_def;
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	return 0;
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj, bool te = false) {
    return traits_as<Type, typename traits<Type>::category>::as(obj, te);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>: public binary_function<PyObject *, PyObject *, bool>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>: public binary_function<swig::SwigPtr_PyObject, swig::SwigPtr_PyObject, bool>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>: public binary_function<swig::SwigVar_PyObject, swig::SwigVar_PyObject, bool>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  inline size_t
  check_index(ptrdiff_t i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    
    throw std::out_of_range("index out of range");
  }

  inline size_t
  slice_index(ptrdiff_t i, size_t size) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size) {
	return (size_t) (i + size);
      } else {
	throw std::out_of_range("index out of range");
      }
    } else {
      return ( (size_t) i < size ) ? ((size_t) i) : size;
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j) {
    typename Sequence::size_type size = self->size();
    typename Sequence::size_type ii = swig::check_index(i, size);
    typename Sequence::size_type jj = swig::slice_index(j, size);

    if (jj > ii) {
      typename Sequence::const_iterator vb = self->begin();
      typename Sequence::const_iterator ve = self->begin();
      std::advance(vb,ii);
      std::advance(ve,jj);
      return new Sequence(vb, ve);
    } else {
      return new Sequence();
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, const InputSeq& v = InputSeq()) {
    typename Sequence::size_type size = self->size();
    typename Sequence::size_type ii = swig::check_index(i, size, true);
    typename Sequence::size_type jj = swig::slice_index(j, size);
    if (jj < ii) jj = ii;
    size_t ssize = jj - ii;
    if (ssize <= v.size()) {
      typename Sequence::iterator sb = self->begin();
      typename InputSeq::const_iterator vmid = v.begin();
      std::advance(sb,ii);
      std::advance(vmid, jj - ii);
      self->insert(std::copy(v.begin(), vmid, sb), vmid, v.end());
    } else {
      typename Sequence::iterator sb = self->begin();
      typename Sequence::iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      self->erase(sb,se);
      self->insert(sb, v.begin(), v.end());
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j) {
    typename Sequence::size_type size = self->size();
    typename Sequence::size_type ii = swig::check_index(i, size, true);
    typename Sequence::size_type jj = swig::slice_index(j, size);
    if (jj > ii) {
      typename Sequence::iterator sb = self->begin();
      typename Sequence::iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      self->erase(sb,se);
    }
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }

  private:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item, true);
      } catch (std::exception& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", _index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    int _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;
    typedef int size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check(bool set_err = true) const
    {
      int s = size();
      for (int i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item)) {
	  if (set_err) {
	    char msg[1024];
	    sprintf(msg, "in sequence element %d", i);
	    SWIG_Error(SWIG_RuntimeError, msg);
	  }
	  return false;
	}
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


#include "gr_endianness.h"
#include "gr_sig_source_waveform.h"
#include "gr_noise_type.h"


SWIGINTERNINLINE PyObject *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


#include<gr_vector_source_b.h>
#include<gr_vector_source_s.h>
#include<gr_vector_source_i.h>
#include<gr_vector_source_f.h>
#include<gr_vector_source_c.h>
#include<gr_vector_insert_b.h>
#include<gr_vector_sink_b.h>
#include<gr_vector_sink_s.h>
#include<gr_vector_sink_i.h>
#include<gr_vector_sink_f.h>
#include<gr_vector_sink_c.h>
#include<gr_noise_source_s.h>
#include<gr_noise_source_i.h>
#include<gr_noise_source_f.h>
#include<gr_noise_source_c.h>
#include<gr_sig_source_s.h>
#include<gr_sig_source_i.h>
#include<gr_sig_source_f.h>
#include<gr_sig_source_c.h>
#include<gr_probe_signal_b.h>
#include<gr_probe_signal_s.h>
#include<gr_probe_signal_i.h>
#include<gr_probe_signal_f.h>
#include<gr_probe_signal_c.h>
#include<gr_probe_signal_vb.h>
#include<gr_probe_signal_vs.h>
#include<gr_probe_signal_vi.h>
#include<gr_probe_signal_vf.h>
#include<gr_probe_signal_vc.h>
#include<gr_add_const_ss.h>
#include<gr_add_const_ii.h>
#include<gr_add_const_ff.h>
#include<gr_add_const_cc.h>
#include<gr_add_const_sf.h>
#include<gr_multiply_const_ss.h>
#include<gr_multiply_const_ii.h>
#include<gr_add_ss.h>
#include<gr_add_ii.h>
#include<gr_add_cc.h>
#include<gr_sub_ss.h>
#include<gr_sub_ii.h>
#include<gr_sub_ff.h>
#include<gr_sub_cc.h>
#include<gr_multiply_ss.h>
#include<gr_multiply_ii.h>
#include<gr_divide_ss.h>
#include<gr_divide_ii.h>
#include<gr_divide_ff.h>
#include<gr_divide_cc.h>
#include<gr_mute_ss.h>
#include<gr_mute_ii.h>
#include<gr_mute_ff.h>
#include<gr_mute_cc.h>
#include<gr_add_const_vss.h>
#include<gr_add_const_vii.h>
#include<gr_add_const_vff.h>
#include<gr_add_const_vcc.h>
#include<gr_multiply_const_vss.h>
#include<gr_multiply_const_vii.h>
#include<gr_multiply_const_vff.h>
#include<gr_multiply_const_vcc.h>
#include<gr_integrate_ss.h>
#include<gr_integrate_ii.h>
#include<gr_integrate_ff.h>
#include<gr_integrate_cc.h>
#include<gr_moving_average_ss.h>
#include<gr_moving_average_ii.h>
#include<gr_moving_average_ff.h>
#include<gr_moving_average_cc.h>
#include<gr_chunks_to_symbols_bf.h>
#include<gr_chunks_to_symbols_bc.h>
#include<gr_chunks_to_symbols_sf.h>
#include<gr_chunks_to_symbols_sc.h>
#include<gr_chunks_to_symbols_if.h>
#include<gr_chunks_to_symbols_ic.h>
#include<gr_unpacked_to_packed_bb.h>
#include<gr_unpacked_to_packed_ss.h>
#include<gr_unpacked_to_packed_ii.h>
#include<gr_packed_to_unpacked_bb.h>
#include<gr_packed_to_unpacked_ss.h>
#include<gr_packed_to_unpacked_ii.h>
#include<gr_xor_bb.h>
#include<gr_xor_ss.h>
#include<gr_xor_ii.h>
#include<gr_and_bb.h>
#include<gr_and_ss.h>
#include<gr_and_ii.h>
#include<gr_and_const_bb.h>
#include<gr_and_const_ss.h>
#include<gr_and_const_ii.h>
#include<gr_or_bb.h>
#include<gr_or_ss.h>
#include<gr_or_ii.h>
#include<gr_not_bb.h>
#include<gr_not_ss.h>
#include<gr_not_ii.h>
#include<gr_sample_and_hold_bb.h>
#include<gr_sample_and_hold_ss.h>
#include<gr_sample_and_hold_ii.h>
#include<gr_sample_and_hold_ff.h>
#include<gr_argmax_fs.h>
#include<gr_argmax_is.h>
#include<gr_argmax_ss.h>
#include<gr_max_ff.h>
#include<gr_max_ii.h>
#include<gr_max_ss.h>
#include<gr_peak_detector_fb.h>
#include<gr_peak_detector_ib.h>
#include<gr_peak_detector_sb.h>


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_unsigned_SS_char (PyObject * obj, unsigned char *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UCHAR_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned char >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_char  (unsigned char value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


namespace swig {
  template <> struct traits<unsigned char > {
    typedef value_category category;
    static const char* type_name() { return"unsigned char"; }
  };  
  template <>  struct traits_asval<unsigned char > {   
    typedef unsigned char value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_unsigned_SS_char (obj, val);
    }
  };
  template <>  struct traits_from<unsigned char > {
    typedef unsigned char value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_unsigned_SS_char  (val);
    }
  };
}


namespace swig {
  template <class SwigPySeq, class Seq>
  inline void
  assign(const SwigPySeq& swigpyseq, Seq* seq) {
    // seq->assign(swigpyseq.begin(), swigpyseq.end()); // not used as not always implemented
    typedef typename SwigPySeq::value_type value_type;
    typename SwigPySeq::const_iterator it = swigpyseq.begin();
    for (;it != swigpyseq.end(); ++it) {
      seq->insert(seq->end(),(value_type)(*it));
    }
  }

  template <class Seq, class T = typename Seq::value_type >
  struct traits_asptr_stdseq {
    typedef Seq sequence;
    typedef T value_type;

    static int asptr(PyObject *obj, sequence **seq) {
      if (obj == Py_None || SWIG_Python_GetSwigThis(obj)) {
	sequence *p;
	if (::SWIG_ConvertPtr(obj,(void**)&p,
			      swig::type_info<sequence>(),0) == SWIG_OK) {
	  if (seq) *seq = p;
	  return SWIG_OLDOBJ;
	}
      } else if (PySequence_Check(obj)) {
	try {
	  SwigPySequence_Cont<value_type> swigpyseq(obj);
	  if (seq) {
	    sequence *pseq = new sequence();
	    assign(swigpyseq, pseq);
	    *seq = pseq;
	    return SWIG_NEWOBJ;
	  } else {
	    return swigpyseq.check() ? SWIG_OK : SWIG_ERROR;
	  }
	} catch (std::exception& e) {
	  if (seq) {
	    if (!PyErr_Occurred()) {
	      PyErr_SetString(PyExc_TypeError, e.what());
	    }
	  }
	  return SWIG_ERROR;
	}
      }
      return SWIG_ERROR;
    }
  };

  template <class Seq, class T = typename Seq::value_type >
  struct traits_from_stdseq {
    typedef Seq sequence;
    typedef T value_type;
    typedef typename Seq::size_type size_type;
    typedef typename sequence::const_iterator const_iterator;

    static PyObject *from(const sequence& seq) {
#ifdef SWIG_PYTHON_EXTRA_NATIVE_CONTAINERS
      swig_type_info *desc = swig::type_info<sequence>();
      if (desc && desc->clientdata) {
	return SWIG_NewPointerObj(new sequence(seq), desc, SWIG_POINTER_OWN);
      }
#endif
      size_type size = seq.size();
      if (size <= (size_type)INT_MAX) {
	PyObject *obj = PyTuple_New((int)size);
	int i = 0;
	for (const_iterator it = seq.begin();
	     it != seq.end(); ++it, ++i) {
	  PyTuple_SetItem(obj,i,swig::from<value_type>(*it));
	}
	return obj;
      } else {
	PyErr_SetString(PyExc_OverflowError,"sequence size not valid in python");
	return NULL;
      }
    }
  };
}


  namespace swig {
    template <class T>
    struct traits_asptr<std::vector<T> >  {
      static int asptr(PyObject *obj, std::vector<T> **vec) {
	return traits_asptr_stdseq<std::vector<T> >::asptr(obj, vec);
      }
    };
    
    template <class T>
    struct traits_from<std::vector<T> > {
      static PyObject *from(const std::vector<T>& vec) {
	return traits_from_stdseq<std::vector<T> >::from(vec);
      }
    };
  }


      namespace swig {
	template <>  struct traits<std::vector<unsigned char, std::allocator< unsigned char > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "unsigned char" "," "std::allocator< unsigned char >" " >";
	  }
	};
      }
    

SWIGINTERNINLINE PyObject *
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong(static_cast< long >(value)); 
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


SWIGINTERN int
SWIG_AsVal_short (PyObject * obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_short  (short value)
{    
  return SWIG_From_long  (value);
}


namespace swig {
  template <> struct traits<short > {
    typedef value_category category;
    static const char* type_name() { return"short"; }
  };  
  template <>  struct traits_asval<short > {   
    typedef short value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_short (obj, val);
    }
  };
  template <>  struct traits_from<short > {
    typedef short value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_short  (val);
    }
  };
}


      namespace swig {
	template <>  struct traits<std::vector<short, std::allocator< short > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "short" "," "std::allocator< short >" " >";
	  }
	};
      }
    

namespace swig {
  template <> struct traits<int > {
    typedef value_category category;
    static const char* type_name() { return"int"; }
  };  
  template <>  struct traits_asval<int > {   
    typedef int value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_int (obj, val);
    }
  };
  template <>  struct traits_from<int > {
    typedef int value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_int  (val);
    }
  };
}


      namespace swig {
	template <>  struct traits<std::vector<int, std::allocator< int > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "int" "," "std::allocator< int >" " >";
	  }
	};
      }
    

SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < -FLT_MAX || v > FLT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


namespace swig {
  template <> struct traits<float > {
    typedef value_category category;
    static const char* type_name() { return"float"; }
  };  
  template <>  struct traits_asval<float > {   
    typedef float value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_float (obj, val);
    }
  };
  template <>  struct traits_from<float > {
    typedef float value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_float  (val);
    }
  };
}


      namespace swig {
	template <>  struct traits<std::vector<float, std::allocator< float > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "float" "," "std::allocator< float >" " >";
	  }
	};
      }
    

SWIGINTERN int
SWIG_AsVal_std_complex_Sl_float_Sg_ (PyObject *o, std::complex<float> *val)
{
  if (PyComplex_Check(o)) {
    double re = PyComplex_RealAsDouble(o);
    double im = PyComplex_ImagAsDouble(o);
    if ((-FLT_MAX <= re && re <= FLT_MAX) && (-FLT_MAX <= im && im <= FLT_MAX)) {
      if (val) *val = std::complex<float>(static_cast< float >(re),
				  static_cast< float >(im));
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }    
  } else {
    float re;
    int res = SWIG_AddCast(SWIG_AsVal_float (o, &re));
    if (SWIG_IsOK(res)) {
      if (val) *val = std::complex<float>(re, 0.0);
      return res;
    }
  }
  return SWIG_TypeError;
}


SWIGINTERNINLINE PyObject*
SWIG_From_std_complex_Sl_float_Sg_  (/*@SWIG:/usr/share/swig2.0/typemaps/swigmacros.swg,104,%ifcplusplus@*/

const std::complex<float>&



/*@SWIG@*/ c)
{
  return PyComplex_FromDoubles(std::real(c), std::imag(c));
}


namespace swig {
  template <> struct traits<std::complex<float> > {
    typedef value_category category;
    static const char* type_name() { return"std::complex<float>"; }
  };  
  template <>  struct traits_asval<std::complex<float> > {   
    typedef std::complex<float> value_type;
    static int asval(PyObject *obj, value_type *val) { 
      return SWIG_AsVal_std_complex_Sl_float_Sg_ (obj, val);
    }
  };
  template <>  struct traits_from<std::complex<float> > {
    typedef std::complex<float> value_type;
    static PyObject *from(const value_type& val) {
      return SWIG_From_std_complex_Sl_float_Sg_  (val);
    }
  };
}


      namespace swig {
	template <>  struct traits<std::vector<std::complex< float >, std::allocator< std::complex< float > > > > {
	  typedef pointer_category category;
	  static const char* type_name() {
	    return "std::vector<" "std::complex< float >" "," "std::allocator< std::complex< float > >" " >";
	  }
	};
      }
    


/* ---------------------------------------------------
 * C++ director class methods
 * --------------------------------------------------- */

#include "gnuradio_core_gengenPYTHON_wrap.h"

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_SwigPyIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_value",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 = (size_t) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:SwigPyIterator_incr",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_size_t(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
  }
  {
    try {
      try {
        result = (swig::SwigPyIterator *)(arg1)->incr(arg2);
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  size_t arg2 = (size_t) 1 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  size_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:SwigPyIterator_decr",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  if (obj1) {
    ecode2 = SWIG_AsVal_size_t(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'");
    } 
    arg2 = static_cast< size_t >(val2);
  }
  {
    try {
      try {
        result = (swig::SwigPyIterator *)(arg1)->decr(arg2);
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "x", NULL 
  };
  ptrdiff_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator_distance",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      try {
        result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);
      }
      catch(std::invalid_argument &_e) {
        SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "x", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator_equal",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      try {
        result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);
      }
      catch(std::invalid_argument &_e) {
        SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail;
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_copy",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        result = (PyObject *)(arg1)->next();
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___next__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        result = (PyObject *)(arg1)->__next__();
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_previous",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  {
    try {
      try {
        result = (PyObject *)(arg1)->previous();
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = result;
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator_advance",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        result = (swig::SwigPyIterator *)(arg1)->advance(arg2);
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "x", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___eq__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "x", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___ne__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___iadd__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___isub__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "n", NULL 
  };
  swig::SwigPyIterator *result = 0 ;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:SwigPyIterator___add__",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  ptrdiff_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ptrdiff_t val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'");
  } 
  arg2 = static_cast< ptrdiff_t >(val2);
  {
    try {
      try {
        result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);
      }
      catch(swig::stop_iteration &_e) {
        {
          (void)_e;
          SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void());
          SWIG_fail;
        }
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ;
  swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  ptrdiff_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'"); 
  }
  arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); 
  }
  arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  {
    try {
      result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[3];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);
      }
    }
  }
  
fail:
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_gr_vector_source_b_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_b > *)new boost::shared_ptr< gr_vector_source_b >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_b_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_source_b *arg1 = (gr_vector_source_b *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_source_b > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_source_b_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_source_b, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_source_b_sptr" "', argument " "1"" of type '" "gr_vector_source_b *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_source_b * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_b > *)new boost::shared_ptr< gr_vector_source_b >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_b_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_source_b_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_source_b, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_source_b_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_source_b_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_source_b >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_source_b >::shared_ptr(gr_vector_source_b *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_source_b *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (gr_vector_source_b *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_source_b, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_source_b_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_source_b_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_source_b_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_rewind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_rewind",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_rewind" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      (*arg1)->rewind();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_set_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "data", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_b_sptr_set_data",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_set_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    std::vector<unsigned char,std::allocator< unsigned char > > *ptr = (std::vector<unsigned char,std::allocator< unsigned char > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_b_sptr_set_data" "', argument " "2"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_b_sptr_set_data" "', argument " "2"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_data((std::vector< unsigned char,std::allocator< unsigned char > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_b_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_b_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_b_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_b_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_b_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_b_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_b_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_b_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_b_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_b > *arg1 = (boost::shared_ptr< gr_vector_source_b > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_source_b_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_b_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_b > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_b_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_source_b_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_source_b_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_source_b(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg1 = 0 ;
  bool arg2 = (bool) false ;
  int arg3 = (int) 1 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "data",(char *) "repeat",(char *) "vlen", NULL 
  };
  gr_vector_source_b_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:vector_source_b",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::vector<unsigned char,std::allocator< unsigned char > > *ptr = (std::vector<unsigned char,std::allocator< unsigned char > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector_source_b" "', argument " "1"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector_source_b" "', argument " "1"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector_source_b" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vector_source_b" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      try {
        result = gr_make_vector_source_b((std::vector< unsigned char,std::allocator< unsigned char > > const &)*arg1,arg2,arg3);
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_source_b_sptr(static_cast< const gr_vector_source_b_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_b_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_s_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_s > *)new boost::shared_ptr< gr_vector_source_s >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_s_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_source_s *arg1 = (gr_vector_source_s *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_source_s > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_source_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_source_s, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_source_s_sptr" "', argument " "1"" of type '" "gr_vector_source_s *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_source_s * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_s > *)new boost::shared_ptr< gr_vector_source_s >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_s_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_source_s_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_source_s, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_source_s_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_source_s_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_source_s >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_source_s >::shared_ptr(gr_vector_source_s *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_source_s *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (gr_vector_source_s *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_source_s, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_source_s_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_source_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_source_s_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_rewind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_rewind",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_rewind" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      (*arg1)->rewind();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_set_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  std::vector< short,std::allocator< short > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "data", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_s_sptr_set_data",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_set_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    std::vector<short,std::allocator< short > > *ptr = (std::vector<short,std::allocator< short > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_s_sptr_set_data" "', argument " "2"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_s_sptr_set_data" "', argument " "2"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_data((std::vector< short,std::allocator< short > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_s_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_s_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_s_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_s_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_s_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_s_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_s_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_s > *arg1 = (boost::shared_ptr< gr_vector_source_s > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_source_s_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_s_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_s_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_source_s_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_source_s_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_source_s(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< short,std::allocator< short > > *arg1 = 0 ;
  bool arg2 = (bool) false ;
  int arg3 = (int) 1 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "data",(char *) "repeat",(char *) "vlen", NULL 
  };
  gr_vector_source_s_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:vector_source_s",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::vector<short,std::allocator< short > > *ptr = (std::vector<short,std::allocator< short > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector_source_s" "', argument " "1"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector_source_s" "', argument " "1"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector_source_s" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vector_source_s" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      try {
        result = gr_make_vector_source_s((std::vector< short,std::allocator< short > > const &)*arg1,arg2,arg3);
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_source_s_sptr(static_cast< const gr_vector_source_s_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_s_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_i_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_i > *)new boost::shared_ptr< gr_vector_source_i >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_i_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_source_i *arg1 = (gr_vector_source_i *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_source_i > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_source_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_source_i, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_source_i_sptr" "', argument " "1"" of type '" "gr_vector_source_i *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_source_i * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_i > *)new boost::shared_ptr< gr_vector_source_i >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_i_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_source_i_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_source_i, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_source_i_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_source_i_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_source_i >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_source_i >::shared_ptr(gr_vector_source_i *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_source_i *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (gr_vector_source_i *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_source_i, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_source_i_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_source_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_source_i_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_rewind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_rewind",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_rewind" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      (*arg1)->rewind();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_set_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  std::vector< int,std::allocator< int > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "data", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_i_sptr_set_data",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_set_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    std::vector<int,std::allocator< int > > *ptr = (std::vector<int,std::allocator< int > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_i_sptr_set_data" "', argument " "2"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_i_sptr_set_data" "', argument " "2"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_data((std::vector< int,std::allocator< int > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_i_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_i_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_i_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_i_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_i_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_i_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_i_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_i > *arg1 = (boost::shared_ptr< gr_vector_source_i > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_source_i_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_i_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_i_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_source_i_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_source_i_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_source_i(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int,std::allocator< int > > *arg1 = 0 ;
  bool arg2 = (bool) false ;
  int arg3 = (int) 1 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "data",(char *) "repeat",(char *) "vlen", NULL 
  };
  gr_vector_source_i_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:vector_source_i",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::vector<int,std::allocator< int > > *ptr = (std::vector<int,std::allocator< int > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector_source_i" "', argument " "1"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector_source_i" "', argument " "1"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector_source_i" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vector_source_i" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      try {
        result = gr_make_vector_source_i((std::vector< int,std::allocator< int > > const &)*arg1,arg2,arg3);
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_source_i_sptr(static_cast< const gr_vector_source_i_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_i_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_f_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_f > *)new boost::shared_ptr< gr_vector_source_f >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_f_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_source_f *arg1 = (gr_vector_source_f *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_source_f > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_source_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_source_f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_source_f_sptr" "', argument " "1"" of type '" "gr_vector_source_f *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_source_f * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_f > *)new boost::shared_ptr< gr_vector_source_f >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_f_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_source_f_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_source_f, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_source_f_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_source_f_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_source_f >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_source_f >::shared_ptr(gr_vector_source_f *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_source_f *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (gr_vector_source_f *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_source_f, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_source_f_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_source_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_source_f_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_rewind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_rewind",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_rewind" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      (*arg1)->rewind();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_set_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "data", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_f_sptr_set_data",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_set_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    std::vector<float,std::allocator< float > > *ptr = (std::vector<float,std::allocator< float > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_f_sptr_set_data" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_f_sptr_set_data" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_data((std::vector< float,std::allocator< float > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_f_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_f_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_f_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_f_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_f_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_f_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_f_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_f > *arg1 = (boost::shared_ptr< gr_vector_source_f > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_source_f_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_f_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_f_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_source_f_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_source_f_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_source_f(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< float,std::allocator< float > > *arg1 = 0 ;
  bool arg2 = (bool) false ;
  int arg3 = (int) 1 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "data",(char *) "repeat",(char *) "vlen", NULL 
  };
  gr_vector_source_f_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:vector_source_f",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::vector<float,std::allocator< float > > *ptr = (std::vector<float,std::allocator< float > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector_source_f" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector_source_f" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector_source_f" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vector_source_f" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      try {
        result = gr_make_vector_source_f((std::vector< float,std::allocator< float > > const &)*arg1,arg2,arg3);
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_source_f_sptr(static_cast< const gr_vector_source_f_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_f_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_c_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_c > *)new boost::shared_ptr< gr_vector_source_c >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_c_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_source_c *arg1 = (gr_vector_source_c *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_source_c > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_source_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_source_c, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_source_c_sptr" "', argument " "1"" of type '" "gr_vector_source_c *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_source_c * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_source_c > *)new boost::shared_ptr< gr_vector_source_c >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_source_c_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_source_c_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_source_c, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_source_c_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_source_c_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_source_c >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_source_c >::shared_ptr(gr_vector_source_c *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_source_c *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (gr_vector_source_c *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_source_c, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_source_c_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_source_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_source_c_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_rewind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_rewind",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_rewind" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      (*arg1)->rewind();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_set_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "data", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_c_sptr_set_data",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_set_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    std::vector<std::complex< float >,std::allocator< std::complex< float > > > *ptr = (std::vector<std::complex< float >,std::allocator< std::complex< float > > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_c_sptr_set_data" "', argument " "2"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_c_sptr_set_data" "', argument " "2"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_data((std::vector< gr_complex,std::allocator< gr_complex > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_c_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_c_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_c_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_c_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_source_c_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_source_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_source_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_source_c_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_source_c_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_source_c > *arg1 = (boost::shared_ptr< gr_vector_source_c > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_source_c_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_source_c_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_source_c_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_source_c_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_source_c_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_source_c(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< gr_complex,std::allocator< gr_complex > > *arg1 = 0 ;
  bool arg2 = (bool) false ;
  int arg3 = (int) 1 ;
  int res1 = SWIG_OLDOBJ ;
  bool val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "data",(char *) "repeat",(char *) "vlen", NULL 
  };
  gr_vector_source_c_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|OO:vector_source_c",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::vector<std::complex< float >,std::allocator< std::complex< float > > > *ptr = (std::vector<std::complex< float >,std::allocator< std::complex< float > > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector_source_c" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector_source_c" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_bool(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector_source_c" "', argument " "2"" of type '" "bool""'");
    } 
    arg2 = static_cast< bool >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vector_source_c" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      try {
        result = gr_make_vector_source_c((std::vector< std::complex< float >,std::allocator< std::complex< float > > > const &)*arg1,arg2,arg3);
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_source_c_sptr(static_cast< const gr_vector_source_c_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_source_c_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_insert_b_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_insert_b > *)new boost::shared_ptr< gr_vector_insert_b >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_insert_b_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_insert_b *arg1 = (gr_vector_insert_b *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_insert_b > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_insert_b_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_insert_b, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_insert_b_sptr" "', argument " "1"" of type '" "gr_vector_insert_b *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_insert_b * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_insert_b > *)new boost::shared_ptr< gr_vector_insert_b >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_insert_b_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_insert_b_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_insert_b, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_insert_b_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_insert_b_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_insert_b >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_insert_b >::shared_ptr(gr_vector_insert_b *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_insert_b *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (gr_vector_insert_b *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_insert_b, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_insert_b_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_insert_b_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_insert_b_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_rewind(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_rewind",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_rewind" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      (*arg1)->rewind();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_set_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "data", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_insert_b_sptr_set_data",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_set_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    std::vector<unsigned char,std::allocator< unsigned char > > *ptr = (std::vector<unsigned char,std::allocator< unsigned char > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_insert_b_sptr_set_data" "', argument " "2"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_insert_b_sptr_set_data" "', argument " "2"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_data((std::vector< unsigned char,std::allocator< unsigned char > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_insert_b_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_insert_b_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_insert_b_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_insert_b_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_insert_b_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_insert_b_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_insert_b_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_insert_b_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_insert_b_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_insert_b > *arg1 = (boost::shared_ptr< gr_vector_insert_b > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_insert_b_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_insert_b_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_insert_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_insert_b > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_insert_b_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_insert_b_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_insert_b_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_insert_b(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< unsigned char,std::allocator< unsigned char > > *arg1 = 0 ;
  int arg2 ;
  int arg3 = (int) 0 ;
  int res1 = SWIG_OLDOBJ ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "data",(char *) "periodicity",(char *) "offset", NULL 
  };
  gr_vector_insert_b_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:vector_insert_b",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  {
    std::vector<unsigned char,std::allocator< unsigned char > > *ptr = (std::vector<unsigned char,std::allocator< unsigned char > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "vector_insert_b" "', argument " "1"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "vector_insert_b" "', argument " "1"" of type '" "std::vector< unsigned char,std::allocator< unsigned char > > const &""'"); 
    }
    arg1 = ptr;
  }
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "vector_insert_b" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "vector_insert_b" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      try {
        result = gr_make_vector_insert_b((std::vector< unsigned char,std::allocator< unsigned char > > const &)*arg1,arg2,arg3);
      }
      catch(std::invalid_argument &_e) {
        SWIG_exception_fail(SWIG_ValueError, (&_e)->what());
      }
      
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_insert_b_sptr(static_cast< const gr_vector_insert_b_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_insert_b_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_b_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_b > *)new boost::shared_ptr< gr_vector_sink_b >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_b_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_sink_b *arg1 = (gr_vector_sink_b *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_sink_b > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_sink_b_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_sink_b, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_sink_b_sptr" "', argument " "1"" of type '" "gr_vector_sink_b *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_sink_b * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_b > *)new boost::shared_ptr< gr_vector_sink_b >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_b_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_sink_b_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_sink_b, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_sink_b_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_sink_b_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_sink_b >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_sink_b >::shared_ptr(gr_vector_sink_b *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_sink_b *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (gr_vector_sink_b *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_sink_b, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_sink_b_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_sink_b_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_sink_b_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_clear" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      (*arg1)->clear();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_reset" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      (*arg1)->reset();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_data",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (*arg1)->data();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<unsigned char,std::allocator< unsigned char > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_b_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_b_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_b_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_b_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_b_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_sink_b_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_sink_b_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_b_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_b_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_b > *arg1 = (boost::shared_ptr< gr_vector_sink_b > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_sink_b_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_b_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_b > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_b_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_sink_b_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_sink_b_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_sink_b(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 = (int) 1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_vector_sink_b_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:vector_sink_b",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_int(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "vector_sink_b" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
  }
  {
    try {
      result = gr_make_vector_sink_b(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_sink_b_sptr(static_cast< const gr_vector_sink_b_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_b_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_s_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_s > *)new boost::shared_ptr< gr_vector_sink_s >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_s_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_sink_s *arg1 = (gr_vector_sink_s *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_sink_s > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_sink_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_sink_s, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_sink_s_sptr" "', argument " "1"" of type '" "gr_vector_sink_s *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_sink_s * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_s > *)new boost::shared_ptr< gr_vector_sink_s >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_s_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_sink_s_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_sink_s, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_sink_s_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_sink_s_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_sink_s >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_sink_s >::shared_ptr(gr_vector_sink_s *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_sink_s *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (gr_vector_sink_s *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_sink_s, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_sink_s_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_sink_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_sink_s_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_clear" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      (*arg1)->clear();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_reset" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      (*arg1)->reset();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< short,std::allocator< short > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_data",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (*arg1)->data();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<short,std::allocator< short > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_s_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_s_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_s_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_s_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_s_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_sink_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_sink_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_s_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_s_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_s > *arg1 = (boost::shared_ptr< gr_vector_sink_s > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_sink_s_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_s_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_s > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_s_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_sink_s_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_sink_s_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_sink_s(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 = (int) 1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_vector_sink_s_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:vector_sink_s",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_int(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "vector_sink_s" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
  }
  {
    try {
      result = gr_make_vector_sink_s(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_sink_s_sptr(static_cast< const gr_vector_sink_s_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_s_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_i_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_i > *)new boost::shared_ptr< gr_vector_sink_i >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_i_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_sink_i *arg1 = (gr_vector_sink_i *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_sink_i > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_sink_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_sink_i, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_sink_i_sptr" "', argument " "1"" of type '" "gr_vector_sink_i *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_sink_i * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_i > *)new boost::shared_ptr< gr_vector_sink_i >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_i_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_sink_i_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_sink_i, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_sink_i_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_sink_i_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_sink_i >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_sink_i >::shared_ptr(gr_vector_sink_i *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_sink_i *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (gr_vector_sink_i *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_sink_i, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_sink_i_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_sink_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_sink_i_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_clear" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      (*arg1)->clear();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_reset" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      (*arg1)->reset();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int,std::allocator< int > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_data",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (*arg1)->data();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<int,std::allocator< int > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_i_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_i_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_i_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_i_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_i_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_sink_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_sink_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_i_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_i_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_i > *arg1 = (boost::shared_ptr< gr_vector_sink_i > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_sink_i_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_i_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_i > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_i_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_sink_i_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_sink_i_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_sink_i(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 = (int) 1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_vector_sink_i_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:vector_sink_i",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_int(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "vector_sink_i" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
  }
  {
    try {
      result = gr_make_vector_sink_i(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_sink_i_sptr(static_cast< const gr_vector_sink_i_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_i_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_f_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_f > *)new boost::shared_ptr< gr_vector_sink_f >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_f_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_sink_f *arg1 = (gr_vector_sink_f *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_sink_f > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_sink_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_sink_f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_sink_f_sptr" "', argument " "1"" of type '" "gr_vector_sink_f *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_sink_f * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_f > *)new boost::shared_ptr< gr_vector_sink_f >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_f_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_sink_f_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_sink_f, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_sink_f_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_sink_f_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_sink_f >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_sink_f >::shared_ptr(gr_vector_sink_f *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_sink_f *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (gr_vector_sink_f *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_sink_f, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_sink_f_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_sink_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_sink_f_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_clear" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      (*arg1)->clear();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_reset" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      (*arg1)->reset();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_data",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (*arg1)->data();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<float,std::allocator< float > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_f_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_f_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_f_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_f_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_f_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_sink_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_sink_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_f_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_f_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_f > *arg1 = (boost::shared_ptr< gr_vector_sink_f > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_sink_f_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_f_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_f > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_f_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_sink_f_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_sink_f_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_sink_f(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 = (int) 1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_vector_sink_f_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:vector_sink_f",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_int(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "vector_sink_f" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
  }
  {
    try {
      result = gr_make_vector_sink_f(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_sink_f_sptr(static_cast< const gr_vector_sink_f_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_f_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_c_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_c > *)new boost::shared_ptr< gr_vector_sink_c >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_c_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_vector_sink_c *arg1 = (gr_vector_sink_c *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_vector_sink_c > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_vector_sink_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_vector_sink_c, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_vector_sink_c_sptr" "', argument " "1"" of type '" "gr_vector_sink_c *""'"); 
  }
  arg1 = reinterpret_cast< gr_vector_sink_c * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_vector_sink_c > *)new boost::shared_ptr< gr_vector_sink_c >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_vector_sink_c_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_vector_sink_c_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_vector_sink_c, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_vector_sink_c_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_vector_sink_c_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_vector_sink_c >::shared_ptr()\n"
    "    boost::shared_ptr< gr_vector_sink_c >::shared_ptr(gr_vector_sink_c *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_vector_sink_c *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (gr_vector_sink_c *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_vector_sink_c, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_vector_sink_c_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_vector_sink_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_vector_sink_c_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_clear(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_clear" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      (*arg1)->clear();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_reset" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      (*arg1)->reset();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_data(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_data",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_data" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (*arg1)->data();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<std::complex< float >,std::allocator< std::complex< float > > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_c_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_c_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_c_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_c_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_vector_sink_c_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_vector_sink_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_vector_sink_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_vector_sink_c_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_vector_sink_c_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_vector_sink_c > *arg1 = (boost::shared_ptr< gr_vector_sink_c > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_vector_sink_c_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_vector_sink_c_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_vector_sink_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_vector_sink_c > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_vector_sink_c_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_vector_sink_c_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_vector_sink_c_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_vector_sink_c(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 = (int) 1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_vector_sink_c_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:vector_sink_c",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_int(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "vector_sink_c" "', argument " "1"" of type '" "int""'");
    } 
    arg1 = static_cast< int >(val1);
  }
  {
    try {
      result = gr_make_vector_sink_c(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_vector_sink_c_sptr(static_cast< const gr_vector_sink_c_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_vector_sink_c_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_s_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_noise_source_s > *)new boost::shared_ptr< gr_noise_source_s >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_s_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_noise_source_s *arg1 = (gr_noise_source_s *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_noise_source_s > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_noise_source_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_noise_source_s, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_noise_source_s_sptr" "', argument " "1"" of type '" "gr_noise_source_s *""'"); 
  }
  arg1 = reinterpret_cast< gr_noise_source_s * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_noise_source_s > *)new boost::shared_ptr< gr_noise_source_s >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_s_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_noise_source_s_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_noise_source_s, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_noise_source_s_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_noise_source_s_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_noise_source_s >::shared_ptr()\n"
    "    boost::shared_ptr< gr_noise_source_s >::shared_ptr(gr_noise_source_s *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_noise_source_s *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (gr_noise_source_s *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_noise_source_s, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_noise_source_s_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_noise_source_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_noise_source_s_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_set_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  gr_noise_type_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_s_sptr_set_type",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_set_type" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_s_sptr_set_type" "', argument " "2"" of type '" "gr_noise_type_t""'");
  } 
  arg2 = static_cast< gr_noise_type_t >(val2);
  {
    try {
      (*arg1)->set_type(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_set_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ampl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_s_sptr_set_amplitude",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_set_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_s_sptr_set_amplitude" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_amplitude(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_noise_type_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_type",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_type" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (gr_noise_type_t)(*arg1)->type();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_amplitude",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (float)(*arg1)->amplitude();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_s_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_s_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_s_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_s_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_s_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_noise_source_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_noise_source_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_s_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_s_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_s > *arg1 = (boost::shared_ptr< gr_noise_source_s > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_noise_source_s_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_s_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_s_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_noise_source_s_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_noise_source_s_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_noise_source_s(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  gr_noise_type_t arg1 ;
  float arg2 ;
  long arg3 = (long) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "type",(char *) "ampl",(char *) "seed", NULL 
  };
  gr_noise_source_s_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:noise_source_s",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "noise_source_s" "', argument " "1"" of type '" "gr_noise_type_t""'");
  } 
  arg1 = static_cast< gr_noise_type_t >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "noise_source_s" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_long(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "noise_source_s" "', argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    try {
      result = gr_make_noise_source_s(arg1,arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_noise_source_s_sptr(static_cast< const gr_noise_source_s_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_s_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_i_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_noise_source_i > *)new boost::shared_ptr< gr_noise_source_i >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_i_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_noise_source_i *arg1 = (gr_noise_source_i *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_noise_source_i > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_noise_source_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_noise_source_i, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_noise_source_i_sptr" "', argument " "1"" of type '" "gr_noise_source_i *""'"); 
  }
  arg1 = reinterpret_cast< gr_noise_source_i * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_noise_source_i > *)new boost::shared_ptr< gr_noise_source_i >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_i_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_noise_source_i_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_noise_source_i, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_noise_source_i_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_noise_source_i_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_noise_source_i >::shared_ptr()\n"
    "    boost::shared_ptr< gr_noise_source_i >::shared_ptr(gr_noise_source_i *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_noise_source_i *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (gr_noise_source_i *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_noise_source_i, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_noise_source_i_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_noise_source_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_noise_source_i_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_set_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  gr_noise_type_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_i_sptr_set_type",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_set_type" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_i_sptr_set_type" "', argument " "2"" of type '" "gr_noise_type_t""'");
  } 
  arg2 = static_cast< gr_noise_type_t >(val2);
  {
    try {
      (*arg1)->set_type(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_set_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ampl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_i_sptr_set_amplitude",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_set_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_i_sptr_set_amplitude" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_amplitude(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_noise_type_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_type",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_type" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (gr_noise_type_t)(*arg1)->type();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_amplitude",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (float)(*arg1)->amplitude();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_i_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_i_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_i_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_i_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_i_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_noise_source_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_noise_source_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_i_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_i_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_i > *arg1 = (boost::shared_ptr< gr_noise_source_i > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_noise_source_i_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_i_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_i_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_noise_source_i_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_noise_source_i_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_noise_source_i(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  gr_noise_type_t arg1 ;
  float arg2 ;
  long arg3 = (long) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "type",(char *) "ampl",(char *) "seed", NULL 
  };
  gr_noise_source_i_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:noise_source_i",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "noise_source_i" "', argument " "1"" of type '" "gr_noise_type_t""'");
  } 
  arg1 = static_cast< gr_noise_type_t >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "noise_source_i" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_long(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "noise_source_i" "', argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    try {
      result = gr_make_noise_source_i(arg1,arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_noise_source_i_sptr(static_cast< const gr_noise_source_i_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_i_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_f_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_noise_source_f > *)new boost::shared_ptr< gr_noise_source_f >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_f_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_noise_source_f *arg1 = (gr_noise_source_f *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_noise_source_f > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_noise_source_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_noise_source_f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_noise_source_f_sptr" "', argument " "1"" of type '" "gr_noise_source_f *""'"); 
  }
  arg1 = reinterpret_cast< gr_noise_source_f * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_noise_source_f > *)new boost::shared_ptr< gr_noise_source_f >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_f_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_noise_source_f_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_noise_source_f, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_noise_source_f_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_noise_source_f_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_noise_source_f >::shared_ptr()\n"
    "    boost::shared_ptr< gr_noise_source_f >::shared_ptr(gr_noise_source_f *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_noise_source_f *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (gr_noise_source_f *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_noise_source_f, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_noise_source_f_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_noise_source_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_noise_source_f_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_set_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  gr_noise_type_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_f_sptr_set_type",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_set_type" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_f_sptr_set_type" "', argument " "2"" of type '" "gr_noise_type_t""'");
  } 
  arg2 = static_cast< gr_noise_type_t >(val2);
  {
    try {
      (*arg1)->set_type(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_set_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ampl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_f_sptr_set_amplitude",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_set_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_f_sptr_set_amplitude" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_amplitude(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_noise_type_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_type",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_type" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (gr_noise_type_t)(*arg1)->type();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_amplitude",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (float)(*arg1)->amplitude();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_f_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_f_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_f_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_f_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_f_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_noise_source_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_noise_source_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_f_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_f_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_f > *arg1 = (boost::shared_ptr< gr_noise_source_f > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_noise_source_f_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_f_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_f_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_noise_source_f_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_noise_source_f_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_noise_source_f(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  gr_noise_type_t arg1 ;
  float arg2 ;
  long arg3 = (long) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "type",(char *) "ampl",(char *) "seed", NULL 
  };
  gr_noise_source_f_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:noise_source_f",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "noise_source_f" "', argument " "1"" of type '" "gr_noise_type_t""'");
  } 
  arg1 = static_cast< gr_noise_type_t >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "noise_source_f" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_long(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "noise_source_f" "', argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    try {
      result = gr_make_noise_source_f(arg1,arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_noise_source_f_sptr(static_cast< const gr_noise_source_f_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_f_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_c_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_noise_source_c > *)new boost::shared_ptr< gr_noise_source_c >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_c_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_noise_source_c *arg1 = (gr_noise_source_c *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_noise_source_c > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_noise_source_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_noise_source_c, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_noise_source_c_sptr" "', argument " "1"" of type '" "gr_noise_source_c *""'"); 
  }
  arg1 = reinterpret_cast< gr_noise_source_c * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_noise_source_c > *)new boost::shared_ptr< gr_noise_source_c >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_noise_source_c_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_noise_source_c_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_noise_source_c, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_noise_source_c_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_noise_source_c_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_noise_source_c >::shared_ptr()\n"
    "    boost::shared_ptr< gr_noise_source_c >::shared_ptr(gr_noise_source_c *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_noise_source_c *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (gr_noise_source_c *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_noise_source_c, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_noise_source_c_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_noise_source_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_noise_source_c_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_set_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  gr_noise_type_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "type", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_c_sptr_set_type",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_set_type" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_c_sptr_set_type" "', argument " "2"" of type '" "gr_noise_type_t""'");
  } 
  arg2 = static_cast< gr_noise_type_t >(val2);
  {
    try {
      (*arg1)->set_type(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_set_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ampl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_c_sptr_set_amplitude",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_set_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_c_sptr_set_amplitude" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_amplitude(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_type(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_noise_type_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_type",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_type" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (gr_noise_type_t)(*arg1)->type();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_amplitude",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (float)(*arg1)->amplitude();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_c_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_c_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_c_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_c_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_noise_source_c_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_noise_source_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_noise_source_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_noise_source_c_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_noise_source_c_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_noise_source_c > *arg1 = (boost::shared_ptr< gr_noise_source_c > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_noise_source_c_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_noise_source_c_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_noise_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_noise_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_noise_source_c_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_noise_source_c_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_noise_source_c_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_noise_source_c(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  gr_noise_type_t arg1 ;
  float arg2 ;
  long arg3 = (long) 0 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  long val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "type",(char *) "ampl",(char *) "seed", NULL 
  };
  gr_noise_source_c_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:noise_source_c",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "noise_source_c" "', argument " "1"" of type '" "gr_noise_type_t""'");
  } 
  arg1 = static_cast< gr_noise_type_t >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "noise_source_c" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_long(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "noise_source_c" "', argument " "3"" of type '" "long""'");
    } 
    arg3 = static_cast< long >(val3);
  }
  {
    try {
      result = gr_make_noise_source_c(arg1,arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_noise_source_c_sptr(static_cast< const gr_noise_source_c_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_noise_source_c_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_s_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sig_source_s > *)new boost::shared_ptr< gr_sig_source_s >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_s_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sig_source_s *arg1 = (gr_sig_source_s *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sig_source_s > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sig_source_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sig_source_s, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sig_source_s_sptr" "', argument " "1"" of type '" "gr_sig_source_s *""'"); 
  }
  arg1 = reinterpret_cast< gr_sig_source_s * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sig_source_s > *)new boost::shared_ptr< gr_sig_source_s >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_s_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sig_source_s_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sig_source_s, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sig_source_s_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sig_source_s_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sig_source_s >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sig_source_s >::shared_ptr(gr_sig_source_s *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sig_source_s *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (gr_sig_source_s *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sig_source_s, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sig_source_s_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sig_source_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sig_source_s_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_sampling_freq(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_sampling_freq",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_sampling_freq" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (double)(*arg1)->sampling_freq();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_waveform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_waveform_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_waveform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_waveform" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (gr_waveform_t)(*arg1)->waveform();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_frequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_frequency",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_frequency" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (double)(*arg1)->frequency();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_amplitude",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (double)(*arg1)->amplitude();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_offset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_offset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_offset" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (short)(*arg1)->offset();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_set_sampling_freq(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "sampling_freq", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_s_sptr_set_sampling_freq",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_set_sampling_freq" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_s_sptr_set_sampling_freq" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_sampling_freq(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_set_waveform(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  gr_waveform_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "waveform", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_s_sptr_set_waveform",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_set_waveform" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_s_sptr_set_waveform" "', argument " "2"" of type '" "gr_waveform_t""'");
  } 
  arg2 = static_cast< gr_waveform_t >(val2);
  {
    try {
      (*arg1)->set_waveform(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_set_frequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "frequency", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_s_sptr_set_frequency",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_set_frequency" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_s_sptr_set_frequency" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_frequency(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_set_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ampl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_s_sptr_set_amplitude",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_set_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_s_sptr_set_amplitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_amplitude(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_set_offset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "offset", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_s_sptr_set_offset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_set_offset" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_s_sptr_set_offset" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  {
    try {
      (*arg1)->set_offset(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_s_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_s_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_s_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_s_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_s_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sig_source_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sig_source_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_s_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_s_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_s > *arg1 = (boost::shared_ptr< gr_sig_source_s > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sig_source_s_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_s_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_s > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_s_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sig_source_s_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sig_source_s_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sig_source_s(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  gr_waveform_t arg2 ;
  double arg3 ;
  double arg4 ;
  short arg5 = (short) 0 ;
  double val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  short val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "sampling_freq",(char *) "waveform",(char *) "wave_freq",(char *) "ampl",(char *) "offset", NULL 
  };
  gr_sig_source_s_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:sig_source_s",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sig_source_s" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sig_source_s" "', argument " "2"" of type '" "gr_waveform_t""'");
  } 
  arg2 = static_cast< gr_waveform_t >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "sig_source_s" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "sig_source_s" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  if (obj4) {
    ecode5 = SWIG_AsVal_short(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "sig_source_s" "', argument " "5"" of type '" "short""'");
    } 
    arg5 = static_cast< short >(val5);
  }
  {
    try {
      result = gr_make_sig_source_s(arg1,arg2,arg3,arg4,arg5);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sig_source_s_sptr(static_cast< const gr_sig_source_s_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_s_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_i_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sig_source_i > *)new boost::shared_ptr< gr_sig_source_i >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_i_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sig_source_i *arg1 = (gr_sig_source_i *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sig_source_i > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sig_source_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sig_source_i, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sig_source_i_sptr" "', argument " "1"" of type '" "gr_sig_source_i *""'"); 
  }
  arg1 = reinterpret_cast< gr_sig_source_i * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sig_source_i > *)new boost::shared_ptr< gr_sig_source_i >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_i_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sig_source_i_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sig_source_i, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sig_source_i_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sig_source_i_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sig_source_i >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sig_source_i >::shared_ptr(gr_sig_source_i *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sig_source_i *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (gr_sig_source_i *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sig_source_i, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sig_source_i_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sig_source_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sig_source_i_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_sampling_freq(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_sampling_freq",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_sampling_freq" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (double)(*arg1)->sampling_freq();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_waveform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_waveform_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_waveform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_waveform" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (gr_waveform_t)(*arg1)->waveform();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_frequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_frequency",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_frequency" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (double)(*arg1)->frequency();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_amplitude",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (double)(*arg1)->amplitude();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_offset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_offset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_offset" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (int)(*arg1)->offset();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_set_sampling_freq(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "sampling_freq", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_i_sptr_set_sampling_freq",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_set_sampling_freq" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_i_sptr_set_sampling_freq" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_sampling_freq(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_set_waveform(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  gr_waveform_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "waveform", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_i_sptr_set_waveform",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_set_waveform" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_i_sptr_set_waveform" "', argument " "2"" of type '" "gr_waveform_t""'");
  } 
  arg2 = static_cast< gr_waveform_t >(val2);
  {
    try {
      (*arg1)->set_waveform(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_set_frequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "frequency", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_i_sptr_set_frequency",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_set_frequency" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_i_sptr_set_frequency" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_frequency(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_set_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ampl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_i_sptr_set_amplitude",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_set_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_i_sptr_set_amplitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_amplitude(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_set_offset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "offset", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_i_sptr_set_offset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_set_offset" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_i_sptr_set_offset" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_offset(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_i_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_i_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_i_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_i_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_i_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sig_source_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sig_source_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_i_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_i_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_i > *arg1 = (boost::shared_ptr< gr_sig_source_i > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sig_source_i_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_i_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_i > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_i_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sig_source_i_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sig_source_i_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sig_source_i(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  gr_waveform_t arg2 ;
  double arg3 ;
  double arg4 ;
  int arg5 = (int) 0 ;
  double val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "sampling_freq",(char *) "waveform",(char *) "wave_freq",(char *) "ampl",(char *) "offset", NULL 
  };
  gr_sig_source_i_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:sig_source_i",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sig_source_i" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sig_source_i" "', argument " "2"" of type '" "gr_waveform_t""'");
  } 
  arg2 = static_cast< gr_waveform_t >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "sig_source_i" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "sig_source_i" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  if (obj4) {
    ecode5 = SWIG_AsVal_int(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "sig_source_i" "', argument " "5"" of type '" "int""'");
    } 
    arg5 = static_cast< int >(val5);
  }
  {
    try {
      result = gr_make_sig_source_i(arg1,arg2,arg3,arg4,arg5);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sig_source_i_sptr(static_cast< const gr_sig_source_i_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_i_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_f_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sig_source_f > *)new boost::shared_ptr< gr_sig_source_f >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_f_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sig_source_f *arg1 = (gr_sig_source_f *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sig_source_f > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sig_source_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sig_source_f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sig_source_f_sptr" "', argument " "1"" of type '" "gr_sig_source_f *""'"); 
  }
  arg1 = reinterpret_cast< gr_sig_source_f * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sig_source_f > *)new boost::shared_ptr< gr_sig_source_f >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_f_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sig_source_f_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sig_source_f, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sig_source_f_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sig_source_f_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sig_source_f >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sig_source_f >::shared_ptr(gr_sig_source_f *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sig_source_f *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (gr_sig_source_f *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sig_source_f, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sig_source_f_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sig_source_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sig_source_f_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_sampling_freq(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_sampling_freq",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_sampling_freq" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (double)(*arg1)->sampling_freq();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_waveform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_waveform_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_waveform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_waveform" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (gr_waveform_t)(*arg1)->waveform();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_frequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_frequency",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_frequency" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (double)(*arg1)->frequency();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_amplitude",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (double)(*arg1)->amplitude();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_offset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_offset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_offset" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (float)(*arg1)->offset();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_set_sampling_freq(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "sampling_freq", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_f_sptr_set_sampling_freq",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_set_sampling_freq" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_f_sptr_set_sampling_freq" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_sampling_freq(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_set_waveform(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  gr_waveform_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "waveform", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_f_sptr_set_waveform",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_set_waveform" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_f_sptr_set_waveform" "', argument " "2"" of type '" "gr_waveform_t""'");
  } 
  arg2 = static_cast< gr_waveform_t >(val2);
  {
    try {
      (*arg1)->set_waveform(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_set_frequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "frequency", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_f_sptr_set_frequency",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_set_frequency" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_f_sptr_set_frequency" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_frequency(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_set_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ampl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_f_sptr_set_amplitude",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_set_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_f_sptr_set_amplitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_amplitude(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_set_offset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "offset", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_f_sptr_set_offset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_set_offset" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_f_sptr_set_offset" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_offset(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_f_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_f_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_f_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_f_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_f_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sig_source_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sig_source_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_f_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_f_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_f > *arg1 = (boost::shared_ptr< gr_sig_source_f > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sig_source_f_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_f_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_f > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_f_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sig_source_f_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sig_source_f_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sig_source_f(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  gr_waveform_t arg2 ;
  double arg3 ;
  double arg4 ;
  float arg5 = (float) 0 ;
  double val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "sampling_freq",(char *) "waveform",(char *) "wave_freq",(char *) "ampl",(char *) "offset", NULL 
  };
  gr_sig_source_f_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:sig_source_f",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sig_source_f" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sig_source_f" "', argument " "2"" of type '" "gr_waveform_t""'");
  } 
  arg2 = static_cast< gr_waveform_t >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "sig_source_f" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "sig_source_f" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  if (obj4) {
    ecode5 = SWIG_AsVal_float(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "sig_source_f" "', argument " "5"" of type '" "float""'");
    } 
    arg5 = static_cast< float >(val5);
  }
  {
    try {
      result = gr_make_sig_source_f(arg1,arg2,arg3,arg4,arg5);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sig_source_f_sptr(static_cast< const gr_sig_source_f_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_f_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_c_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sig_source_c > *)new boost::shared_ptr< gr_sig_source_c >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_c_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sig_source_c *arg1 = (gr_sig_source_c *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sig_source_c > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sig_source_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sig_source_c, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sig_source_c_sptr" "', argument " "1"" of type '" "gr_sig_source_c *""'"); 
  }
  arg1 = reinterpret_cast< gr_sig_source_c * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sig_source_c > *)new boost::shared_ptr< gr_sig_source_c >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sig_source_c_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sig_source_c_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sig_source_c, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sig_source_c_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sig_source_c_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sig_source_c >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sig_source_c >::shared_ptr(gr_sig_source_c *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sig_source_c *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (gr_sig_source_c *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sig_source_c, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sig_source_c_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sig_source_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sig_source_c_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_sampling_freq(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_sampling_freq",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_sampling_freq" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (double)(*arg1)->sampling_freq();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_waveform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_waveform_t result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_waveform",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_waveform" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (gr_waveform_t)(*arg1)->waveform();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_frequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_frequency",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_frequency" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (double)(*arg1)->frequency();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_amplitude",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (double)(*arg1)->amplitude();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_offset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_complex result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_offset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_offset" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->offset();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_complex_Sl_float_Sg_(static_cast< std::complex<float> >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_set_sampling_freq(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "sampling_freq", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_c_sptr_set_sampling_freq",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_set_sampling_freq" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_c_sptr_set_sampling_freq" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_sampling_freq(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_set_waveform(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  gr_waveform_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "waveform", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_c_sptr_set_waveform",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_set_waveform" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_c_sptr_set_waveform" "', argument " "2"" of type '" "gr_waveform_t""'");
  } 
  arg2 = static_cast< gr_waveform_t >(val2);
  {
    try {
      (*arg1)->set_waveform(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_set_frequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "frequency", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_c_sptr_set_frequency",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_set_frequency" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_c_sptr_set_frequency" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_frequency(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_set_amplitude(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ampl", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_c_sptr_set_amplitude",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_set_amplitude" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_c_sptr_set_amplitude" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  {
    try {
      (*arg1)->set_amplitude(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_set_offset(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  gr_complex arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::complex< float > val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "offset", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_c_sptr_set_offset",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_set_offset" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_std_complex_Sl_float_Sg_(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_c_sptr_set_offset" "', argument " "2"" of type '" "gr_complex""'");
  } 
  arg2 = static_cast< gr_complex >(val2);
  {
    try {
      (*arg1)->set_offset(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_c_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_c_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_c_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_c_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sig_source_c_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sig_source_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sig_source_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sig_source_c_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sig_source_c_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sig_source_c > *arg1 = (boost::shared_ptr< gr_sig_source_c > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sig_source_c_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sig_source_c_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sig_source_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sig_source_c > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sig_source_c_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sig_source_c_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sig_source_c_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sig_source_c(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  double arg1 ;
  gr_waveform_t arg2 ;
  double arg3 ;
  double arg4 ;
  gr_complex arg5 = (gr_complex) 0 ;
  double val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  std::complex< float > val5 ;
  int ecode5 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  char *  kwnames[] = {
    (char *) "sampling_freq",(char *) "waveform",(char *) "wave_freq",(char *) "ampl",(char *) "offset", NULL 
  };
  gr_sig_source_c_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOOO|O:sig_source_c",kwnames,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sig_source_c" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "sig_source_c" "', argument " "2"" of type '" "gr_waveform_t""'");
  } 
  arg2 = static_cast< gr_waveform_t >(val2);
  ecode3 = SWIG_AsVal_double(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "sig_source_c" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "sig_source_c" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  if (obj4) {
    ecode5 = SWIG_AsVal_std_complex_Sl_float_Sg_(obj4, &val5);
    if (!SWIG_IsOK(ecode5)) {
      SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "sig_source_c" "', argument " "5"" of type '" "gr_complex""'");
    } 
    arg5 = static_cast< gr_complex >(val5);
  }
  {
    try {
      result = gr_make_sig_source_c(arg1,arg2,arg3,arg4,arg5);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sig_source_c_sptr(static_cast< const gr_sig_source_c_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sig_source_c_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_b_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_b > *)new boost::shared_ptr< gr_probe_signal_b >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_b_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_b *arg1 = (gr_probe_signal_b *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_b > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_b_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_b, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_b_sptr" "', argument " "1"" of type '" "gr_probe_signal_b *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_b * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_b > *)new boost::shared_ptr< gr_probe_signal_b >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_b_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_b_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_b, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_b_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_b_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_b >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_b >::shared_ptr(gr_probe_signal_b *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_b *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (gr_probe_signal_b *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_b, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_b_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_b_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_b_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (unsigned char)(*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_b_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_b_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_b_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_b_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_b_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_b_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_b_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_b_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_b_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_b > *arg1 = (boost::shared_ptr< gr_probe_signal_b > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_b_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_b_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_b > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_b > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_b_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_b_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_b_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_b(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_b_sptr result;
  
  {
    try {
      result = gr_make_probe_signal_b();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_b_sptr(static_cast< const gr_probe_signal_b_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_b_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_s_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_s > *)new boost::shared_ptr< gr_probe_signal_s >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_s_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_s *arg1 = (gr_probe_signal_s *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_s > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_s, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_s_sptr" "', argument " "1"" of type '" "gr_probe_signal_s *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_s * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_s > *)new boost::shared_ptr< gr_probe_signal_s >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_s_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_s_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_s, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_s_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_s_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_s >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_s >::shared_ptr(gr_probe_signal_s *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_s *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (gr_probe_signal_s *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_s, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_s_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_s_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_s_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (short)(*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_s_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_s_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_s_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_s_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_s_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_s_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_s_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_s_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_s > *arg1 = (boost::shared_ptr< gr_probe_signal_s > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_s_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_s_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_s > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_s > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_s_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_s_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_s_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_s(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_s_sptr result;
  
  {
    try {
      result = gr_make_probe_signal_s();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_s_sptr(static_cast< const gr_probe_signal_s_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_s_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_i_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_i > *)new boost::shared_ptr< gr_probe_signal_i >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_i_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_i *arg1 = (gr_probe_signal_i *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_i > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_i, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_i_sptr" "', argument " "1"" of type '" "gr_probe_signal_i *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_i * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_i > *)new boost::shared_ptr< gr_probe_signal_i >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_i_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_i_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_i, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_i_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_i_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_i >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_i >::shared_ptr(gr_probe_signal_i *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_i *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (gr_probe_signal_i *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_i, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_i_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_i_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_i_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (int)(*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_i_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_i_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_i_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_i_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_i_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_i_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_i_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_i_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_i > *arg1 = (boost::shared_ptr< gr_probe_signal_i > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_i_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_i_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_i > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_i > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_i_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_i_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_i_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_i(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_i_sptr result;
  
  {
    try {
      result = gr_make_probe_signal_i();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_i_sptr(static_cast< const gr_probe_signal_i_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_i_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_f_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_f > *)new boost::shared_ptr< gr_probe_signal_f >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_f_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_f *arg1 = (gr_probe_signal_f *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_f > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_f, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_f_sptr" "', argument " "1"" of type '" "gr_probe_signal_f *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_f * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_f > *)new boost::shared_ptr< gr_probe_signal_f >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_f_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_f_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_f, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_f_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_f_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_f >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_f >::shared_ptr(gr_probe_signal_f *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_f *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (gr_probe_signal_f *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_f, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_f_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_f_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_f_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (float)(*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_f_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_f_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_f_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_f_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_f_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_f_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_f_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_f_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_f > *arg1 = (boost::shared_ptr< gr_probe_signal_f > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_f_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_f_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_f > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_f > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_f_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_f_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_f_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_f(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_f_sptr result;
  
  {
    try {
      result = gr_make_probe_signal_f();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_f_sptr(static_cast< const gr_probe_signal_f_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_f_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_c_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_c > *)new boost::shared_ptr< gr_probe_signal_c >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_c_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_c *arg1 = (gr_probe_signal_c *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_c > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_c, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_c_sptr" "', argument " "1"" of type '" "gr_probe_signal_c *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_c * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_c > *)new boost::shared_ptr< gr_probe_signal_c >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_c_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_c_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_c, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_c_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_c_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_c >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_c >::shared_ptr(gr_probe_signal_c *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_c *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (gr_probe_signal_c *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_c, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_c_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_c_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_c_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_complex result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_complex_Sl_float_Sg_(static_cast< std::complex<float> >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_c_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_c_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_c_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_c_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_c_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_c_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_c_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_c_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_c > *arg1 = (boost::shared_ptr< gr_probe_signal_c > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_c_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_c_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_c > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_c > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_c_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_c_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_c_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_c(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_c_sptr result;
  
  {
    try {
      result = gr_make_probe_signal_c();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_c_sptr(static_cast< const gr_probe_signal_c_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_c_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vb > *)new boost::shared_ptr< gr_probe_signal_vb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_vb *arg1 = (gr_probe_signal_vb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_vb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_vb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_vb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_vb_sptr" "', argument " "1"" of type '" "gr_probe_signal_vb *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_vb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vb > *)new boost::shared_ptr< gr_probe_signal_vb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_vb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_vb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_vb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_vb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_vb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_vb >::shared_ptr(gr_probe_signal_vb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_vb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (gr_probe_signal_vb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_vb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_vb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_vb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_vb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< unsigned char,std::allocator< unsigned char > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<unsigned char,std::allocator< unsigned char > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_vb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_vb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vb > *arg1 = (boost::shared_ptr< gr_probe_signal_vb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_vb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_vb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_vb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_vb(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "size", NULL 
  };
  gr_probe_signal_vb_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:probe_signal_vb",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "probe_signal_vb" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_probe_signal_vb(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_vb_sptr(static_cast< const gr_probe_signal_vb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vs_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vs > *)new boost::shared_ptr< gr_probe_signal_vs >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vs_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_vs *arg1 = (gr_probe_signal_vs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_vs > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_vs_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_vs, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_vs_sptr" "', argument " "1"" of type '" "gr_probe_signal_vs *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_vs * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vs > *)new boost::shared_ptr< gr_probe_signal_vs >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vs_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_vs_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_vs, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_vs_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_vs_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_vs >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_vs >::shared_ptr(gr_probe_signal_vs *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_vs *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (gr_probe_signal_vs *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_vs, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_vs_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_vs_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_vs_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< short,std::allocator< short > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<short,std::allocator< short > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vs_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vs_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vs_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vs_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vs_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_vs_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_vs_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vs_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vs_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vs > *arg1 = (boost::shared_ptr< gr_probe_signal_vs > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_vs_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vs_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vs > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vs_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_vs_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_vs_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_vs(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "size", NULL 
  };
  gr_probe_signal_vs_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:probe_signal_vs",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "probe_signal_vs" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_probe_signal_vs(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_vs_sptr(static_cast< const gr_probe_signal_vs_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vs_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vi_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vi > *)new boost::shared_ptr< gr_probe_signal_vi >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vi_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_vi *arg1 = (gr_probe_signal_vi *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_vi > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_vi_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_vi, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_vi_sptr" "', argument " "1"" of type '" "gr_probe_signal_vi *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_vi * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vi > *)new boost::shared_ptr< gr_probe_signal_vi >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vi_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_vi_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_vi, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_vi_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_vi_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_vi >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_vi >::shared_ptr(gr_probe_signal_vi *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_vi *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (gr_probe_signal_vi *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_vi, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_vi_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_vi_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_vi_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int,std::allocator< int > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<int,std::allocator< int > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vi_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vi_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vi_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vi_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vi_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_vi_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_vi_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vi_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vi_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vi > *arg1 = (boost::shared_ptr< gr_probe_signal_vi > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_vi_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vi_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vi > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vi > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vi_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_vi_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_vi_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_vi(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "size", NULL 
  };
  gr_probe_signal_vi_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:probe_signal_vi",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "probe_signal_vi" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_probe_signal_vi(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_vi_sptr(static_cast< const gr_probe_signal_vi_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vi_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vf_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vf > *)new boost::shared_ptr< gr_probe_signal_vf >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vf_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_vf *arg1 = (gr_probe_signal_vf *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_vf > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_vf_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_vf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_vf_sptr" "', argument " "1"" of type '" "gr_probe_signal_vf *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_vf * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vf > *)new boost::shared_ptr< gr_probe_signal_vf >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vf_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_vf_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_vf, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_vf_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_vf_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_vf >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_vf >::shared_ptr(gr_probe_signal_vf *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_vf *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (gr_probe_signal_vf *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_vf, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_vf_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_vf_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_vf_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<float,std::allocator< float > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vf_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vf_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vf_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vf_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vf_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_vf_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_vf_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vf_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vf_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vf > *arg1 = (boost::shared_ptr< gr_probe_signal_vf > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_vf_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vf_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vf > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vf_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_vf_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_vf_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_vf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "size", NULL 
  };
  gr_probe_signal_vf_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:probe_signal_vf",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "probe_signal_vf" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_probe_signal_vf(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_vf_sptr(static_cast< const gr_probe_signal_vf_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vf_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vc > *)new boost::shared_ptr< gr_probe_signal_vc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_probe_signal_vc *arg1 = (gr_probe_signal_vc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_probe_signal_vc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_probe_signal_vc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_probe_signal_vc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_probe_signal_vc_sptr" "', argument " "1"" of type '" "gr_probe_signal_vc *""'"); 
  }
  arg1 = reinterpret_cast< gr_probe_signal_vc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_probe_signal_vc > *)new boost::shared_ptr< gr_probe_signal_vc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_probe_signal_vc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_probe_signal_vc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_probe_signal_vc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_probe_signal_vc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_probe_signal_vc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_probe_signal_vc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_probe_signal_vc >::shared_ptr(gr_probe_signal_vc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_probe_signal_vc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (gr_probe_signal_vc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_probe_signal_vc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_probe_signal_vc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_probe_signal_vc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_probe_signal_vc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_level(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_level",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_level" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (*arg1)->level();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<std::complex< float >,std::allocator< std::complex< float > > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_probe_signal_vc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_probe_signal_vc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_probe_signal_vc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_probe_signal_vc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_probe_signal_vc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_probe_signal_vc > *arg1 = (boost::shared_ptr< gr_probe_signal_vc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_probe_signal_vc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_probe_signal_vc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_probe_signal_vc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_probe_signal_vc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_probe_signal_vc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_probe_signal_vc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_probe_signal_vc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_probe_signal_vc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "size", NULL 
  };
  gr_probe_signal_vc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:probe_signal_vc",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "probe_signal_vc" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_probe_signal_vc(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_probe_signal_vc_sptr(static_cast< const gr_probe_signal_vc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_probe_signal_vc_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_const_ss > *)new boost::shared_ptr< gr_add_const_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_const_ss *arg1 = (gr_add_const_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_const_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_const_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_const_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_const_ss_sptr" "', argument " "1"" of type '" "gr_add_const_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_const_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_const_ss > *)new boost::shared_ptr< gr_add_const_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_const_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_const_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_const_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_const_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_const_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_const_ss >::shared_ptr(gr_add_const_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_const_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (gr_add_const_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_const_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_const_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_const_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_const_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (short)(*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ss_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ss_sptr_set_k" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ss > *arg1 = (boost::shared_ptr< gr_add_const_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_const_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_const_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_const_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_const_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  short arg1 ;
  short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_add_const_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:add_const_ss",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "add_const_ss" "', argument " "1"" of type '" "short""'");
  } 
  arg1 = static_cast< short >(val1);
  {
    try {
      result = gr_make_add_const_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_const_ss_sptr(static_cast< const gr_add_const_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_const_ii > *)new boost::shared_ptr< gr_add_const_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_const_ii *arg1 = (gr_add_const_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_const_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_const_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_const_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_const_ii_sptr" "', argument " "1"" of type '" "gr_add_const_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_const_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_const_ii > *)new boost::shared_ptr< gr_add_const_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_const_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_const_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_const_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_const_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_const_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_const_ii >::shared_ptr(gr_add_const_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_const_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (gr_add_const_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_const_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_const_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_const_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_const_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ii_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ii_sptr_set_k" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ii > *arg1 = (boost::shared_ptr< gr_add_const_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_const_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_const_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_const_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_const_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_add_const_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:add_const_ii",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "add_const_ii" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = gr_make_add_const_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_const_ii_sptr(static_cast< const gr_add_const_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_ff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_const_ff > *)new boost::shared_ptr< gr_add_const_ff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_ff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_const_ff *arg1 = (gr_add_const_ff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_const_ff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_const_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_const_ff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_const_ff_sptr" "', argument " "1"" of type '" "gr_add_const_ff *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_const_ff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_const_ff > *)new boost::shared_ptr< gr_add_const_ff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_ff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_const_ff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_const_ff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_const_ff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_const_ff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_const_ff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_const_ff >::shared_ptr(gr_add_const_ff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_const_ff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (gr_add_const_ff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_const_ff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_const_ff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_const_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_const_ff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (float)(*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ff_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ff_sptr_set_k" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_ff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_ff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_ff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_ff > *arg1 = (boost::shared_ptr< gr_add_const_ff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_const_ff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_ff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_ff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_ff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_const_ff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_const_ff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_const_ff(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_add_const_ff_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:add_const_ff",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "add_const_ff" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  {
    try {
      result = gr_make_add_const_ff(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_const_ff_sptr(static_cast< const gr_add_const_ff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_ff_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_cc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_const_cc > *)new boost::shared_ptr< gr_add_const_cc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_cc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_const_cc *arg1 = (gr_add_const_cc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_const_cc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_const_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_const_cc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_const_cc_sptr" "', argument " "1"" of type '" "gr_add_const_cc *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_const_cc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_const_cc > *)new boost::shared_ptr< gr_add_const_cc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_cc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_const_cc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_const_cc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_const_cc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_const_cc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_const_cc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_const_cc >::shared_ptr(gr_add_const_cc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_const_cc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (gr_add_const_cc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_const_cc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_const_cc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_const_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_const_cc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_complex result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_complex_Sl_float_Sg_(static_cast< std::complex<float> >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  gr_complex arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  std::complex< float > val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_cc_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  ecode2 = SWIG_AsVal_std_complex_Sl_float_Sg_(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_cc_sptr_set_k" "', argument " "2"" of type '" "gr_complex""'");
  } 
  arg2 = static_cast< gr_complex >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_cc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_cc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_cc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_cc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_cc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_cc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_cc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_cc > *arg1 = (boost::shared_ptr< gr_add_const_cc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_const_cc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_cc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_cc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_cc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_const_cc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_const_cc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_const_cc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  gr_complex arg1 ;
  std::complex< float > val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_add_const_cc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:add_const_cc",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_std_complex_Sl_float_Sg_(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "add_const_cc" "', argument " "1"" of type '" "gr_complex""'");
  } 
  arg1 = static_cast< gr_complex >(val1);
  {
    try {
      result = gr_make_add_const_cc(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_const_cc_sptr(static_cast< const gr_add_const_cc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_cc_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_sf_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_const_sf > *)new boost::shared_ptr< gr_add_const_sf >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_sf_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_const_sf *arg1 = (gr_add_const_sf *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_const_sf > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_const_sf_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_const_sf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_const_sf_sptr" "', argument " "1"" of type '" "gr_add_const_sf *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_const_sf * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_const_sf > *)new boost::shared_ptr< gr_add_const_sf >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_sf_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_const_sf_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_const_sf, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_const_sf_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_const_sf_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_const_sf >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_const_sf >::shared_ptr(gr_add_const_sf *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_const_sf *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (gr_add_const_sf *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_const_sf, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_const_sf_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_const_sf_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_const_sf_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (short)(*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_sf_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_sf_sptr_set_k" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_sf_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_sf_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_sf_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_sf_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_sf_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_sf_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_sf_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_sf_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_sf_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_sf > *arg1 = (boost::shared_ptr< gr_add_const_sf > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_const_sf_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_sf_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_sf > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_sf_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_const_sf_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_const_sf_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_const_sf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  short arg1 ;
  short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_add_const_sf_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:add_const_sf",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "add_const_sf" "', argument " "1"" of type '" "short""'");
  } 
  arg1 = static_cast< short >(val1);
  {
    try {
      result = gr_make_add_const_sf(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_const_sf_sptr(static_cast< const gr_add_const_sf_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_sf_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_ss > *)new boost::shared_ptr< gr_multiply_const_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_multiply_const_ss *arg1 = (gr_multiply_const_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_multiply_const_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_multiply_const_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_multiply_const_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_multiply_const_ss_sptr" "', argument " "1"" of type '" "gr_multiply_const_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_multiply_const_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_ss > *)new boost::shared_ptr< gr_multiply_const_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_multiply_const_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_multiply_const_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_multiply_const_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_multiply_const_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_multiply_const_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_multiply_const_ss >::shared_ptr(gr_multiply_const_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_multiply_const_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (gr_multiply_const_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_multiply_const_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_multiply_const_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_multiply_const_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_multiply_const_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (short)(*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_ss_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_ss_sptr_set_k" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ss > *arg1 = (boost::shared_ptr< gr_multiply_const_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_multiply_const_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_multiply_const_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_multiply_const_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_multiply_const_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  short arg1 ;
  short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_multiply_const_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:multiply_const_ss",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "multiply_const_ss" "', argument " "1"" of type '" "short""'");
  } 
  arg1 = static_cast< short >(val1);
  {
    try {
      result = gr_make_multiply_const_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_multiply_const_ss_sptr(static_cast< const gr_multiply_const_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_ii > *)new boost::shared_ptr< gr_multiply_const_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_multiply_const_ii *arg1 = (gr_multiply_const_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_multiply_const_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_multiply_const_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_multiply_const_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_multiply_const_ii_sptr" "', argument " "1"" of type '" "gr_multiply_const_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_multiply_const_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_ii > *)new boost::shared_ptr< gr_multiply_const_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_multiply_const_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_multiply_const_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_multiply_const_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_multiply_const_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_multiply_const_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_multiply_const_ii >::shared_ptr(gr_multiply_const_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_multiply_const_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (gr_multiply_const_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_multiply_const_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_multiply_const_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_multiply_const_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_multiply_const_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_ii_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_ii_sptr_set_k" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_ii > *arg1 = (boost::shared_ptr< gr_multiply_const_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_multiply_const_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_multiply_const_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_multiply_const_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_multiply_const_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_multiply_const_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:multiply_const_ii",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "multiply_const_ii" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = gr_make_multiply_const_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_multiply_const_ii_sptr(static_cast< const gr_multiply_const_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_ss > *)new boost::shared_ptr< gr_add_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_ss *arg1 = (gr_add_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_ss_sptr" "', argument " "1"" of type '" "gr_add_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_ss > *)new boost::shared_ptr< gr_add_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_ss >::shared_ptr(gr_add_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (gr_add_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ss > *arg1 = (boost::shared_ptr< gr_add_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_add_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:add_ss",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "add_ss" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_add_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_ss_sptr(static_cast< const gr_add_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_ii > *)new boost::shared_ptr< gr_add_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_ii *arg1 = (gr_add_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_ii_sptr" "', argument " "1"" of type '" "gr_add_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_ii > *)new boost::shared_ptr< gr_add_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_ii >::shared_ptr(gr_add_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (gr_add_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_ii > *arg1 = (boost::shared_ptr< gr_add_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_add_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:add_ii",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "add_ii" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_add_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_ii_sptr(static_cast< const gr_add_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_cc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_cc > *)new boost::shared_ptr< gr_add_cc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_cc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_cc *arg1 = (gr_add_cc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_cc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_cc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_cc_sptr" "', argument " "1"" of type '" "gr_add_cc *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_cc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_cc > *)new boost::shared_ptr< gr_add_cc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_cc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_cc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_cc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_cc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_cc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_cc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_cc >::shared_ptr(gr_add_cc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_cc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (gr_add_cc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_cc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_cc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_cc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_cc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_cc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_cc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_cc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_cc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_cc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_cc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_cc > *arg1 = (boost::shared_ptr< gr_add_cc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_cc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_cc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_cc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_cc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_cc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_cc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_cc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_add_cc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:add_cc",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "add_cc" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_add_cc(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_cc_sptr(static_cast< const gr_add_cc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_cc_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sub_ss > *)new boost::shared_ptr< gr_sub_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sub_ss *arg1 = (gr_sub_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sub_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sub_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sub_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sub_ss_sptr" "', argument " "1"" of type '" "gr_sub_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_sub_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sub_ss > *)new boost::shared_ptr< gr_sub_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sub_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sub_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sub_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sub_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sub_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sub_ss >::shared_ptr(gr_sub_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sub_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (gr_sub_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sub_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sub_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sub_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sub_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sub_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sub_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ss > *arg1 = (boost::shared_ptr< gr_sub_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sub_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sub_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sub_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sub_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_sub_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:sub_ss",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sub_ss" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_sub_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sub_ss_sptr(static_cast< const gr_sub_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sub_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sub_ii > *)new boost::shared_ptr< gr_sub_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sub_ii *arg1 = (gr_sub_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sub_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sub_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sub_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sub_ii_sptr" "', argument " "1"" of type '" "gr_sub_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_sub_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sub_ii > *)new boost::shared_ptr< gr_sub_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sub_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sub_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sub_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sub_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sub_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sub_ii >::shared_ptr(gr_sub_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sub_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (gr_sub_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sub_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sub_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sub_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sub_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sub_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sub_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ii > *arg1 = (boost::shared_ptr< gr_sub_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sub_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sub_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sub_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sub_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_sub_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:sub_ii",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sub_ii" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_sub_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sub_ii_sptr(static_cast< const gr_sub_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sub_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_ff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sub_ff > *)new boost::shared_ptr< gr_sub_ff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_ff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sub_ff *arg1 = (gr_sub_ff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sub_ff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sub_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sub_ff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sub_ff_sptr" "', argument " "1"" of type '" "gr_sub_ff *""'"); 
  }
  arg1 = reinterpret_cast< gr_sub_ff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sub_ff > *)new boost::shared_ptr< gr_sub_ff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_ff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sub_ff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sub_ff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sub_ff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sub_ff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sub_ff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sub_ff >::shared_ptr(gr_sub_ff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sub_ff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (gr_sub_ff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sub_ff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sub_ff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sub_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sub_ff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_ff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_ff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_ff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_ff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_ff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sub_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sub_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_ff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_ff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_ff > *arg1 = (boost::shared_ptr< gr_sub_ff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sub_ff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_ff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_ff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_ff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sub_ff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sub_ff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sub_ff(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_sub_ff_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:sub_ff",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sub_ff" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_sub_ff(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sub_ff_sptr(static_cast< const gr_sub_ff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sub_ff_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_cc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sub_cc > *)new boost::shared_ptr< gr_sub_cc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_cc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sub_cc *arg1 = (gr_sub_cc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sub_cc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sub_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sub_cc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sub_cc_sptr" "', argument " "1"" of type '" "gr_sub_cc *""'"); 
  }
  arg1 = reinterpret_cast< gr_sub_cc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sub_cc > *)new boost::shared_ptr< gr_sub_cc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sub_cc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sub_cc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sub_cc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sub_cc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sub_cc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sub_cc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sub_cc >::shared_ptr(gr_sub_cc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sub_cc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (gr_sub_cc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sub_cc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sub_cc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sub_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sub_cc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_cc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_cc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_cc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_cc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sub_cc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sub_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sub_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sub_cc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sub_cc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sub_cc > *arg1 = (boost::shared_ptr< gr_sub_cc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sub_cc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sub_cc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sub_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sub_cc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sub_cc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sub_cc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sub_cc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sub_cc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_sub_cc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:sub_cc",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "sub_cc" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_sub_cc(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sub_cc_sptr(static_cast< const gr_sub_cc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sub_cc_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_multiply_ss > *)new boost::shared_ptr< gr_multiply_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_multiply_ss *arg1 = (gr_multiply_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_multiply_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_multiply_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_multiply_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_multiply_ss_sptr" "', argument " "1"" of type '" "gr_multiply_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_multiply_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_multiply_ss > *)new boost::shared_ptr< gr_multiply_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_multiply_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_multiply_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_multiply_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_multiply_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_multiply_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_multiply_ss >::shared_ptr(gr_multiply_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_multiply_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (gr_multiply_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_multiply_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_multiply_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_multiply_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_multiply_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ss > *arg1 = (boost::shared_ptr< gr_multiply_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_multiply_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_multiply_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_multiply_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_multiply_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_multiply_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:multiply_ss",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "multiply_ss" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_multiply_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_multiply_ss_sptr(static_cast< const gr_multiply_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_multiply_ii > *)new boost::shared_ptr< gr_multiply_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_multiply_ii *arg1 = (gr_multiply_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_multiply_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_multiply_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_multiply_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_multiply_ii_sptr" "', argument " "1"" of type '" "gr_multiply_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_multiply_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_multiply_ii > *)new boost::shared_ptr< gr_multiply_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_multiply_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_multiply_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_multiply_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_multiply_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_multiply_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_multiply_ii >::shared_ptr(gr_multiply_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_multiply_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (gr_multiply_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_multiply_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_multiply_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_multiply_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_multiply_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_ii > *arg1 = (boost::shared_ptr< gr_multiply_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_multiply_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_multiply_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_multiply_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_multiply_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_multiply_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:multiply_ii",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "multiply_ii" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_multiply_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_multiply_ii_sptr(static_cast< const gr_multiply_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_divide_ss > *)new boost::shared_ptr< gr_divide_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_divide_ss *arg1 = (gr_divide_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_divide_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_divide_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_divide_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_divide_ss_sptr" "', argument " "1"" of type '" "gr_divide_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_divide_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_divide_ss > *)new boost::shared_ptr< gr_divide_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_divide_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_divide_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_divide_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_divide_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_divide_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_divide_ss >::shared_ptr(gr_divide_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_divide_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (gr_divide_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_divide_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_divide_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_divide_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_divide_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_divide_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_divide_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ss > *arg1 = (boost::shared_ptr< gr_divide_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_divide_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_divide_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_divide_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_divide_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_divide_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:divide_ss",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "divide_ss" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_divide_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_divide_ss_sptr(static_cast< const gr_divide_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_divide_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_divide_ii > *)new boost::shared_ptr< gr_divide_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_divide_ii *arg1 = (gr_divide_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_divide_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_divide_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_divide_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_divide_ii_sptr" "', argument " "1"" of type '" "gr_divide_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_divide_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_divide_ii > *)new boost::shared_ptr< gr_divide_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_divide_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_divide_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_divide_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_divide_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_divide_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_divide_ii >::shared_ptr(gr_divide_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_divide_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (gr_divide_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_divide_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_divide_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_divide_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_divide_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_divide_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_divide_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ii > *arg1 = (boost::shared_ptr< gr_divide_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_divide_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_divide_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_divide_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_divide_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_divide_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:divide_ii",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "divide_ii" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_divide_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_divide_ii_sptr(static_cast< const gr_divide_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_divide_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_ff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_divide_ff > *)new boost::shared_ptr< gr_divide_ff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_ff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_divide_ff *arg1 = (gr_divide_ff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_divide_ff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_divide_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_divide_ff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_divide_ff_sptr" "', argument " "1"" of type '" "gr_divide_ff *""'"); 
  }
  arg1 = reinterpret_cast< gr_divide_ff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_divide_ff > *)new boost::shared_ptr< gr_divide_ff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_ff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_divide_ff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_divide_ff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_divide_ff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_divide_ff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_divide_ff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_divide_ff >::shared_ptr(gr_divide_ff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_divide_ff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (gr_divide_ff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_divide_ff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_divide_ff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_divide_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_divide_ff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_ff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_ff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_ff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_ff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_ff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_divide_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_divide_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_ff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_ff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_ff > *arg1 = (boost::shared_ptr< gr_divide_ff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_divide_ff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_ff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_ff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_ff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_divide_ff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_divide_ff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_divide_ff(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_divide_ff_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:divide_ff",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "divide_ff" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_divide_ff(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_divide_ff_sptr(static_cast< const gr_divide_ff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_divide_ff_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_cc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_divide_cc > *)new boost::shared_ptr< gr_divide_cc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_cc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_divide_cc *arg1 = (gr_divide_cc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_divide_cc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_divide_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_divide_cc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_divide_cc_sptr" "', argument " "1"" of type '" "gr_divide_cc *""'"); 
  }
  arg1 = reinterpret_cast< gr_divide_cc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_divide_cc > *)new boost::shared_ptr< gr_divide_cc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_divide_cc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_divide_cc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_divide_cc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_divide_cc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_divide_cc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_divide_cc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_divide_cc >::shared_ptr(gr_divide_cc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_divide_cc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (gr_divide_cc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_divide_cc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_divide_cc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_divide_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_divide_cc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_cc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_cc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_cc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_cc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_divide_cc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_divide_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_divide_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_divide_cc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_divide_cc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_divide_cc > *arg1 = (boost::shared_ptr< gr_divide_cc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_divide_cc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_divide_cc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_divide_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_divide_cc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_divide_cc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_divide_cc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_divide_cc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_divide_cc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 = (size_t) 1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_divide_cc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:divide_cc",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_size_t(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "divide_cc" "', argument " "1"" of type '" "size_t""'");
    } 
    arg1 = static_cast< size_t >(val1);
  }
  {
    try {
      result = gr_make_divide_cc(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_divide_cc_sptr(static_cast< const gr_divide_cc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_divide_cc_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_mute_ss > *)new boost::shared_ptr< gr_mute_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_mute_ss *arg1 = (gr_mute_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_mute_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_mute_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_mute_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_mute_ss_sptr" "', argument " "1"" of type '" "gr_mute_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_mute_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_mute_ss > *)new boost::shared_ptr< gr_mute_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_mute_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_mute_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_mute_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_mute_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_mute_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_mute_ss >::shared_ptr(gr_mute_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_mute_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (gr_mute_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_mute_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_mute_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_mute_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_mute_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_mute",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_mute" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->mute();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_set_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "mute", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ss_sptr_set_mute",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_set_mute" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ss_sptr_set_mute" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (*arg1)->set_mute(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_mute_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_mute_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ss > *arg1 = (boost::shared_ptr< gr_mute_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_mute_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_mute_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_mute_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_mute_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  bool arg1 = (bool) false ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "mute", NULL 
  };
  gr_mute_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:mute_ss",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_bool(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "mute_ss" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
  }
  {
    try {
      result = gr_make_mute_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_mute_ss_sptr(static_cast< const gr_mute_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_mute_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_mute_ii > *)new boost::shared_ptr< gr_mute_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_mute_ii *arg1 = (gr_mute_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_mute_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_mute_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_mute_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_mute_ii_sptr" "', argument " "1"" of type '" "gr_mute_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_mute_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_mute_ii > *)new boost::shared_ptr< gr_mute_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_mute_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_mute_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_mute_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_mute_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_mute_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_mute_ii >::shared_ptr(gr_mute_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_mute_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (gr_mute_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_mute_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_mute_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_mute_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_mute_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_mute",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_mute" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->mute();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_set_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "mute", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ii_sptr_set_mute",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_set_mute" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ii_sptr_set_mute" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (*arg1)->set_mute(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_mute_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_mute_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ii > *arg1 = (boost::shared_ptr< gr_mute_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_mute_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_mute_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_mute_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_mute_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  bool arg1 = (bool) false ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "mute", NULL 
  };
  gr_mute_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:mute_ii",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_bool(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "mute_ii" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
  }
  {
    try {
      result = gr_make_mute_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_mute_ii_sptr(static_cast< const gr_mute_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_mute_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_ff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_mute_ff > *)new boost::shared_ptr< gr_mute_ff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_ff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_mute_ff *arg1 = (gr_mute_ff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_mute_ff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_mute_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_mute_ff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_mute_ff_sptr" "', argument " "1"" of type '" "gr_mute_ff *""'"); 
  }
  arg1 = reinterpret_cast< gr_mute_ff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_mute_ff > *)new boost::shared_ptr< gr_mute_ff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_ff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_mute_ff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_mute_ff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_mute_ff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_mute_ff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_mute_ff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_mute_ff >::shared_ptr(gr_mute_ff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_mute_ff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (gr_mute_ff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_mute_ff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_mute_ff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_mute_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_mute_ff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_mute",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_mute" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->mute();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_set_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "mute", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ff_sptr_set_mute",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_set_mute" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ff_sptr_set_mute" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (*arg1)->set_mute(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_ff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_mute_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_mute_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_ff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_ff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_ff > *arg1 = (boost::shared_ptr< gr_mute_ff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_mute_ff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_ff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_ff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_ff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_mute_ff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_mute_ff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_mute_ff(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  bool arg1 = (bool) false ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "mute", NULL 
  };
  gr_mute_ff_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:mute_ff",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_bool(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "mute_ff" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
  }
  {
    try {
      result = gr_make_mute_ff(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_mute_ff_sptr(static_cast< const gr_mute_ff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_mute_ff_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_cc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_mute_cc > *)new boost::shared_ptr< gr_mute_cc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_cc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_mute_cc *arg1 = (gr_mute_cc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_mute_cc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_mute_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_mute_cc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_mute_cc_sptr" "', argument " "1"" of type '" "gr_mute_cc *""'"); 
  }
  arg1 = reinterpret_cast< gr_mute_cc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_mute_cc > *)new boost::shared_ptr< gr_mute_cc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_mute_cc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_mute_cc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_mute_cc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_mute_cc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_mute_cc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_mute_cc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_mute_cc >::shared_ptr(gr_mute_cc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_mute_cc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (gr_mute_cc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_mute_cc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_mute_cc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_mute_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_mute_cc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_mute",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_mute" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->mute();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_set_mute(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "mute", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_cc_sptr_set_mute",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_set_mute" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_cc_sptr_set_mute" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  {
    try {
      (*arg1)->set_mute(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_cc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_cc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_cc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_cc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_mute_cc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_mute_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_mute_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_mute_cc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_mute_cc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_mute_cc > *arg1 = (boost::shared_ptr< gr_mute_cc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_mute_cc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_mute_cc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_mute_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_mute_cc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_mute_cc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_mute_cc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_mute_cc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_mute_cc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  bool arg1 = (bool) false ;
  bool val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "mute", NULL 
  };
  gr_mute_cc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|O:mute_cc",kwnames,&obj0)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_bool(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "mute_cc" "', argument " "1"" of type '" "bool""'");
    } 
    arg1 = static_cast< bool >(val1);
  }
  {
    try {
      result = gr_make_mute_cc(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_mute_cc_sptr(static_cast< const gr_mute_cc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_mute_cc_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_const_vss > *)new boost::shared_ptr< gr_add_const_vss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_const_vss *arg1 = (gr_add_const_vss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_const_vss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_const_vss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_const_vss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_const_vss_sptr" "', argument " "1"" of type '" "gr_add_const_vss *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_const_vss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_const_vss > *)new boost::shared_ptr< gr_add_const_vss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_const_vss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_const_vss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_const_vss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_const_vss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_const_vss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_const_vss >::shared_ptr(gr_add_const_vss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_const_vss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (gr_add_const_vss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_const_vss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_const_vss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_const_vss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_const_vss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< short,std::allocator< short > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<short,std::allocator< short > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  std::vector< short,std::allocator< short > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vss_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    std::vector<short,std::allocator< short > > *ptr = (std::vector<short,std::allocator< short > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_vss_sptr_set_k" "', argument " "2"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_vss_sptr_set_k" "', argument " "2"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_k((std::vector< short,std::allocator< short > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_vss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_vss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vss > *arg1 = (boost::shared_ptr< gr_add_const_vss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_const_vss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_const_vss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_const_vss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_const_vss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< short,std::allocator< short > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_add_const_vss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:add_const_vss",kwnames,&obj0)) SWIG_fail;
  {
    std::vector<short,std::allocator< short > > *ptr = (std::vector<short,std::allocator< short > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "add_const_vss" "', argument " "1"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "add_const_vss" "', argument " "1"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = gr_make_add_const_vss((std::vector< short,std::allocator< short > > const &)*arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_const_vss_sptr(static_cast< const gr_add_const_vss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vss_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_const_vii > *)new boost::shared_ptr< gr_add_const_vii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_const_vii *arg1 = (gr_add_const_vii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_const_vii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_const_vii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_const_vii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_const_vii_sptr" "', argument " "1"" of type '" "gr_add_const_vii *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_const_vii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_const_vii > *)new boost::shared_ptr< gr_add_const_vii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_const_vii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_const_vii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_const_vii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_const_vii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_const_vii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_const_vii >::shared_ptr(gr_add_const_vii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_const_vii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (gr_add_const_vii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_const_vii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_const_vii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_const_vii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_const_vii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int,std::allocator< int > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<int,std::allocator< int > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  std::vector< int,std::allocator< int > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vii_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    std::vector<int,std::allocator< int > > *ptr = (std::vector<int,std::allocator< int > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_vii_sptr_set_k" "', argument " "2"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_vii_sptr_set_k" "', argument " "2"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_k((std::vector< int,std::allocator< int > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_vii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_vii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vii > *arg1 = (boost::shared_ptr< gr_add_const_vii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_const_vii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_const_vii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_const_vii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_const_vii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int,std::allocator< int > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_add_const_vii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:add_const_vii",kwnames,&obj0)) SWIG_fail;
  {
    std::vector<int,std::allocator< int > > *ptr = (std::vector<int,std::allocator< int > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "add_const_vii" "', argument " "1"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "add_const_vii" "', argument " "1"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = gr_make_add_const_vii((std::vector< int,std::allocator< int > > const &)*arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_const_vii_sptr(static_cast< const gr_add_const_vii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vii_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_const_vff > *)new boost::shared_ptr< gr_add_const_vff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_const_vff *arg1 = (gr_add_const_vff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_const_vff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_const_vff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_const_vff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_const_vff_sptr" "', argument " "1"" of type '" "gr_add_const_vff *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_const_vff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_const_vff > *)new boost::shared_ptr< gr_add_const_vff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_const_vff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_const_vff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_const_vff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_const_vff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_const_vff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_const_vff >::shared_ptr(gr_add_const_vff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_const_vff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (gr_add_const_vff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_const_vff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_const_vff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_const_vff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_const_vff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<float,std::allocator< float > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vff_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    std::vector<float,std::allocator< float > > *ptr = (std::vector<float,std::allocator< float > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_vff_sptr_set_k" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_vff_sptr_set_k" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_k((std::vector< float,std::allocator< float > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_vff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_vff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vff > *arg1 = (boost::shared_ptr< gr_add_const_vff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_const_vff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_const_vff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_const_vff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_const_vff(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< float,std::allocator< float > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_add_const_vff_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:add_const_vff",kwnames,&obj0)) SWIG_fail;
  {
    std::vector<float,std::allocator< float > > *ptr = (std::vector<float,std::allocator< float > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "add_const_vff" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "add_const_vff" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = gr_make_add_const_vff((std::vector< float,std::allocator< float > > const &)*arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_const_vff_sptr(static_cast< const gr_add_const_vff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vff_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vcc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_add_const_vcc > *)new boost::shared_ptr< gr_add_const_vcc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vcc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_add_const_vcc *arg1 = (gr_add_const_vcc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_add_const_vcc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_add_const_vcc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_add_const_vcc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_add_const_vcc_sptr" "', argument " "1"" of type '" "gr_add_const_vcc *""'"); 
  }
  arg1 = reinterpret_cast< gr_add_const_vcc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_add_const_vcc > *)new boost::shared_ptr< gr_add_const_vcc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_add_const_vcc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_add_const_vcc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_add_const_vcc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_add_const_vcc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_add_const_vcc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_add_const_vcc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_add_const_vcc >::shared_ptr(gr_add_const_vcc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_add_const_vcc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (gr_add_const_vcc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_add_const_vcc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_add_const_vcc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_add_const_vcc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_add_const_vcc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<std::complex< float >,std::allocator< std::complex< float > > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vcc_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    std::vector<std::complex< float >,std::allocator< std::complex< float > > > *ptr = (std::vector<std::complex< float >,std::allocator< std::complex< float > > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_vcc_sptr_set_k" "', argument " "2"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_vcc_sptr_set_k" "', argument " "2"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_k((std::vector< gr_complex,std::allocator< gr_complex > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vcc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vcc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vcc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vcc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_add_const_vcc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_add_const_vcc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_add_const_vcc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_add_const_vcc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_add_const_vcc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_add_const_vcc > *arg1 = (boost::shared_ptr< gr_add_const_vcc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_add_const_vcc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_add_const_vcc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_add_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_add_const_vcc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_add_const_vcc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_add_const_vcc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_add_const_vcc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_add_const_vcc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< gr_complex,std::allocator< gr_complex > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_add_const_vcc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:add_const_vcc",kwnames,&obj0)) SWIG_fail;
  {
    std::vector<std::complex< float >,std::allocator< std::complex< float > > > *ptr = (std::vector<std::complex< float >,std::allocator< std::complex< float > > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "add_const_vcc" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "add_const_vcc" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = gr_make_add_const_vcc((std::vector< std::complex< float >,std::allocator< std::complex< float > > > const &)*arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_add_const_vcc_sptr(static_cast< const gr_add_const_vcc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_add_const_vcc_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_vss > *)new boost::shared_ptr< gr_multiply_const_vss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_multiply_const_vss *arg1 = (gr_multiply_const_vss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_multiply_const_vss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_multiply_const_vss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_multiply_const_vss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_multiply_const_vss_sptr" "', argument " "1"" of type '" "gr_multiply_const_vss *""'"); 
  }
  arg1 = reinterpret_cast< gr_multiply_const_vss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_vss > *)new boost::shared_ptr< gr_multiply_const_vss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_multiply_const_vss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_multiply_const_vss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_multiply_const_vss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_multiply_const_vss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_multiply_const_vss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_multiply_const_vss >::shared_ptr(gr_multiply_const_vss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_multiply_const_vss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (gr_multiply_const_vss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_multiply_const_vss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_multiply_const_vss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_multiply_const_vss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_multiply_const_vss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< short,std::allocator< short > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<short,std::allocator< short > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  std::vector< short,std::allocator< short > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vss_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    std::vector<short,std::allocator< short > > *ptr = (std::vector<short,std::allocator< short > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_vss_sptr_set_k" "', argument " "2"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_vss_sptr_set_k" "', argument " "2"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_k((std::vector< short,std::allocator< short > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_vss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_vss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vss > *arg1 = (boost::shared_ptr< gr_multiply_const_vss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_multiply_const_vss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_multiply_const_vss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_multiply_const_vss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_multiply_const_vss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< short,std::allocator< short > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_multiply_const_vss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:multiply_const_vss",kwnames,&obj0)) SWIG_fail;
  {
    std::vector<short,std::allocator< short > > *ptr = (std::vector<short,std::allocator< short > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multiply_const_vss" "', argument " "1"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "multiply_const_vss" "', argument " "1"" of type '" "std::vector< short,std::allocator< short > > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = gr_make_multiply_const_vss((std::vector< short,std::allocator< short > > const &)*arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_multiply_const_vss_sptr(static_cast< const gr_multiply_const_vss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vss_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_vii > *)new boost::shared_ptr< gr_multiply_const_vii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_multiply_const_vii *arg1 = (gr_multiply_const_vii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_multiply_const_vii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_multiply_const_vii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_multiply_const_vii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_multiply_const_vii_sptr" "', argument " "1"" of type '" "gr_multiply_const_vii *""'"); 
  }
  arg1 = reinterpret_cast< gr_multiply_const_vii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_vii > *)new boost::shared_ptr< gr_multiply_const_vii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_multiply_const_vii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_multiply_const_vii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_multiply_const_vii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_multiply_const_vii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_multiply_const_vii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_multiply_const_vii >::shared_ptr(gr_multiply_const_vii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_multiply_const_vii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (gr_multiply_const_vii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_multiply_const_vii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_multiply_const_vii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_multiply_const_vii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_multiply_const_vii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< int,std::allocator< int > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<int,std::allocator< int > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  std::vector< int,std::allocator< int > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vii_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    std::vector<int,std::allocator< int > > *ptr = (std::vector<int,std::allocator< int > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_vii_sptr_set_k" "', argument " "2"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_vii_sptr_set_k" "', argument " "2"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_k((std::vector< int,std::allocator< int > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_vii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_vii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vii > *arg1 = (boost::shared_ptr< gr_multiply_const_vii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_multiply_const_vii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_multiply_const_vii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_multiply_const_vii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_multiply_const_vii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< int,std::allocator< int > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_multiply_const_vii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:multiply_const_vii",kwnames,&obj0)) SWIG_fail;
  {
    std::vector<int,std::allocator< int > > *ptr = (std::vector<int,std::allocator< int > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multiply_const_vii" "', argument " "1"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "multiply_const_vii" "', argument " "1"" of type '" "std::vector< int,std::allocator< int > > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = gr_make_multiply_const_vii((std::vector< int,std::allocator< int > > const &)*arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_multiply_const_vii_sptr(static_cast< const gr_multiply_const_vii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vii_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_vff > *)new boost::shared_ptr< gr_multiply_const_vff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_multiply_const_vff *arg1 = (gr_multiply_const_vff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_multiply_const_vff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_multiply_const_vff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_multiply_const_vff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_multiply_const_vff_sptr" "', argument " "1"" of type '" "gr_multiply_const_vff *""'"); 
  }
  arg1 = reinterpret_cast< gr_multiply_const_vff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_vff > *)new boost::shared_ptr< gr_multiply_const_vff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_multiply_const_vff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_multiply_const_vff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_multiply_const_vff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_multiply_const_vff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_multiply_const_vff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_multiply_const_vff >::shared_ptr(gr_multiply_const_vff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_multiply_const_vff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (gr_multiply_const_vff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_multiply_const_vff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_multiply_const_vff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_multiply_const_vff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_multiply_const_vff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<float,std::allocator< float > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  std::vector< float,std::allocator< float > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vff_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    std::vector<float,std::allocator< float > > *ptr = (std::vector<float,std::allocator< float > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_vff_sptr_set_k" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_vff_sptr_set_k" "', argument " "2"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_k((std::vector< float,std::allocator< float > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_vff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_vff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vff > *arg1 = (boost::shared_ptr< gr_multiply_const_vff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_multiply_const_vff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_multiply_const_vff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_multiply_const_vff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_multiply_const_vff(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< float,std::allocator< float > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_multiply_const_vff_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:multiply_const_vff",kwnames,&obj0)) SWIG_fail;
  {
    std::vector<float,std::allocator< float > > *ptr = (std::vector<float,std::allocator< float > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multiply_const_vff" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "multiply_const_vff" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = gr_make_multiply_const_vff((std::vector< float,std::allocator< float > > const &)*arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_multiply_const_vff_sptr(static_cast< const gr_multiply_const_vff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vff_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vcc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_vcc > *)new boost::shared_ptr< gr_multiply_const_vcc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vcc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_multiply_const_vcc *arg1 = (gr_multiply_const_vcc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_multiply_const_vcc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_multiply_const_vcc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_multiply_const_vcc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_multiply_const_vcc_sptr" "', argument " "1"" of type '" "gr_multiply_const_vcc *""'"); 
  }
  arg1 = reinterpret_cast< gr_multiply_const_vcc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_multiply_const_vcc > *)new boost::shared_ptr< gr_multiply_const_vcc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_multiply_const_vcc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_multiply_const_vcc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_multiply_const_vcc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_multiply_const_vcc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_multiply_const_vcc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_multiply_const_vcc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_multiply_const_vcc >::shared_ptr(gr_multiply_const_vcc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_multiply_const_vcc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (gr_multiply_const_vcc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_multiply_const_vcc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_multiply_const_vcc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_multiply_const_vcc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_multiply_const_vcc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<std::complex< float >,std::allocator< std::complex< float > > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vcc_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    std::vector<std::complex< float >,std::allocator< std::complex< float > > > *ptr = (std::vector<std::complex< float >,std::allocator< std::complex< float > > > *)0;
    res2 = swig::asptr(obj1, &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_vcc_sptr_set_k" "', argument " "2"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_vcc_sptr_set_k" "', argument " "2"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    arg2 = ptr;
  }
  {
    try {
      (*arg1)->set_k((std::vector< gr_complex,std::allocator< gr_complex > > const &)*arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vcc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vcc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vcc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vcc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_multiply_const_vcc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_multiply_const_vcc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_multiply_const_vcc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_multiply_const_vcc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_multiply_const_vcc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_multiply_const_vcc > *arg1 = (boost::shared_ptr< gr_multiply_const_vcc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_multiply_const_vcc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_multiply_const_vcc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_multiply_const_vcc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_multiply_const_vcc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_multiply_const_vcc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_multiply_const_vcc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_multiply_const_vcc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_multiply_const_vcc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< gr_complex,std::allocator< gr_complex > > *arg1 = 0 ;
  int res1 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_multiply_const_vcc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:multiply_const_vcc",kwnames,&obj0)) SWIG_fail;
  {
    std::vector<std::complex< float >,std::allocator< std::complex< float > > > *ptr = (std::vector<std::complex< float >,std::allocator< std::complex< float > > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "multiply_const_vcc" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "multiply_const_vcc" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    arg1 = ptr;
  }
  {
    try {
      result = gr_make_multiply_const_vcc((std::vector< std::complex< float >,std::allocator< std::complex< float > > > const &)*arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_multiply_const_vcc_sptr(static_cast< const gr_multiply_const_vcc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_multiply_const_vcc_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_integrate_ss > *)new boost::shared_ptr< gr_integrate_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_integrate_ss *arg1 = (gr_integrate_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_integrate_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_integrate_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_integrate_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_integrate_ss_sptr" "', argument " "1"" of type '" "gr_integrate_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_integrate_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_integrate_ss > *)new boost::shared_ptr< gr_integrate_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_integrate_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_integrate_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_integrate_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_integrate_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_integrate_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_integrate_ss >::shared_ptr(gr_integrate_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_integrate_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (gr_integrate_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_integrate_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_integrate_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_integrate_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_integrate_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_integrate_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_integrate_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ss > *arg1 = (boost::shared_ptr< gr_integrate_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_integrate_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_integrate_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_integrate_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_integrate_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "decim", NULL 
  };
  gr_integrate_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:integrate_ss",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_ss" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = gr_make_integrate_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_integrate_ss_sptr(static_cast< const gr_integrate_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_integrate_ii > *)new boost::shared_ptr< gr_integrate_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_integrate_ii *arg1 = (gr_integrate_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_integrate_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_integrate_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_integrate_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_integrate_ii_sptr" "', argument " "1"" of type '" "gr_integrate_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_integrate_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_integrate_ii > *)new boost::shared_ptr< gr_integrate_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_integrate_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_integrate_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_integrate_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_integrate_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_integrate_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_integrate_ii >::shared_ptr(gr_integrate_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_integrate_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (gr_integrate_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_integrate_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_integrate_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_integrate_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_integrate_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_integrate_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_integrate_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ii > *arg1 = (boost::shared_ptr< gr_integrate_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_integrate_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_integrate_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_integrate_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_integrate_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "decim", NULL 
  };
  gr_integrate_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:integrate_ii",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_ii" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = gr_make_integrate_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_integrate_ii_sptr(static_cast< const gr_integrate_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_ff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_integrate_ff > *)new boost::shared_ptr< gr_integrate_ff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_ff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_integrate_ff *arg1 = (gr_integrate_ff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_integrate_ff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_integrate_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_integrate_ff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_integrate_ff_sptr" "', argument " "1"" of type '" "gr_integrate_ff *""'"); 
  }
  arg1 = reinterpret_cast< gr_integrate_ff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_integrate_ff > *)new boost::shared_ptr< gr_integrate_ff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_ff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_integrate_ff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_integrate_ff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_integrate_ff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_integrate_ff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_integrate_ff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_integrate_ff >::shared_ptr(gr_integrate_ff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_integrate_ff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (gr_integrate_ff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_integrate_ff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_integrate_ff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_integrate_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_integrate_ff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_ff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_ff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_ff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_ff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_ff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_integrate_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_integrate_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_ff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_ff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_ff > *arg1 = (boost::shared_ptr< gr_integrate_ff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_integrate_ff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_ff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_ff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_ff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_integrate_ff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_integrate_ff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_integrate_ff(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "decim", NULL 
  };
  gr_integrate_ff_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:integrate_ff",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_ff" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = gr_make_integrate_ff(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_integrate_ff_sptr(static_cast< const gr_integrate_ff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_ff_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_cc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_integrate_cc > *)new boost::shared_ptr< gr_integrate_cc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_cc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_integrate_cc *arg1 = (gr_integrate_cc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_integrate_cc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_integrate_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_integrate_cc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_integrate_cc_sptr" "', argument " "1"" of type '" "gr_integrate_cc *""'"); 
  }
  arg1 = reinterpret_cast< gr_integrate_cc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_integrate_cc > *)new boost::shared_ptr< gr_integrate_cc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_integrate_cc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_integrate_cc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_integrate_cc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_integrate_cc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_integrate_cc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_integrate_cc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_integrate_cc >::shared_ptr(gr_integrate_cc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_integrate_cc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (gr_integrate_cc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_integrate_cc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_integrate_cc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_integrate_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_integrate_cc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_cc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_cc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_cc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_cc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_integrate_cc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_integrate_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_integrate_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_integrate_cc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_integrate_cc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_integrate_cc > *arg1 = (boost::shared_ptr< gr_integrate_cc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_integrate_cc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_integrate_cc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_integrate_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_integrate_cc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_integrate_cc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_integrate_cc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_integrate_cc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_integrate_cc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "decim", NULL 
  };
  gr_integrate_cc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:integrate_cc",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "integrate_cc" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = gr_make_integrate_cc(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_integrate_cc_sptr(static_cast< const gr_integrate_cc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_integrate_cc_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_moving_average_ss > *)new boost::shared_ptr< gr_moving_average_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_moving_average_ss *arg1 = (gr_moving_average_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_moving_average_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_moving_average_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_moving_average_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_moving_average_ss_sptr" "', argument " "1"" of type '" "gr_moving_average_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_moving_average_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_moving_average_ss > *)new boost::shared_ptr< gr_moving_average_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_moving_average_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_moving_average_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_moving_average_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_moving_average_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_moving_average_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_moving_average_ss >::shared_ptr(gr_moving_average_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_moving_average_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (gr_moving_average_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_moving_average_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_moving_average_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_moving_average_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_moving_average_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_length",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_length" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->length();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_scale",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_scale" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (short)(*arg1)->scale();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_set_length_and_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  int arg2 ;
  short arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  short val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "length",(char *) "scale", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_moving_average_ss_sptr_set_length_and_scale",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_set_length_and_scale" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ss_sptr_set_length_and_scale" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_short(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_moving_average_ss_sptr_set_length_and_scale" "', argument " "3"" of type '" "short""'");
  } 
  arg3 = static_cast< short >(val3);
  {
    try {
      (*arg1)->set_length_and_scale(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_moving_average_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_moving_average_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ss > *arg1 = (boost::shared_ptr< gr_moving_average_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_moving_average_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_moving_average_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_moving_average_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_moving_average_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  short arg2 ;
  int arg3 = (int) 4096 ;
  int val1 ;
  int ecode1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "length",(char *) "scale",(char *) "max_iter", NULL 
  };
  gr_moving_average_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:moving_average_ss",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "moving_average_ss" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "moving_average_ss" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "moving_average_ss" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = gr_make_moving_average_ss(arg1,arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_moving_average_ss_sptr(static_cast< const gr_moving_average_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_moving_average_ii > *)new boost::shared_ptr< gr_moving_average_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_moving_average_ii *arg1 = (gr_moving_average_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_moving_average_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_moving_average_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_moving_average_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_moving_average_ii_sptr" "', argument " "1"" of type '" "gr_moving_average_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_moving_average_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_moving_average_ii > *)new boost::shared_ptr< gr_moving_average_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_moving_average_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_moving_average_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_moving_average_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_moving_average_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_moving_average_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_moving_average_ii >::shared_ptr(gr_moving_average_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_moving_average_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (gr_moving_average_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_moving_average_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_moving_average_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_moving_average_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_moving_average_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_length",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_length" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->length();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_scale",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_scale" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->scale();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_set_length_and_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "length",(char *) "scale", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_moving_average_ii_sptr_set_length_and_scale",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_set_length_and_scale" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ii_sptr_set_length_and_scale" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_moving_average_ii_sptr_set_length_and_scale" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      (*arg1)->set_length_and_scale(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_moving_average_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_moving_average_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ii > *arg1 = (boost::shared_ptr< gr_moving_average_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_moving_average_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_moving_average_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_moving_average_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_moving_average_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 = (int) 4096 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "length",(char *) "scale",(char *) "max_iter", NULL 
  };
  gr_moving_average_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:moving_average_ii",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "moving_average_ii" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "moving_average_ii" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "moving_average_ii" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = gr_make_moving_average_ii(arg1,arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_moving_average_ii_sptr(static_cast< const gr_moving_average_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_ff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_moving_average_ff > *)new boost::shared_ptr< gr_moving_average_ff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_ff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_moving_average_ff *arg1 = (gr_moving_average_ff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_moving_average_ff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_moving_average_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_moving_average_ff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_moving_average_ff_sptr" "', argument " "1"" of type '" "gr_moving_average_ff *""'"); 
  }
  arg1 = reinterpret_cast< gr_moving_average_ff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_moving_average_ff > *)new boost::shared_ptr< gr_moving_average_ff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_ff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_moving_average_ff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_moving_average_ff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_moving_average_ff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_moving_average_ff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_moving_average_ff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_moving_average_ff >::shared_ptr(gr_moving_average_ff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_moving_average_ff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (gr_moving_average_ff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_moving_average_ff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_moving_average_ff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_moving_average_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_moving_average_ff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_length",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_length" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->length();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_scale",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_scale" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (float)(*arg1)->scale();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_set_length_and_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "length",(char *) "scale", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_moving_average_ff_sptr_set_length_and_scale",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_set_length_and_scale" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ff_sptr_set_length_and_scale" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_moving_average_ff_sptr_set_length_and_scale" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  {
    try {
      (*arg1)->set_length_and_scale(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_ff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_ff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_ff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_moving_average_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_moving_average_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_ff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_ff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_ff > *arg1 = (boost::shared_ptr< gr_moving_average_ff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_moving_average_ff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_ff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_ff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_ff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_moving_average_ff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_moving_average_ff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_moving_average_ff(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  float arg2 ;
  int arg3 = (int) 4096 ;
  int val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "length",(char *) "scale",(char *) "max_iter", NULL 
  };
  gr_moving_average_ff_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:moving_average_ff",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "moving_average_ff" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "moving_average_ff" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "moving_average_ff" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = gr_make_moving_average_ff(arg1,arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_moving_average_ff_sptr(static_cast< const gr_moving_average_ff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_ff_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_cc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_moving_average_cc > *)new boost::shared_ptr< gr_moving_average_cc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_cc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_moving_average_cc *arg1 = (gr_moving_average_cc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_moving_average_cc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_moving_average_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_moving_average_cc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_moving_average_cc_sptr" "', argument " "1"" of type '" "gr_moving_average_cc *""'"); 
  }
  arg1 = reinterpret_cast< gr_moving_average_cc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_moving_average_cc > *)new boost::shared_ptr< gr_moving_average_cc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_moving_average_cc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_moving_average_cc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_moving_average_cc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_moving_average_cc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_moving_average_cc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_moving_average_cc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_moving_average_cc >::shared_ptr(gr_moving_average_cc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_moving_average_cc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (gr_moving_average_cc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_moving_average_cc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_moving_average_cc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_moving_average_cc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_moving_average_cc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_length(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_length",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_length" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->length();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_complex result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_scale",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_scale" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (*arg1)->scale();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_complex_Sl_float_Sg_(static_cast< std::complex<float> >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_set_length_and_scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  int arg2 ;
  gr_complex arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  std::complex< float > val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "length",(char *) "scale", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_moving_average_cc_sptr_set_length_and_scale",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_set_length_and_scale" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_cc_sptr_set_length_and_scale" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_std_complex_Sl_float_Sg_(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_moving_average_cc_sptr_set_length_and_scale" "', argument " "3"" of type '" "gr_complex""'");
  } 
  arg3 = static_cast< gr_complex >(val3);
  {
    try {
      (*arg1)->set_length_and_scale(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_cc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_cc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_cc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_cc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_moving_average_cc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_moving_average_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_moving_average_cc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_moving_average_cc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_moving_average_cc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_moving_average_cc > *arg1 = (boost::shared_ptr< gr_moving_average_cc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_moving_average_cc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_moving_average_cc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_moving_average_cc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_moving_average_cc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_moving_average_cc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_moving_average_cc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_moving_average_cc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_moving_average_cc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  gr_complex arg2 ;
  int arg3 = (int) 4096 ;
  int val1 ;
  int ecode1 = 0 ;
  std::complex< float > val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "length",(char *) "scale",(char *) "max_iter", NULL 
  };
  gr_moving_average_cc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO|O:moving_average_cc",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "moving_average_cc" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_std_complex_Sl_float_Sg_(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "moving_average_cc" "', argument " "2"" of type '" "gr_complex""'");
  } 
  arg2 = static_cast< gr_complex >(val2);
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "moving_average_cc" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  {
    try {
      result = gr_make_moving_average_cc(arg1,arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_moving_average_cc_sptr(static_cast< const gr_moving_average_cc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_moving_average_cc_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_bf_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_bf > *)new boost::shared_ptr< gr_chunks_to_symbols_bf >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_bf_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_chunks_to_symbols_bf *arg1 = (gr_chunks_to_symbols_bf *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_chunks_to_symbols_bf_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_chunks_to_symbols_bf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_chunks_to_symbols_bf_sptr" "', argument " "1"" of type '" "gr_chunks_to_symbols_bf *""'"); 
  }
  arg1 = reinterpret_cast< gr_chunks_to_symbols_bf * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_bf > *)new boost::shared_ptr< gr_chunks_to_symbols_bf >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_bf_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_chunks_to_symbols_bf_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_chunks_to_symbols_bf, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_chunks_to_symbols_bf_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_chunks_to_symbols_bf_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_bf >::shared_ptr()\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_bf >::shared_ptr(gr_chunks_to_symbols_bf *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_chunks_to_symbols_bf *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (gr_chunks_to_symbols_bf *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_chunks_to_symbols_bf, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_chunks_to_symbols_bf_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_chunks_to_symbols_bf_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_chunks_to_symbols_bf_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_D" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (int)(*arg1)->D();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_symbol_table(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_symbol_table",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_symbol_table" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (*arg1)->symbol_table();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<float,std::allocator< float > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_bf_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_bf_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_bf_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_bf_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_bf_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_chunks_to_symbols_bf_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_chunks_to_symbols_bf_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bf_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bf_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bf > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_chunks_to_symbols_bf_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bf_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bf > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_bf_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_chunks_to_symbols_bf_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_chunks_to_symbols_bf_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_chunks_to_symbols_bf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< float,std::allocator< float > > *arg1 = 0 ;
  int arg2 = (int) (int)1 ;
  int res1 = SWIG_OLDOBJ ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "symbol_table",(char *) "D", NULL 
  };
  gr_chunks_to_symbols_bf_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:chunks_to_symbols_bf",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::vector<float,std::allocator< float > > *ptr = (std::vector<float,std::allocator< float > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "chunks_to_symbols_bf" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chunks_to_symbols_bf" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "chunks_to_symbols_bf" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    try {
      result = gr_make_chunks_to_symbols_bf((std::vector< float,std::allocator< float > > const &)*arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_chunks_to_symbols_bf_sptr(static_cast< const gr_chunks_to_symbols_bf_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_bc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_bc > *)new boost::shared_ptr< gr_chunks_to_symbols_bc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_bc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_chunks_to_symbols_bc *arg1 = (gr_chunks_to_symbols_bc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_chunks_to_symbols_bc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_chunks_to_symbols_bc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_chunks_to_symbols_bc_sptr" "', argument " "1"" of type '" "gr_chunks_to_symbols_bc *""'"); 
  }
  arg1 = reinterpret_cast< gr_chunks_to_symbols_bc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_bc > *)new boost::shared_ptr< gr_chunks_to_symbols_bc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_bc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_chunks_to_symbols_bc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_chunks_to_symbols_bc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_chunks_to_symbols_bc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_chunks_to_symbols_bc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_bc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_bc >::shared_ptr(gr_chunks_to_symbols_bc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_chunks_to_symbols_bc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (gr_chunks_to_symbols_bc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_chunks_to_symbols_bc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_chunks_to_symbols_bc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_chunks_to_symbols_bc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_chunks_to_symbols_bc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_D" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->D();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_symbol_table(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_symbol_table",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_symbol_table" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (*arg1)->symbol_table();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<std::complex< float >,std::allocator< std::complex< float > > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_bc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_bc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_bc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_bc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_bc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_chunks_to_symbols_bc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_chunks_to_symbols_bc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_bc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_bc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_bc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_bc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_chunks_to_symbols_bc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_bc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_bc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_bc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_bc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_chunks_to_symbols_bc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_chunks_to_symbols_bc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_chunks_to_symbols_bc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< gr_complex,std::allocator< gr_complex > > *arg1 = 0 ;
  int arg2 = (int) (int)1 ;
  int res1 = SWIG_OLDOBJ ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "symbol_table",(char *) "D", NULL 
  };
  gr_chunks_to_symbols_bc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:chunks_to_symbols_bc",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::vector<std::complex< float >,std::allocator< std::complex< float > > > *ptr = (std::vector<std::complex< float >,std::allocator< std::complex< float > > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "chunks_to_symbols_bc" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chunks_to_symbols_bc" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "chunks_to_symbols_bc" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    try {
      result = gr_make_chunks_to_symbols_bc((std::vector< std::complex< float >,std::allocator< std::complex< float > > > const &)*arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_chunks_to_symbols_bc_sptr(static_cast< const gr_chunks_to_symbols_bc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_sf_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_sf > *)new boost::shared_ptr< gr_chunks_to_symbols_sf >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_sf_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_chunks_to_symbols_sf *arg1 = (gr_chunks_to_symbols_sf *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_chunks_to_symbols_sf_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_chunks_to_symbols_sf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_chunks_to_symbols_sf_sptr" "', argument " "1"" of type '" "gr_chunks_to_symbols_sf *""'"); 
  }
  arg1 = reinterpret_cast< gr_chunks_to_symbols_sf * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_sf > *)new boost::shared_ptr< gr_chunks_to_symbols_sf >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_sf_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_chunks_to_symbols_sf_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_chunks_to_symbols_sf, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_chunks_to_symbols_sf_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_chunks_to_symbols_sf_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_sf >::shared_ptr()\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_sf >::shared_ptr(gr_chunks_to_symbols_sf *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_chunks_to_symbols_sf *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (gr_chunks_to_symbols_sf *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_chunks_to_symbols_sf, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_chunks_to_symbols_sf_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_chunks_to_symbols_sf_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_chunks_to_symbols_sf_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_D" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (int)(*arg1)->D();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_symbol_table(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_symbol_table",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_symbol_table" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (*arg1)->symbol_table();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<float,std::allocator< float > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_sf_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_sf_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_sf_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_sf_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_sf_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_chunks_to_symbols_sf_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_chunks_to_symbols_sf_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sf_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sf_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sf > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sf > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_chunks_to_symbols_sf_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sf_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sf > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sf > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_sf_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_chunks_to_symbols_sf_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_chunks_to_symbols_sf_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_chunks_to_symbols_sf(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< float,std::allocator< float > > *arg1 = 0 ;
  int arg2 = (int) (int)1 ;
  int res1 = SWIG_OLDOBJ ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "symbol_table",(char *) "D", NULL 
  };
  gr_chunks_to_symbols_sf_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:chunks_to_symbols_sf",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::vector<float,std::allocator< float > > *ptr = (std::vector<float,std::allocator< float > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "chunks_to_symbols_sf" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chunks_to_symbols_sf" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "chunks_to_symbols_sf" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    try {
      result = gr_make_chunks_to_symbols_sf((std::vector< float,std::allocator< float > > const &)*arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_chunks_to_symbols_sf_sptr(static_cast< const gr_chunks_to_symbols_sf_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_sc_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_sc > *)new boost::shared_ptr< gr_chunks_to_symbols_sc >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_sc_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_chunks_to_symbols_sc *arg1 = (gr_chunks_to_symbols_sc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_chunks_to_symbols_sc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_chunks_to_symbols_sc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_chunks_to_symbols_sc_sptr" "', argument " "1"" of type '" "gr_chunks_to_symbols_sc *""'"); 
  }
  arg1 = reinterpret_cast< gr_chunks_to_symbols_sc * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_sc > *)new boost::shared_ptr< gr_chunks_to_symbols_sc >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_sc_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_chunks_to_symbols_sc_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_chunks_to_symbols_sc, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_chunks_to_symbols_sc_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_chunks_to_symbols_sc_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_sc >::shared_ptr()\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_sc >::shared_ptr(gr_chunks_to_symbols_sc *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_chunks_to_symbols_sc *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (gr_chunks_to_symbols_sc *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_chunks_to_symbols_sc, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_chunks_to_symbols_sc_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_chunks_to_symbols_sc_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_chunks_to_symbols_sc_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_D" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->D();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_symbol_table(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_symbol_table",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_symbol_table" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (*arg1)->symbol_table();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<std::complex< float >,std::allocator< std::complex< float > > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_sc_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_sc_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_sc_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_sc_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_sc_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_chunks_to_symbols_sc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_chunks_to_symbols_sc_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_sc_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_sc_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_sc > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_sc > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_chunks_to_symbols_sc_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_sc_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_sc > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_sc > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_sc_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_chunks_to_symbols_sc_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_chunks_to_symbols_sc_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_chunks_to_symbols_sc(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< gr_complex,std::allocator< gr_complex > > *arg1 = 0 ;
  int arg2 = (int) (int)1 ;
  int res1 = SWIG_OLDOBJ ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "symbol_table",(char *) "D", NULL 
  };
  gr_chunks_to_symbols_sc_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:chunks_to_symbols_sc",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::vector<std::complex< float >,std::allocator< std::complex< float > > > *ptr = (std::vector<std::complex< float >,std::allocator< std::complex< float > > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "chunks_to_symbols_sc" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chunks_to_symbols_sc" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "chunks_to_symbols_sc" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    try {
      result = gr_make_chunks_to_symbols_sc((std::vector< std::complex< float >,std::allocator< std::complex< float > > > const &)*arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_chunks_to_symbols_sc_sptr(static_cast< const gr_chunks_to_symbols_sc_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_if_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_if > *)new boost::shared_ptr< gr_chunks_to_symbols_if >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_if_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_chunks_to_symbols_if *arg1 = (gr_chunks_to_symbols_if *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_chunks_to_symbols_if > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_chunks_to_symbols_if_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_chunks_to_symbols_if, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_chunks_to_symbols_if_sptr" "', argument " "1"" of type '" "gr_chunks_to_symbols_if *""'"); 
  }
  arg1 = reinterpret_cast< gr_chunks_to_symbols_if * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_if > *)new boost::shared_ptr< gr_chunks_to_symbols_if >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_if_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_chunks_to_symbols_if_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_chunks_to_symbols_if, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_chunks_to_symbols_if_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_chunks_to_symbols_if_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_if >::shared_ptr()\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_if >::shared_ptr(gr_chunks_to_symbols_if *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_chunks_to_symbols_if *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (gr_chunks_to_symbols_if *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_chunks_to_symbols_if, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_chunks_to_symbols_if_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_chunks_to_symbols_if_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_chunks_to_symbols_if_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_D" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (int)(*arg1)->D();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_symbol_table(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< float,std::allocator< float > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_symbol_table",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_symbol_table" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (*arg1)->symbol_table();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<float,std::allocator< float > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_if_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_if_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_if_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_if_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_if_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_chunks_to_symbols_if_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_chunks_to_symbols_if_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_if_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_if_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_if > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_if > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_chunks_to_symbols_if_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_if_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_if > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_if > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_if_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_chunks_to_symbols_if_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_chunks_to_symbols_if_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_chunks_to_symbols_if(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< float,std::allocator< float > > *arg1 = 0 ;
  int arg2 = (int) (int)1 ;
  int res1 = SWIG_OLDOBJ ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "symbol_table",(char *) "D", NULL 
  };
  gr_chunks_to_symbols_if_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:chunks_to_symbols_if",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::vector<float,std::allocator< float > > *ptr = (std::vector<float,std::allocator< float > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "chunks_to_symbols_if" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chunks_to_symbols_if" "', argument " "1"" of type '" "std::vector< float,std::allocator< float > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "chunks_to_symbols_if" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    try {
      result = gr_make_chunks_to_symbols_if((std::vector< float,std::allocator< float > > const &)*arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_chunks_to_symbols_if_sptr(static_cast< const gr_chunks_to_symbols_if_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_ic_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_ic > *)new boost::shared_ptr< gr_chunks_to_symbols_ic >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_ic_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_chunks_to_symbols_ic *arg1 = (gr_chunks_to_symbols_ic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_chunks_to_symbols_ic_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_chunks_to_symbols_ic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_chunks_to_symbols_ic_sptr" "', argument " "1"" of type '" "gr_chunks_to_symbols_ic *""'"); 
  }
  arg1 = reinterpret_cast< gr_chunks_to_symbols_ic * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_chunks_to_symbols_ic > *)new boost::shared_ptr< gr_chunks_to_symbols_ic >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_chunks_to_symbols_ic_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_chunks_to_symbols_ic_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_chunks_to_symbols_ic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_chunks_to_symbols_ic_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_chunks_to_symbols_ic_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_ic >::shared_ptr()\n"
    "    boost::shared_ptr< gr_chunks_to_symbols_ic >::shared_ptr(gr_chunks_to_symbols_ic *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_chunks_to_symbols_ic *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (gr_chunks_to_symbols_ic *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_chunks_to_symbols_ic, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_chunks_to_symbols_ic_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_chunks_to_symbols_ic_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_chunks_to_symbols_ic_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_D(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_D",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_D" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (int)(*arg1)->D();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_symbol_table(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::vector< gr_complex,std::allocator< gr_complex > > result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_symbol_table",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_symbol_table" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (*arg1)->symbol_table();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = swig::from(static_cast< std::vector<std::complex< float >,std::allocator< std::complex< float > > > >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_ic_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_ic_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_ic_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_ic_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_chunks_to_symbols_ic_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_chunks_to_symbols_ic_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_chunks_to_symbols_ic_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_chunks_to_symbols_ic_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_chunks_to_symbols_ic_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_chunks_to_symbols_ic > *arg1 = (boost::shared_ptr< gr_chunks_to_symbols_ic > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_chunks_to_symbols_ic_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_chunks_to_symbols_ic_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_chunks_to_symbols_ic > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_chunks_to_symbols_ic > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_chunks_to_symbols_ic_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_chunks_to_symbols_ic_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_chunks_to_symbols_ic_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_chunks_to_symbols_ic(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  std::vector< gr_complex,std::allocator< gr_complex > > *arg1 = 0 ;
  int arg2 = (int) (int)1 ;
  int res1 = SWIG_OLDOBJ ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "symbol_table",(char *) "D", NULL 
  };
  gr_chunks_to_symbols_ic_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O|O:chunks_to_symbols_ic",kwnames,&obj0,&obj1)) SWIG_fail;
  {
    std::vector<std::complex< float >,std::allocator< std::complex< float > > > *ptr = (std::vector<std::complex< float >,std::allocator< std::complex< float > > > *)0;
    res1 = swig::asptr(obj0, &ptr);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "chunks_to_symbols_ic" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "chunks_to_symbols_ic" "', argument " "1"" of type '" "std::vector< gr_complex,std::allocator< gr_complex > > const &""'"); 
    }
    arg1 = ptr;
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_int(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "chunks_to_symbols_ic" "', argument " "2"" of type '" "int""'");
    } 
    arg2 = static_cast< int >(val2);
  }
  {
    try {
      result = gr_make_chunks_to_symbols_ic((std::vector< std::complex< float >,std::allocator< std::complex< float > > > const &)*arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_chunks_to_symbols_ic_sptr(static_cast< const gr_chunks_to_symbols_ic_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, SWIG_POINTER_OWN |  0 );
  if (SWIG_IsNewObj(res1)) delete arg1;
  return resultobj;
fail:
  if (SWIG_IsNewObj(res1)) delete arg1;
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_unpacked_to_packed_bb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_unpacked_to_packed_bb > *)new boost::shared_ptr< gr_unpacked_to_packed_bb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_unpacked_to_packed_bb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_unpacked_to_packed_bb *arg1 = (gr_unpacked_to_packed_bb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_unpacked_to_packed_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_unpacked_to_packed_bb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_unpacked_to_packed_bb_sptr" "', argument " "1"" of type '" "gr_unpacked_to_packed_bb *""'"); 
  }
  arg1 = reinterpret_cast< gr_unpacked_to_packed_bb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_unpacked_to_packed_bb > *)new boost::shared_ptr< gr_unpacked_to_packed_bb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_unpacked_to_packed_bb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_unpacked_to_packed_bb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_unpacked_to_packed_bb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_unpacked_to_packed_bb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_unpacked_to_packed_bb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_unpacked_to_packed_bb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_unpacked_to_packed_bb >::shared_ptr(gr_unpacked_to_packed_bb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_unpacked_to_packed_bb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (gr_unpacked_to_packed_bb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_unpacked_to_packed_bb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_unpacked_to_packed_bb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_unpacked_to_packed_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_unpacked_to_packed_bb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_unpacked_to_packed_bb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_unpacked_to_packed_bb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_unpacked_to_packed_bb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_unpacked_to_packed_bb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_unpacked_to_packed_bb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_unpacked_to_packed_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_unpacked_to_packed_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_bb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_bb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_bb > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_bb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_unpacked_to_packed_bb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_bb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_bb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_unpacked_to_packed_bb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_unpacked_to_packed_bb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_unpacked_to_packed_bb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_unpacked_to_packed_bb(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  gr_endianness_t arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "bits_per_chunk",(char *) "endianness", NULL 
  };
  gr_unpacked_to_packed_bb_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:unpacked_to_packed_bb",kwnames,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "unpacked_to_packed_bb" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "unpacked_to_packed_bb" "', argument " "2"" of type '" "gr_endianness_t""'");
  } 
  arg2 = static_cast< gr_endianness_t >(val2);
  {
    try {
      result = gr_make_unpacked_to_packed_bb(arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_unpacked_to_packed_bb_sptr(static_cast< const gr_unpacked_to_packed_bb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_unpacked_to_packed_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_unpacked_to_packed_ss > *)new boost::shared_ptr< gr_unpacked_to_packed_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_unpacked_to_packed_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_unpacked_to_packed_ss *arg1 = (gr_unpacked_to_packed_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_unpacked_to_packed_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_unpacked_to_packed_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_unpacked_to_packed_ss_sptr" "', argument " "1"" of type '" "gr_unpacked_to_packed_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_unpacked_to_packed_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_unpacked_to_packed_ss > *)new boost::shared_ptr< gr_unpacked_to_packed_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_unpacked_to_packed_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_unpacked_to_packed_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_unpacked_to_packed_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_unpacked_to_packed_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_unpacked_to_packed_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_unpacked_to_packed_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_unpacked_to_packed_ss >::shared_ptr(gr_unpacked_to_packed_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_unpacked_to_packed_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (gr_unpacked_to_packed_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_unpacked_to_packed_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_unpacked_to_packed_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_unpacked_to_packed_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_unpacked_to_packed_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_unpacked_to_packed_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_unpacked_to_packed_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_unpacked_to_packed_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_unpacked_to_packed_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_unpacked_to_packed_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_unpacked_to_packed_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_unpacked_to_packed_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ss > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_unpacked_to_packed_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_unpacked_to_packed_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_unpacked_to_packed_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_unpacked_to_packed_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_unpacked_to_packed_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  gr_endianness_t arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "bits_per_chunk",(char *) "endianness", NULL 
  };
  gr_unpacked_to_packed_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:unpacked_to_packed_ss",kwnames,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "unpacked_to_packed_ss" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "unpacked_to_packed_ss" "', argument " "2"" of type '" "gr_endianness_t""'");
  } 
  arg2 = static_cast< gr_endianness_t >(val2);
  {
    try {
      result = gr_make_unpacked_to_packed_ss(arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_unpacked_to_packed_ss_sptr(static_cast< const gr_unpacked_to_packed_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_unpacked_to_packed_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_unpacked_to_packed_ii > *)new boost::shared_ptr< gr_unpacked_to_packed_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_unpacked_to_packed_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_unpacked_to_packed_ii *arg1 = (gr_unpacked_to_packed_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_unpacked_to_packed_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_unpacked_to_packed_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_unpacked_to_packed_ii_sptr" "', argument " "1"" of type '" "gr_unpacked_to_packed_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_unpacked_to_packed_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_unpacked_to_packed_ii > *)new boost::shared_ptr< gr_unpacked_to_packed_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_unpacked_to_packed_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_unpacked_to_packed_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_unpacked_to_packed_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_unpacked_to_packed_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_unpacked_to_packed_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_unpacked_to_packed_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_unpacked_to_packed_ii >::shared_ptr(gr_unpacked_to_packed_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_unpacked_to_packed_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (gr_unpacked_to_packed_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_unpacked_to_packed_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_unpacked_to_packed_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_unpacked_to_packed_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_unpacked_to_packed_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_unpacked_to_packed_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_unpacked_to_packed_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_unpacked_to_packed_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_unpacked_to_packed_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_unpacked_to_packed_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_unpacked_to_packed_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_unpacked_to_packed_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_unpacked_to_packed_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_unpacked_to_packed_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_unpacked_to_packed_ii > *arg1 = (boost::shared_ptr< gr_unpacked_to_packed_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_unpacked_to_packed_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_unpacked_to_packed_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_unpacked_to_packed_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_unpacked_to_packed_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_unpacked_to_packed_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_unpacked_to_packed_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_unpacked_to_packed_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_unpacked_to_packed_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  gr_endianness_t arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "bits_per_chunk",(char *) "endianness", NULL 
  };
  gr_unpacked_to_packed_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:unpacked_to_packed_ii",kwnames,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "unpacked_to_packed_ii" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "unpacked_to_packed_ii" "', argument " "2"" of type '" "gr_endianness_t""'");
  } 
  arg2 = static_cast< gr_endianness_t >(val2);
  {
    try {
      result = gr_make_unpacked_to_packed_ii(arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_unpacked_to_packed_ii_sptr(static_cast< const gr_unpacked_to_packed_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_packed_to_unpacked_bb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_packed_to_unpacked_bb > *)new boost::shared_ptr< gr_packed_to_unpacked_bb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_packed_to_unpacked_bb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_packed_to_unpacked_bb *arg1 = (gr_packed_to_unpacked_bb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_packed_to_unpacked_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_packed_to_unpacked_bb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_packed_to_unpacked_bb_sptr" "', argument " "1"" of type '" "gr_packed_to_unpacked_bb *""'"); 
  }
  arg1 = reinterpret_cast< gr_packed_to_unpacked_bb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_packed_to_unpacked_bb > *)new boost::shared_ptr< gr_packed_to_unpacked_bb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_packed_to_unpacked_bb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_packed_to_unpacked_bb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_packed_to_unpacked_bb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_packed_to_unpacked_bb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_packed_to_unpacked_bb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_packed_to_unpacked_bb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_packed_to_unpacked_bb >::shared_ptr(gr_packed_to_unpacked_bb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_packed_to_unpacked_bb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (gr_packed_to_unpacked_bb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_packed_to_unpacked_bb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_packed_to_unpacked_bb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_packed_to_unpacked_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_packed_to_unpacked_bb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_packed_to_unpacked_bb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_packed_to_unpacked_bb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_packed_to_unpacked_bb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_packed_to_unpacked_bb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_packed_to_unpacked_bb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_packed_to_unpacked_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_packed_to_unpacked_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_bb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_bb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_bb > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_bb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_packed_to_unpacked_bb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_bb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_bb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_packed_to_unpacked_bb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_packed_to_unpacked_bb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_packed_to_unpacked_bb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_packed_to_unpacked_bb(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  gr_endianness_t arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "bits_per_chunk",(char *) "endianness", NULL 
  };
  gr_packed_to_unpacked_bb_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:packed_to_unpacked_bb",kwnames,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "packed_to_unpacked_bb" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "packed_to_unpacked_bb" "', argument " "2"" of type '" "gr_endianness_t""'");
  } 
  arg2 = static_cast< gr_endianness_t >(val2);
  {
    try {
      result = gr_make_packed_to_unpacked_bb(arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_packed_to_unpacked_bb_sptr(static_cast< const gr_packed_to_unpacked_bb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_packed_to_unpacked_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_packed_to_unpacked_ss > *)new boost::shared_ptr< gr_packed_to_unpacked_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_packed_to_unpacked_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_packed_to_unpacked_ss *arg1 = (gr_packed_to_unpacked_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_packed_to_unpacked_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_packed_to_unpacked_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_packed_to_unpacked_ss_sptr" "', argument " "1"" of type '" "gr_packed_to_unpacked_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_packed_to_unpacked_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_packed_to_unpacked_ss > *)new boost::shared_ptr< gr_packed_to_unpacked_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_packed_to_unpacked_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_packed_to_unpacked_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_packed_to_unpacked_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_packed_to_unpacked_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_packed_to_unpacked_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_packed_to_unpacked_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_packed_to_unpacked_ss >::shared_ptr(gr_packed_to_unpacked_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_packed_to_unpacked_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (gr_packed_to_unpacked_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_packed_to_unpacked_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_packed_to_unpacked_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_packed_to_unpacked_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_packed_to_unpacked_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_packed_to_unpacked_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_packed_to_unpacked_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_packed_to_unpacked_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_packed_to_unpacked_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_packed_to_unpacked_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_packed_to_unpacked_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_packed_to_unpacked_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ss > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_packed_to_unpacked_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_packed_to_unpacked_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_packed_to_unpacked_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_packed_to_unpacked_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_packed_to_unpacked_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  gr_endianness_t arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "bits_per_chunk",(char *) "endianness", NULL 
  };
  gr_packed_to_unpacked_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:packed_to_unpacked_ss",kwnames,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "packed_to_unpacked_ss" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "packed_to_unpacked_ss" "', argument " "2"" of type '" "gr_endianness_t""'");
  } 
  arg2 = static_cast< gr_endianness_t >(val2);
  {
    try {
      result = gr_make_packed_to_unpacked_ss(arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_packed_to_unpacked_ss_sptr(static_cast< const gr_packed_to_unpacked_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_packed_to_unpacked_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_packed_to_unpacked_ii > *)new boost::shared_ptr< gr_packed_to_unpacked_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_packed_to_unpacked_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_packed_to_unpacked_ii *arg1 = (gr_packed_to_unpacked_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_packed_to_unpacked_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_packed_to_unpacked_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_packed_to_unpacked_ii_sptr" "', argument " "1"" of type '" "gr_packed_to_unpacked_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_packed_to_unpacked_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_packed_to_unpacked_ii > *)new boost::shared_ptr< gr_packed_to_unpacked_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_packed_to_unpacked_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_packed_to_unpacked_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_packed_to_unpacked_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_packed_to_unpacked_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_packed_to_unpacked_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_packed_to_unpacked_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_packed_to_unpacked_ii >::shared_ptr(gr_packed_to_unpacked_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_packed_to_unpacked_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (gr_packed_to_unpacked_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_packed_to_unpacked_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_packed_to_unpacked_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_packed_to_unpacked_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_packed_to_unpacked_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_packed_to_unpacked_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_packed_to_unpacked_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_packed_to_unpacked_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_packed_to_unpacked_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_packed_to_unpacked_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_packed_to_unpacked_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_packed_to_unpacked_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_packed_to_unpacked_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_packed_to_unpacked_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_packed_to_unpacked_ii > *arg1 = (boost::shared_ptr< gr_packed_to_unpacked_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_packed_to_unpacked_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_packed_to_unpacked_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_packed_to_unpacked_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_packed_to_unpacked_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_packed_to_unpacked_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_packed_to_unpacked_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_packed_to_unpacked_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_packed_to_unpacked_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  unsigned int arg1 ;
  gr_endianness_t arg2 ;
  unsigned int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "bits_per_chunk",(char *) "endianness", NULL 
  };
  gr_packed_to_unpacked_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:packed_to_unpacked_ii",kwnames,&obj0,&obj1)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "packed_to_unpacked_ii" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "packed_to_unpacked_ii" "', argument " "2"" of type '" "gr_endianness_t""'");
  } 
  arg2 = static_cast< gr_endianness_t >(val2);
  {
    try {
      result = gr_make_packed_to_unpacked_ii(arg1,arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_packed_to_unpacked_ii_sptr(static_cast< const gr_packed_to_unpacked_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_xor_bb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_xor_bb > *)new boost::shared_ptr< gr_xor_bb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_xor_bb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_xor_bb *arg1 = (gr_xor_bb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_xor_bb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_xor_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_xor_bb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_xor_bb_sptr" "', argument " "1"" of type '" "gr_xor_bb *""'"); 
  }
  arg1 = reinterpret_cast< gr_xor_bb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_xor_bb > *)new boost::shared_ptr< gr_xor_bb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_xor_bb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_xor_bb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_xor_bb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_xor_bb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_xor_bb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_xor_bb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_xor_bb >::shared_ptr(gr_xor_bb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_xor_bb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (gr_xor_bb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_xor_bb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_xor_bb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_xor_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_xor_bb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_xor_bb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_xor_bb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_xor_bb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_xor_bb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_xor_bb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_xor_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_xor_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_bb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_bb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_bb > *arg1 = (boost::shared_ptr< gr_xor_bb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_xor_bb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_bb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_bb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_xor_bb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_xor_bb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_xor_bb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_xor_bb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_xor_bb_sptr result;
  
  {
    try {
      result = gr_make_xor_bb();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_xor_bb_sptr(static_cast< const gr_xor_bb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_xor_bb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_xor_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_xor_ss > *)new boost::shared_ptr< gr_xor_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_xor_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_xor_ss *arg1 = (gr_xor_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_xor_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_xor_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_xor_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_xor_ss_sptr" "', argument " "1"" of type '" "gr_xor_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_xor_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_xor_ss > *)new boost::shared_ptr< gr_xor_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_xor_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_xor_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_xor_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_xor_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_xor_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_xor_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_xor_ss >::shared_ptr(gr_xor_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_xor_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (gr_xor_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_xor_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_xor_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_xor_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_xor_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_xor_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_xor_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_xor_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_xor_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_xor_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_xor_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_xor_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ss > *arg1 = (boost::shared_ptr< gr_xor_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_xor_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_xor_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_xor_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_xor_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_xor_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_xor_ss_sptr result;
  
  {
    try {
      result = gr_make_xor_ss();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_xor_ss_sptr(static_cast< const gr_xor_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_xor_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_xor_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_xor_ii > *)new boost::shared_ptr< gr_xor_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_xor_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_xor_ii *arg1 = (gr_xor_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_xor_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_xor_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_xor_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_xor_ii_sptr" "', argument " "1"" of type '" "gr_xor_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_xor_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_xor_ii > *)new boost::shared_ptr< gr_xor_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_xor_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_xor_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_xor_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_xor_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_xor_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_xor_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_xor_ii >::shared_ptr(gr_xor_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_xor_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (gr_xor_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_xor_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_xor_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_xor_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_xor_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_xor_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_xor_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_xor_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_xor_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_xor_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_xor_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_xor_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_xor_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_xor_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_xor_ii > *arg1 = (boost::shared_ptr< gr_xor_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_xor_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_xor_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_xor_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_xor_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_xor_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_xor_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_xor_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_xor_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_xor_ii_sptr result;
  
  {
    try {
      result = gr_make_xor_ii();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_xor_ii_sptr(static_cast< const gr_xor_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_xor_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_bb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_and_bb > *)new boost::shared_ptr< gr_and_bb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_bb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_and_bb *arg1 = (gr_and_bb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_and_bb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_and_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_and_bb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_and_bb_sptr" "', argument " "1"" of type '" "gr_and_bb *""'"); 
  }
  arg1 = reinterpret_cast< gr_and_bb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_and_bb > *)new boost::shared_ptr< gr_and_bb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_bb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_and_bb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_and_bb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_and_bb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_and_bb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_and_bb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_and_bb >::shared_ptr(gr_and_bb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_and_bb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (gr_and_bb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_and_bb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_and_bb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_and_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_and_bb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_bb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_bb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_bb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_bb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_bb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_and_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_and_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_bb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_bb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_bb > *arg1 = (boost::shared_ptr< gr_and_bb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_and_bb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_bb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_bb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_bb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_and_bb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_and_bb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_and_bb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_and_bb_sptr result;
  
  {
    try {
      result = gr_make_and_bb();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_and_bb_sptr(static_cast< const gr_and_bb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_and_bb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_and_ss > *)new boost::shared_ptr< gr_and_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_and_ss *arg1 = (gr_and_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_and_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_and_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_and_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_and_ss_sptr" "', argument " "1"" of type '" "gr_and_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_and_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_and_ss > *)new boost::shared_ptr< gr_and_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_and_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_and_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_and_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_and_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_and_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_and_ss >::shared_ptr(gr_and_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_and_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (gr_and_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_and_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_and_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_and_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_and_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_and_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_and_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ss > *arg1 = (boost::shared_ptr< gr_and_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_and_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_and_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_and_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_and_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_and_ss_sptr result;
  
  {
    try {
      result = gr_make_and_ss();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_and_ss_sptr(static_cast< const gr_and_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_and_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_and_ii > *)new boost::shared_ptr< gr_and_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_and_ii *arg1 = (gr_and_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_and_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_and_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_and_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_and_ii_sptr" "', argument " "1"" of type '" "gr_and_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_and_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_and_ii > *)new boost::shared_ptr< gr_and_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_and_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_and_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_and_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_and_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_and_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_and_ii >::shared_ptr(gr_and_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_and_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (gr_and_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_and_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_and_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_and_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_and_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_and_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_and_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_ii > *arg1 = (boost::shared_ptr< gr_and_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_and_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_and_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_and_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_and_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_and_ii_sptr result;
  
  {
    try {
      result = gr_make_and_ii();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_and_ii_sptr(static_cast< const gr_and_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_and_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_const_bb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_and_const_bb > *)new boost::shared_ptr< gr_and_const_bb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_const_bb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_and_const_bb *arg1 = (gr_and_const_bb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_and_const_bb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_and_const_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_and_const_bb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_and_const_bb_sptr" "', argument " "1"" of type '" "gr_and_const_bb *""'"); 
  }
  arg1 = reinterpret_cast< gr_and_const_bb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_and_const_bb > *)new boost::shared_ptr< gr_and_const_bb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_const_bb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_and_const_bb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_and_const_bb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_and_const_bb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_and_const_bb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_and_const_bb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_and_const_bb >::shared_ptr(gr_and_const_bb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_and_const_bb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (gr_and_const_bb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_and_const_bb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_and_const_bb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_and_const_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_and_const_bb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned char result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (unsigned char)(*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_char(static_cast< unsigned char >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  unsigned char arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned char val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_bb_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_bb_sptr_set_k" "', argument " "2"" of type '" "unsigned char""'");
  } 
  arg2 = static_cast< unsigned char >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_bb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_bb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_bb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_bb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_bb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_and_const_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_and_const_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_bb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_bb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_bb > *arg1 = (boost::shared_ptr< gr_and_const_bb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_and_const_bb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_bb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_bb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_bb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_and_const_bb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_and_const_bb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_and_const_bb(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  unsigned char arg1 ;
  unsigned char val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_and_const_bb_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:and_const_bb",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_char(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "and_const_bb" "', argument " "1"" of type '" "unsigned char""'");
  } 
  arg1 = static_cast< unsigned char >(val1);
  {
    try {
      result = gr_make_and_const_bb(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_and_const_bb_sptr(static_cast< const gr_and_const_bb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_and_const_bb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_const_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_and_const_ss > *)new boost::shared_ptr< gr_and_const_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_const_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_and_const_ss *arg1 = (gr_and_const_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_and_const_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_and_const_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_and_const_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_and_const_ss_sptr" "', argument " "1"" of type '" "gr_and_const_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_and_const_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_and_const_ss > *)new boost::shared_ptr< gr_and_const_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_const_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_and_const_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_and_const_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_and_const_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_and_const_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_and_const_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_and_const_ss >::shared_ptr(gr_and_const_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_and_const_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (gr_and_const_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_and_const_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_and_const_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_and_const_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_and_const_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  short result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (short)(*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_short(static_cast< short >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  short arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  short val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_ss_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_ss_sptr_set_k" "', argument " "2"" of type '" "short""'");
  } 
  arg2 = static_cast< short >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_and_const_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_and_const_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ss > *arg1 = (boost::shared_ptr< gr_and_const_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_and_const_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_and_const_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_and_const_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_and_const_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  short arg1 ;
  short val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_and_const_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:and_const_ss",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_short(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "and_const_ss" "', argument " "1"" of type '" "short""'");
  } 
  arg1 = static_cast< short >(val1);
  {
    try {
      result = gr_make_and_const_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_and_const_ss_sptr(static_cast< const gr_and_const_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_const_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_and_const_ii > *)new boost::shared_ptr< gr_and_const_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_const_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_and_const_ii *arg1 = (gr_and_const_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_and_const_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_and_const_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_and_const_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_and_const_ii_sptr" "', argument " "1"" of type '" "gr_and_const_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_and_const_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_and_const_ii > *)new boost::shared_ptr< gr_and_const_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_and_const_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_and_const_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_and_const_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_and_const_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_and_const_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_and_const_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_and_const_ii >::shared_ptr(gr_and_const_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_and_const_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (gr_and_const_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_and_const_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_and_const_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_and_const_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_and_const_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_k",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->k();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_set_k(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "k", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_ii_sptr_set_k",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_set_k" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_ii_sptr_set_k" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_k(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_and_const_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_and_const_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_and_const_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_and_const_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_and_const_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_and_const_ii > *arg1 = (boost::shared_ptr< gr_and_const_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_and_const_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_and_const_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_and_const_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_and_const_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_and_const_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_and_const_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_and_const_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_and_const_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "k", NULL 
  };
  gr_and_const_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:and_const_ii",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "and_const_ii" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    try {
      result = gr_make_and_const_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_and_const_ii_sptr(static_cast< const gr_and_const_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_and_const_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_or_bb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_or_bb > *)new boost::shared_ptr< gr_or_bb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_or_bb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_or_bb *arg1 = (gr_or_bb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_or_bb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_or_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_or_bb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_or_bb_sptr" "', argument " "1"" of type '" "gr_or_bb *""'"); 
  }
  arg1 = reinterpret_cast< gr_or_bb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_or_bb > *)new boost::shared_ptr< gr_or_bb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_or_bb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_or_bb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_or_bb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_or_bb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_or_bb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_or_bb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_or_bb >::shared_ptr(gr_or_bb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_or_bb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (gr_or_bb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_or_bb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_or_bb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_or_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_or_bb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_or_bb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_or_bb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_or_bb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_or_bb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_or_bb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_or_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_or_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_bb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_bb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_bb > *arg1 = (boost::shared_ptr< gr_or_bb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_or_bb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_bb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_bb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_or_bb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_or_bb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_or_bb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_or_bb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_or_bb_sptr result;
  
  {
    try {
      result = gr_make_or_bb();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_or_bb_sptr(static_cast< const gr_or_bb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_or_bb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_or_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_or_ss > *)new boost::shared_ptr< gr_or_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_or_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_or_ss *arg1 = (gr_or_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_or_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_or_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_or_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_or_ss_sptr" "', argument " "1"" of type '" "gr_or_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_or_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_or_ss > *)new boost::shared_ptr< gr_or_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_or_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_or_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_or_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_or_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_or_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_or_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_or_ss >::shared_ptr(gr_or_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_or_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (gr_or_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_or_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_or_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_or_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_or_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_or_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_or_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_or_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_or_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_or_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_or_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_or_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ss > *arg1 = (boost::shared_ptr< gr_or_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_or_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_or_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_or_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_or_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_or_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_or_ss_sptr result;
  
  {
    try {
      result = gr_make_or_ss();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_or_ss_sptr(static_cast< const gr_or_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_or_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_or_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_or_ii > *)new boost::shared_ptr< gr_or_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_or_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_or_ii *arg1 = (gr_or_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_or_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_or_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_or_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_or_ii_sptr" "', argument " "1"" of type '" "gr_or_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_or_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_or_ii > *)new boost::shared_ptr< gr_or_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_or_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_or_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_or_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_or_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_or_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_or_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_or_ii >::shared_ptr(gr_or_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_or_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (gr_or_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_or_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_or_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_or_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_or_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_or_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_or_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_or_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_or_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_or_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_or_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_or_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_or_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_or_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_or_ii > *arg1 = (boost::shared_ptr< gr_or_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_or_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_or_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_or_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_or_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_or_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_or_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_or_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_or_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_or_ii_sptr result;
  
  {
    try {
      result = gr_make_or_ii();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_or_ii_sptr(static_cast< const gr_or_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_or_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_not_bb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_not_bb > *)new boost::shared_ptr< gr_not_bb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_not_bb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_not_bb *arg1 = (gr_not_bb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_not_bb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_not_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_not_bb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_not_bb_sptr" "', argument " "1"" of type '" "gr_not_bb *""'"); 
  }
  arg1 = reinterpret_cast< gr_not_bb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_not_bb > *)new boost::shared_ptr< gr_not_bb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_not_bb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_not_bb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_not_bb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_not_bb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_not_bb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_not_bb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_not_bb >::shared_ptr(gr_not_bb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_not_bb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (gr_not_bb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_not_bb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_not_bb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_not_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_not_bb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_not_bb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_not_bb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_not_bb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_not_bb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_not_bb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_not_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_not_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_bb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_bb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_bb > *arg1 = (boost::shared_ptr< gr_not_bb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_not_bb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_bb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_bb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_not_bb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_not_bb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_not_bb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_not_bb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_not_bb_sptr result;
  
  {
    try {
      result = gr_make_not_bb();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_not_bb_sptr(static_cast< const gr_not_bb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_not_bb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_not_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_not_ss > *)new boost::shared_ptr< gr_not_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_not_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_not_ss *arg1 = (gr_not_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_not_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_not_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_not_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_not_ss_sptr" "', argument " "1"" of type '" "gr_not_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_not_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_not_ss > *)new boost::shared_ptr< gr_not_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_not_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_not_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_not_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_not_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_not_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_not_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_not_ss >::shared_ptr(gr_not_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_not_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (gr_not_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_not_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_not_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_not_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_not_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_not_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_not_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_not_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_not_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_not_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_not_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_not_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ss > *arg1 = (boost::shared_ptr< gr_not_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_not_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_not_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_not_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_not_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_not_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_not_ss_sptr result;
  
  {
    try {
      result = gr_make_not_ss();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_not_ss_sptr(static_cast< const gr_not_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_not_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_not_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_not_ii > *)new boost::shared_ptr< gr_not_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_not_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_not_ii *arg1 = (gr_not_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_not_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_not_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_not_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_not_ii_sptr" "', argument " "1"" of type '" "gr_not_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_not_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_not_ii > *)new boost::shared_ptr< gr_not_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_not_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_not_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_not_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_not_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_not_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_not_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_not_ii >::shared_ptr(gr_not_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_not_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (gr_not_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_not_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_not_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_not_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_not_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_not_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_not_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_not_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_not_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_not_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_not_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_not_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_not_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_not_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_not_ii > *arg1 = (boost::shared_ptr< gr_not_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_not_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_not_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_not_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_not_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_not_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_not_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_not_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_not_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_not_ii_sptr result;
  
  {
    try {
      result = gr_make_not_ii();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_not_ii_sptr(static_cast< const gr_not_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_not_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_bb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sample_and_hold_bb > *)new boost::shared_ptr< gr_sample_and_hold_bb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_bb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sample_and_hold_bb *arg1 = (gr_sample_and_hold_bb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sample_and_hold_bb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sample_and_hold_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sample_and_hold_bb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sample_and_hold_bb_sptr" "', argument " "1"" of type '" "gr_sample_and_hold_bb *""'"); 
  }
  arg1 = reinterpret_cast< gr_sample_and_hold_bb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sample_and_hold_bb > *)new boost::shared_ptr< gr_sample_and_hold_bb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_bb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sample_and_hold_bb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sample_and_hold_bb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sample_and_hold_bb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sample_and_hold_bb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sample_and_hold_bb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sample_and_hold_bb >::shared_ptr(gr_sample_and_hold_bb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sample_and_hold_bb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (gr_sample_and_hold_bb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sample_and_hold_bb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sample_and_hold_bb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sample_and_hold_bb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sample_and_hold_bb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_bb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_bb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_bb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_bb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_bb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sample_and_hold_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sample_and_hold_bb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_bb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_bb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_bb > *arg1 = (boost::shared_ptr< gr_sample_and_hold_bb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sample_and_hold_bb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_bb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_bb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_bb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_bb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sample_and_hold_bb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sample_and_hold_bb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sample_and_hold_bb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sample_and_hold_bb_sptr result;
  
  {
    try {
      result = gr_make_sample_and_hold_bb();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sample_and_hold_bb_sptr(static_cast< const gr_sample_and_hold_bb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_bb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sample_and_hold_ss > *)new boost::shared_ptr< gr_sample_and_hold_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sample_and_hold_ss *arg1 = (gr_sample_and_hold_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sample_and_hold_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sample_and_hold_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sample_and_hold_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sample_and_hold_ss_sptr" "', argument " "1"" of type '" "gr_sample_and_hold_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_sample_and_hold_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sample_and_hold_ss > *)new boost::shared_ptr< gr_sample_and_hold_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sample_and_hold_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sample_and_hold_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sample_and_hold_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sample_and_hold_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sample_and_hold_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sample_and_hold_ss >::shared_ptr(gr_sample_and_hold_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sample_and_hold_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (gr_sample_and_hold_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sample_and_hold_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sample_and_hold_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sample_and_hold_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sample_and_hold_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sample_and_hold_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sample_and_hold_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ss > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sample_and_hold_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sample_and_hold_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sample_and_hold_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sample_and_hold_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sample_and_hold_ss_sptr result;
  
  {
    try {
      result = gr_make_sample_and_hold_ss();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sample_and_hold_ss_sptr(static_cast< const gr_sample_and_hold_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sample_and_hold_ii > *)new boost::shared_ptr< gr_sample_and_hold_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sample_and_hold_ii *arg1 = (gr_sample_and_hold_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sample_and_hold_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sample_and_hold_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sample_and_hold_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sample_and_hold_ii_sptr" "', argument " "1"" of type '" "gr_sample_and_hold_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_sample_and_hold_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sample_and_hold_ii > *)new boost::shared_ptr< gr_sample_and_hold_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sample_and_hold_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sample_and_hold_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sample_and_hold_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sample_and_hold_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sample_and_hold_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sample_and_hold_ii >::shared_ptr(gr_sample_and_hold_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sample_and_hold_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (gr_sample_and_hold_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sample_and_hold_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sample_and_hold_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sample_and_hold_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sample_and_hold_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sample_and_hold_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sample_and_hold_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ii > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sample_and_hold_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sample_and_hold_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sample_and_hold_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sample_and_hold_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sample_and_hold_ii_sptr result;
  
  {
    try {
      result = gr_make_sample_and_hold_ii();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sample_and_hold_ii_sptr(static_cast< const gr_sample_and_hold_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_ff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_sample_and_hold_ff > *)new boost::shared_ptr< gr_sample_and_hold_ff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_ff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sample_and_hold_ff *arg1 = (gr_sample_and_hold_ff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_sample_and_hold_ff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_sample_and_hold_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_sample_and_hold_ff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_sample_and_hold_ff_sptr" "', argument " "1"" of type '" "gr_sample_and_hold_ff *""'"); 
  }
  arg1 = reinterpret_cast< gr_sample_and_hold_ff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_sample_and_hold_ff > *)new boost::shared_ptr< gr_sample_and_hold_ff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_sample_and_hold_ff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_sample_and_hold_ff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_sample_and_hold_ff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_sample_and_hold_ff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_sample_and_hold_ff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_sample_and_hold_ff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_sample_and_hold_ff >::shared_ptr(gr_sample_and_hold_ff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_sample_and_hold_ff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (gr_sample_and_hold_ff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_sample_and_hold_ff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_sample_and_hold_ff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_sample_and_hold_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_sample_and_hold_ff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_ff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_ff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_ff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_ff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_sample_and_hold_ff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_sample_and_hold_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_sample_and_hold_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_sample_and_hold_ff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_sample_and_hold_ff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_sample_and_hold_ff > *arg1 = (boost::shared_ptr< gr_sample_and_hold_ff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_sample_and_hold_ff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_sample_and_hold_ff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_sample_and_hold_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_sample_and_hold_ff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_sample_and_hold_ff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_sample_and_hold_ff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_sample_and_hold_ff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_sample_and_hold_ff(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_sample_and_hold_ff_sptr result;
  
  {
    try {
      result = gr_make_sample_and_hold_ff();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_sample_and_hold_ff_sptr(static_cast< const gr_sample_and_hold_ff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_sample_and_hold_ff_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_argmax_fs_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_argmax_fs > *)new boost::shared_ptr< gr_argmax_fs >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_argmax_fs_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_argmax_fs *arg1 = (gr_argmax_fs *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_argmax_fs > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_argmax_fs_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_argmax_fs, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_argmax_fs_sptr" "', argument " "1"" of type '" "gr_argmax_fs *""'"); 
  }
  arg1 = reinterpret_cast< gr_argmax_fs * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_argmax_fs > *)new boost::shared_ptr< gr_argmax_fs >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_argmax_fs_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_argmax_fs_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_argmax_fs, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_argmax_fs_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_argmax_fs_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_argmax_fs >::shared_ptr()\n"
    "    boost::shared_ptr< gr_argmax_fs >::shared_ptr(gr_argmax_fs *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_argmax_fs *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (gr_argmax_fs *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_argmax_fs, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_argmax_fs_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_argmax_fs_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_argmax_fs_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_argmax_fs_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_argmax_fs_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_argmax_fs_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_argmax_fs_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_argmax_fs_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_argmax_fs_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_argmax_fs_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_fs_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_fs_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_fs > *arg1 = (boost::shared_ptr< gr_argmax_fs > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_argmax_fs_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_fs_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_fs > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_fs > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_argmax_fs_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_argmax_fs_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_argmax_fs_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_argmax_fs(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_argmax_fs_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:argmax_fs",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "argmax_fs" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_argmax_fs(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_argmax_fs_sptr(static_cast< const gr_argmax_fs_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_argmax_fs_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_argmax_is_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_argmax_is > *)new boost::shared_ptr< gr_argmax_is >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_argmax_is_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_argmax_is *arg1 = (gr_argmax_is *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_argmax_is > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_argmax_is_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_argmax_is, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_argmax_is_sptr" "', argument " "1"" of type '" "gr_argmax_is *""'"); 
  }
  arg1 = reinterpret_cast< gr_argmax_is * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_argmax_is > *)new boost::shared_ptr< gr_argmax_is >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_argmax_is_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_argmax_is_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_argmax_is, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_argmax_is_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_argmax_is_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_argmax_is >::shared_ptr()\n"
    "    boost::shared_ptr< gr_argmax_is >::shared_ptr(gr_argmax_is *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_argmax_is *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (gr_argmax_is *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_argmax_is, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_argmax_is_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_argmax_is_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_argmax_is_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_argmax_is_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_argmax_is_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_argmax_is_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_argmax_is_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_argmax_is_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_argmax_is_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_argmax_is_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_is_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_is_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_is > *arg1 = (boost::shared_ptr< gr_argmax_is > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_argmax_is_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_is_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_is > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_is > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_argmax_is_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_argmax_is_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_argmax_is_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_argmax_is(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_argmax_is_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:argmax_is",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "argmax_is" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_argmax_is(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_argmax_is_sptr(static_cast< const gr_argmax_is_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_argmax_is_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_argmax_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_argmax_ss > *)new boost::shared_ptr< gr_argmax_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_argmax_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_argmax_ss *arg1 = (gr_argmax_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_argmax_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_argmax_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_argmax_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_argmax_ss_sptr" "', argument " "1"" of type '" "gr_argmax_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_argmax_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_argmax_ss > *)new boost::shared_ptr< gr_argmax_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_argmax_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_argmax_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_argmax_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_argmax_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_argmax_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_argmax_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_argmax_ss >::shared_ptr(gr_argmax_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_argmax_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (gr_argmax_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_argmax_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_argmax_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_argmax_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_argmax_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_argmax_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_argmax_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_argmax_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_argmax_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_argmax_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_argmax_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_argmax_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_argmax_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_argmax_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_argmax_ss > *arg1 = (boost::shared_ptr< gr_argmax_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_argmax_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_argmax_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_argmax_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_argmax_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_argmax_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_argmax_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_argmax_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_argmax_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_argmax_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:argmax_ss",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "argmax_ss" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_argmax_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_argmax_ss_sptr(static_cast< const gr_argmax_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_argmax_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_max_ff_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_max_ff > *)new boost::shared_ptr< gr_max_ff >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_max_ff_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_max_ff *arg1 = (gr_max_ff *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_max_ff > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_max_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_max_ff, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_max_ff_sptr" "', argument " "1"" of type '" "gr_max_ff *""'"); 
  }
  arg1 = reinterpret_cast< gr_max_ff * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_max_ff > *)new boost::shared_ptr< gr_max_ff >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_max_ff_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_max_ff_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_max_ff, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_max_ff_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_max_ff_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_max_ff >::shared_ptr()\n"
    "    boost::shared_ptr< gr_max_ff >::shared_ptr(gr_max_ff *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_max_ff *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (gr_max_ff *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_max_ff, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_max_ff_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_max_ff_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_max_ff_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_max_ff_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_max_ff_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_max_ff_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_max_ff_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_max_ff_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_max_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_max_ff_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ff_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ff_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ff > *arg1 = (boost::shared_ptr< gr_max_ff > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_max_ff_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ff_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ff > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ff > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_max_ff_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_max_ff_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_max_ff_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_max_ff(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_max_ff_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:max_ff",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "max_ff" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_max_ff(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_max_ff_sptr(static_cast< const gr_max_ff_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_max_ff_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_max_ii_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_max_ii > *)new boost::shared_ptr< gr_max_ii >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_max_ii_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_max_ii *arg1 = (gr_max_ii *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_max_ii > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_max_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_max_ii, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_max_ii_sptr" "', argument " "1"" of type '" "gr_max_ii *""'"); 
  }
  arg1 = reinterpret_cast< gr_max_ii * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_max_ii > *)new boost::shared_ptr< gr_max_ii >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_max_ii_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_max_ii_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_max_ii, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_max_ii_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_max_ii_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_max_ii >::shared_ptr()\n"
    "    boost::shared_ptr< gr_max_ii >::shared_ptr(gr_max_ii *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_max_ii *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (gr_max_ii *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_max_ii, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_max_ii_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_max_ii_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_max_ii_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_max_ii_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_max_ii_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_max_ii_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_max_ii_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_max_ii_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_max_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_max_ii_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ii_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ii_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ii > *arg1 = (boost::shared_ptr< gr_max_ii > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_max_ii_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ii_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ii > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ii > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_max_ii_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_max_ii_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_max_ii_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_max_ii(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_max_ii_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:max_ii",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "max_ii" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_max_ii(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_max_ii_sptr(static_cast< const gr_max_ii_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_max_ii_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_max_ss_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_max_ss > *)new boost::shared_ptr< gr_max_ss >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_max_ss_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_max_ss *arg1 = (gr_max_ss *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_max_ss > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_max_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_max_ss, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_max_ss_sptr" "', argument " "1"" of type '" "gr_max_ss *""'"); 
  }
  arg1 = reinterpret_cast< gr_max_ss * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_max_ss > *)new boost::shared_ptr< gr_max_ss >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_max_ss_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_max_ss_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_max_ss, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_max_ss_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_max_ss_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_max_ss >::shared_ptr()\n"
    "    boost::shared_ptr< gr_max_ss >::shared_ptr(gr_max_ss *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_max_ss *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (gr_max_ss *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_max_ss, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_max_ss_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_max_ss_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_max_ss_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_max_ss_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_max_ss_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_max_ss_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_max_ss_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_max_ss_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_max_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_max_ss_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_max_ss_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_max_ss_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_max_ss > *arg1 = (boost::shared_ptr< gr_max_ss > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_max_ss_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_max_ss_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_max_ss > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_max_ss > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_max_ss_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_max_ss_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_max_ss_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_max_ss(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  size_t arg1 ;
  size_t val1 ;
  int ecode1 = 0 ;
  PyObject * obj0 = 0 ;
  char *  kwnames[] = {
    (char *) "vlen", NULL 
  };
  gr_max_ss_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:max_ss",kwnames,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_size_t(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "max_ss" "', argument " "1"" of type '" "size_t""'");
  } 
  arg1 = static_cast< size_t >(val1);
  {
    try {
      result = gr_make_max_ss(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_max_ss_sptr(static_cast< const gr_max_ss_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_max_ss_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_peak_detector_fb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_peak_detector_fb > *)new boost::shared_ptr< gr_peak_detector_fb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_peak_detector_fb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_peak_detector_fb *arg1 = (gr_peak_detector_fb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_peak_detector_fb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_peak_detector_fb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_peak_detector_fb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_peak_detector_fb_sptr" "', argument " "1"" of type '" "gr_peak_detector_fb *""'"); 
  }
  arg1 = reinterpret_cast< gr_peak_detector_fb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_peak_detector_fb > *)new boost::shared_ptr< gr_peak_detector_fb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_peak_detector_fb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_peak_detector_fb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_peak_detector_fb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_peak_detector_fb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_peak_detector_fb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_peak_detector_fb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_peak_detector_fb >::shared_ptr(gr_peak_detector_fb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_peak_detector_fb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (gr_peak_detector_fb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_peak_detector_fb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_peak_detector_fb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_peak_detector_fb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_peak_detector_fb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_set_threshold_factor_rise(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "thr", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_fb_sptr_set_threshold_factor_rise",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_set_threshold_factor_rise" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_fb_sptr_set_threshold_factor_rise" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_threshold_factor_rise(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_set_threshold_factor_fall(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "thr", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_fb_sptr_set_threshold_factor_fall",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_set_threshold_factor_fall" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_fb_sptr_set_threshold_factor_fall" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_threshold_factor_fall(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_set_look_ahead(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "look", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_fb_sptr_set_look_ahead",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_set_look_ahead" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_fb_sptr_set_look_ahead" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_look_ahead(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_set_alpha(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "alpha", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_fb_sptr_set_alpha",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_set_alpha" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_fb_sptr_set_alpha" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_alpha(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_threshold_factor_rise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_threshold_factor_rise",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_threshold_factor_rise" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (float)(*arg1)->threshold_factor_rise();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_threshold_factor_fall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_threshold_factor_fall",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_threshold_factor_fall" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (float)(*arg1)->threshold_factor_fall();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_look_ahead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_look_ahead",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_look_ahead" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->look_ahead();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_alpha(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_alpha",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_alpha" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (float)(*arg1)->alpha();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_fb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_fb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_fb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_fb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_fb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_peak_detector_fb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_peak_detector_fb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_fb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_fb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_fb > *arg1 = (boost::shared_ptr< gr_peak_detector_fb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_peak_detector_fb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_fb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_fb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_fb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_fb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_peak_detector_fb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_peak_detector_fb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_peak_detector_fb(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  float arg1 = (float) 0.25 ;
  float arg2 = (float) 0.40 ;
  int arg3 = (int) 10 ;
  float arg4 = (float) 0.001 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "threshold_factor_rise",(char *) "threshold_factor_fall",(char *) "look_ahead",(char *) "alpha", NULL 
  };
  gr_peak_detector_fb_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOO:peak_detector_fb",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_float(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "peak_detector_fb" "', argument " "1"" of type '" "float""'");
    } 
    arg1 = static_cast< float >(val1);
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_float(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "peak_detector_fb" "', argument " "2"" of type '" "float""'");
    } 
    arg2 = static_cast< float >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "peak_detector_fb" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_float(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "peak_detector_fb" "', argument " "4"" of type '" "float""'");
    } 
    arg4 = static_cast< float >(val4);
  }
  {
    try {
      result = gr_make_peak_detector_fb(arg1,arg2,arg3,arg4);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_peak_detector_fb_sptr(static_cast< const gr_peak_detector_fb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_fb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_peak_detector_ib_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_peak_detector_ib > *)new boost::shared_ptr< gr_peak_detector_ib >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_peak_detector_ib_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_peak_detector_ib *arg1 = (gr_peak_detector_ib *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_peak_detector_ib > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_peak_detector_ib_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_peak_detector_ib, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_peak_detector_ib_sptr" "', argument " "1"" of type '" "gr_peak_detector_ib *""'"); 
  }
  arg1 = reinterpret_cast< gr_peak_detector_ib * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_peak_detector_ib > *)new boost::shared_ptr< gr_peak_detector_ib >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_peak_detector_ib_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_peak_detector_ib_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_peak_detector_ib, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_peak_detector_ib_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_peak_detector_ib_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_peak_detector_ib >::shared_ptr()\n"
    "    boost::shared_ptr< gr_peak_detector_ib >::shared_ptr(gr_peak_detector_ib *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_peak_detector_ib *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (gr_peak_detector_ib *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_peak_detector_ib, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_peak_detector_ib_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_peak_detector_ib_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_peak_detector_ib_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_set_threshold_factor_rise(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "thr", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_ib_sptr_set_threshold_factor_rise",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_set_threshold_factor_rise" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_ib_sptr_set_threshold_factor_rise" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_threshold_factor_rise(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_set_threshold_factor_fall(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "thr", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_ib_sptr_set_threshold_factor_fall",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_set_threshold_factor_fall" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_ib_sptr_set_threshold_factor_fall" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_threshold_factor_fall(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_set_look_ahead(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "look", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_ib_sptr_set_look_ahead",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_set_look_ahead" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_ib_sptr_set_look_ahead" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_look_ahead(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_set_alpha(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "alpha", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_ib_sptr_set_alpha",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_set_alpha" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_ib_sptr_set_alpha" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_alpha(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_threshold_factor_rise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_threshold_factor_rise",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_threshold_factor_rise" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (float)(*arg1)->threshold_factor_rise();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_threshold_factor_fall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_threshold_factor_fall",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_threshold_factor_fall" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (float)(*arg1)->threshold_factor_fall();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_look_ahead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_look_ahead",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_look_ahead" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (int)(*arg1)->look_ahead();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_alpha(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_alpha",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_alpha" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (float)(*arg1)->alpha();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_ib_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_ib_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_ib_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_ib_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_ib_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_peak_detector_ib_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_peak_detector_ib_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_ib_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_ib_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_ib > *arg1 = (boost::shared_ptr< gr_peak_detector_ib > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_peak_detector_ib_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_ib_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_ib > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_ib > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_ib_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_peak_detector_ib_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_peak_detector_ib_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_peak_detector_ib(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  float arg1 = (float) 0.25 ;
  float arg2 = (float) 0.40 ;
  int arg3 = (int) 10 ;
  float arg4 = (float) 0.001 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "threshold_factor_rise",(char *) "threshold_factor_fall",(char *) "look_ahead",(char *) "alpha", NULL 
  };
  gr_peak_detector_ib_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOO:peak_detector_ib",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_float(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "peak_detector_ib" "', argument " "1"" of type '" "float""'");
    } 
    arg1 = static_cast< float >(val1);
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_float(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "peak_detector_ib" "', argument " "2"" of type '" "float""'");
    } 
    arg2 = static_cast< float >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "peak_detector_ib" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_float(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "peak_detector_ib" "', argument " "4"" of type '" "float""'");
    } 
    arg4 = static_cast< float >(val4);
  }
  {
    try {
      result = gr_make_peak_detector_ib(arg1,arg2,arg3,arg4);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_peak_detector_ib_sptr(static_cast< const gr_peak_detector_ib_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_ib_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_peak_detector_sb_sptr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *result = 0 ;
  
  {
    try {
      result = (boost::shared_ptr< gr_peak_detector_sb > *)new boost::shared_ptr< gr_peak_detector_sb >();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_peak_detector_sb_sptr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  gr_peak_detector_sb *arg1 = (gr_peak_detector_sb *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  boost::shared_ptr< gr_peak_detector_sb > *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"new_gr_peak_detector_sb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_gr_peak_detector_sb, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_gr_peak_detector_sb_sptr" "', argument " "1"" of type '" "gr_peak_detector_sb *""'"); 
  }
  arg1 = reinterpret_cast< gr_peak_detector_sb * >(argp1);
  {
    try {
      result = (boost::shared_ptr< gr_peak_detector_sb > *)new boost::shared_ptr< gr_peak_detector_sb >(arg1);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_gr_peak_detector_sb_sptr(PyObject *self, PyObject *args) {
  int argc;
  PyObject *argv[2];
  int ii;
  
  if (!PyTuple_Check(args)) SWIG_fail;
  argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) {
    argv[ii] = PyTuple_GET_ITEM(args,ii);
  }
  if (argc == 0) {
    return _wrap_new_gr_peak_detector_sb_sptr__SWIG_0(self, args);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_gr_peak_detector_sb, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_gr_peak_detector_sb_sptr__SWIG_1(self, args);
    }
  }
  
fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_gr_peak_detector_sb_sptr'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    boost::shared_ptr< gr_peak_detector_sb >::shared_ptr()\n"
    "    boost::shared_ptr< gr_peak_detector_sb >::shared_ptr(gr_peak_detector_sb *)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr___deref__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_peak_detector_sb *result = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr___deref__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr___deref__" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (gr_peak_detector_sb *)(arg1)->operator ->();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_gr_peak_detector_sb, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_gr_peak_detector_sb_sptr(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  
  if(!PyArg_UnpackTuple(args,(char *)"delete_gr_peak_detector_sb_sptr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_gr_peak_detector_sb_sptr" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      delete arg1;
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_set_threshold_factor_rise(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "thr", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_sb_sptr_set_threshold_factor_rise",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_set_threshold_factor_rise" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_sb_sptr_set_threshold_factor_rise" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_threshold_factor_rise(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_set_threshold_factor_fall(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "thr", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_sb_sptr_set_threshold_factor_fall",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_set_threshold_factor_fall" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_sb_sptr_set_threshold_factor_fall" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  {
    try {
      (*arg1)->set_threshold_factor_fall(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_set_look_ahead(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "look", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_sb_sptr_set_look_ahead",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_set_look_ahead" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_sb_sptr_set_look_ahead" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_look_ahead(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_set_alpha(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "alpha", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_sb_sptr_set_alpha",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_set_alpha" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_sb_sptr_set_alpha" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    try {
      (*arg1)->set_alpha(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_threshold_factor_rise(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_threshold_factor_rise",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_threshold_factor_rise" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (float)(*arg1)->threshold_factor_rise();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_threshold_factor_fall(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_threshold_factor_fall",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_threshold_factor_fall" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (float)(*arg1)->threshold_factor_fall();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_look_ahead(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_look_ahead",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_look_ahead" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->look_ahead();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_alpha(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  float result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_alpha",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_alpha" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (float)(*arg1)->alpha();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_history(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  unsigned int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_history",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_history" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (unsigned int)(*arg1)->history();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_output_multiple(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  int result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_output_multiple",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_output_multiple" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (int)(*arg1)->output_multiple();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_relative_rate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  double result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_relative_rate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_relative_rate" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (double)(*arg1)->relative_rate();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_start" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->start();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  bool result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_stop" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (bool)(*arg1)->stop();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_nitems_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_input", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_sb_sptr_nitems_read",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_nitems_read" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_sb_sptr_nitems_read" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_read(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_nitems_written(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "which_output", NULL 
  };
  uint64_t result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_sb_sptr_nitems_written",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_nitems_written" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_sb_sptr_nitems_written" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  {
    try {
      result = (uint64_t)(*arg1)->nitems_written(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_block_detail_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_detail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (*arg1)->detail();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_block_detail_sptr(static_cast< const gr_block_detail_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_set_detail(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  gr_block_detail_sptr arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "detail", NULL 
  };
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OO:gr_peak_detector_sb_sptr_set_detail",kwnames,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_set_detail" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_boost__shared_ptrT_gr_block_detail_t,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "gr_peak_detector_sb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "gr_peak_detector_sb_sptr_set_detail" "', argument " "2"" of type '" "gr_block_detail_sptr""'");
    } else {
      gr_block_detail_sptr * temp = reinterpret_cast< gr_block_detail_sptr * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  {
    try {
      (*arg1)->set_detail(arg2);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_name(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  std::string result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_name",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_name" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (*arg1)->name();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_std_string(static_cast< std::string >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_input_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_input_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_input_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (*arg1)->input_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_output_signature(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_io_signature_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_output_signature",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_output_signature" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (*arg1)->output_signature();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_io_signature_sptr(static_cast< const gr_io_signature_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_io_signature_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_unique_id(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  long result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_unique_id",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_unique_id" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > const *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (long)(*arg1)->unique_id();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_long(static_cast< long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_to_basic_block(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject * obj0 = 0 ;
  gr_basic_block_sptr result;
  
  if(!PyArg_UnpackTuple(args,(char *)"gr_peak_detector_sb_sptr_to_basic_block",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_to_basic_block" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  {
    try {
      result = (*arg1)->to_basic_block();
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_basic_block_sptr(static_cast< const gr_basic_block_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_basic_block_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_gr_peak_detector_sb_sptr_check_topology(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  boost::shared_ptr< gr_peak_detector_sb > *arg1 = (boost::shared_ptr< gr_peak_detector_sb > *) 0 ;
  int arg2 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  char *  kwnames[] = {
    (char *) "self",(char *) "ninputs",(char *) "noutputs", NULL 
  };
  bool result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"OOO:gr_peak_detector_sb_sptr_check_topology",kwnames,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "gr_peak_detector_sb_sptr_check_topology" "', argument " "1"" of type '" "boost::shared_ptr< gr_peak_detector_sb > *""'"); 
  }
  arg1 = reinterpret_cast< boost::shared_ptr< gr_peak_detector_sb > * >(argp1);
  ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "gr_peak_detector_sb_sptr_check_topology" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "gr_peak_detector_sb_sptr_check_topology" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  {
    try {
      result = (bool)(*arg1)->check_topology(arg2,arg3);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *gr_peak_detector_sb_sptr_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_peak_detector_sb(PyObject *SWIGUNUSEDPARM(self), PyObject *args, PyObject *kwargs) {
  PyObject *resultobj = 0;
  float arg1 = (float) 0.25 ;
  float arg2 = (float) 0.40 ;
  int arg3 = (int) 10 ;
  float arg4 = (float) 0.001 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ;
  char *  kwnames[] = {
    (char *) "threshold_factor_rise",(char *) "threshold_factor_fall",(char *) "look_ahead",(char *) "alpha", NULL 
  };
  gr_peak_detector_sb_sptr result;
  
  if (!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"|OOOO:peak_detector_sb",kwnames,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  if (obj0) {
    ecode1 = SWIG_AsVal_float(obj0, &val1);
    if (!SWIG_IsOK(ecode1)) {
      SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "peak_detector_sb" "', argument " "1"" of type '" "float""'");
    } 
    arg1 = static_cast< float >(val1);
  }
  if (obj1) {
    ecode2 = SWIG_AsVal_float(obj1, &val2);
    if (!SWIG_IsOK(ecode2)) {
      SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "peak_detector_sb" "', argument " "2"" of type '" "float""'");
    } 
    arg2 = static_cast< float >(val2);
  }
  if (obj2) {
    ecode3 = SWIG_AsVal_int(obj2, &val3);
    if (!SWIG_IsOK(ecode3)) {
      SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "peak_detector_sb" "', argument " "3"" of type '" "int""'");
    } 
    arg3 = static_cast< int >(val3);
  }
  if (obj3) {
    ecode4 = SWIG_AsVal_float(obj3, &val4);
    if (!SWIG_IsOK(ecode4)) {
      SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "peak_detector_sb" "', argument " "4"" of type '" "float""'");
    } 
    arg4 = static_cast< float >(val4);
  }
  {
    try {
      result = gr_make_peak_detector_sb(arg1,arg2,arg3,arg4);
    }
    catch(std::exception &e) {
      SWIG_exception(SWIG_RuntimeError, e.what());
    }
    catch(...) {
      SWIG_exception(SWIG_RuntimeError, "Unknown exception");
    }
    
  }
  resultobj = SWIG_NewPointerObj((new gr_peak_detector_sb_sptr(static_cast< const gr_peak_detector_sb_sptr& >(result))), SWIGTYPE_p_boost__shared_ptrT_gr_peak_detector_sb_t, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, (char *)"delete_SwigPyIterator(SwigPyIterator self)"},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, (char *)"SwigPyIterator_value(SwigPyIterator self) -> PyObject"},
	 { (char *)"SwigPyIterator_incr", (PyCFunction) _wrap_SwigPyIterator_incr, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_incr(SwigPyIterator self, size_t n = 1) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator_decr", (PyCFunction) _wrap_SwigPyIterator_decr, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_decr(SwigPyIterator self, size_t n = 1) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator_distance", (PyCFunction) _wrap_SwigPyIterator_distance, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_distance(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t"},
	 { (char *)"SwigPyIterator_equal", (PyCFunction) _wrap_SwigPyIterator_equal, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_equal(SwigPyIterator self, SwigPyIterator x) -> bool"},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, (char *)"SwigPyIterator_copy(SwigPyIterator self) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, (char *)"SwigPyIterator_next(SwigPyIterator self) -> PyObject"},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, (char *)"SwigPyIterator___next__(SwigPyIterator self) -> PyObject"},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, (char *)"SwigPyIterator_previous(SwigPyIterator self) -> PyObject"},
	 { (char *)"SwigPyIterator_advance", (PyCFunction) _wrap_SwigPyIterator_advance, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator_advance(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator___eq__", (PyCFunction) _wrap_SwigPyIterator___eq__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___eq__(SwigPyIterator self, SwigPyIterator x) -> bool"},
	 { (char *)"SwigPyIterator___ne__", (PyCFunction) _wrap_SwigPyIterator___ne__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___ne__(SwigPyIterator self, SwigPyIterator x) -> bool"},
	 { (char *)"SwigPyIterator___iadd__", (PyCFunction) _wrap_SwigPyIterator___iadd__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___iadd__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator___isub__", (PyCFunction) _wrap_SwigPyIterator___isub__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___isub__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator___add__", (PyCFunction) _wrap_SwigPyIterator___add__, METH_VARARGS | METH_KEYWORDS, (char *)"SwigPyIterator___add__(SwigPyIterator self, ptrdiff_t n) -> SwigPyIterator"},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, (char *)"\n"
		"__sub__(ptrdiff_t n) -> SwigPyIterator\n"
		"SwigPyIterator___sub__(SwigPyIterator self, SwigPyIterator x) -> ptrdiff_t\n"
		""},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_gr_vector_source_b_sptr", _wrap_new_gr_vector_source_b_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_source_b_sptr()\n"
		"new_gr_vector_source_b_sptr( p) -> gr_vector_source_b_sptr\n"
		""},
	 { (char *)"gr_vector_source_b_sptr___deref__", _wrap_gr_vector_source_b_sptr___deref__, METH_VARARGS, (char *)"gr_vector_source_b_sptr___deref__(gr_vector_source_b_sptr self)"},
	 { (char *)"delete_gr_vector_source_b_sptr", _wrap_delete_gr_vector_source_b_sptr, METH_VARARGS, (char *)"delete_gr_vector_source_b_sptr(gr_vector_source_b_sptr self)"},
	 { (char *)"gr_vector_source_b_sptr_rewind", _wrap_gr_vector_source_b_sptr_rewind, METH_VARARGS, (char *)"gr_vector_source_b_sptr_rewind(gr_vector_source_b_sptr self)"},
	 { (char *)"gr_vector_source_b_sptr_set_data", (PyCFunction) _wrap_gr_vector_source_b_sptr_set_data, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_b_sptr_set_data(gr_vector_source_b_sptr self, __dummy_0__ data)"},
	 { (char *)"gr_vector_source_b_sptr_history", _wrap_gr_vector_source_b_sptr_history, METH_VARARGS, (char *)"gr_vector_source_b_sptr_history(gr_vector_source_b_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_source_b_sptr_output_multiple", _wrap_gr_vector_source_b_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_source_b_sptr_output_multiple(gr_vector_source_b_sptr self) -> int"},
	 { (char *)"gr_vector_source_b_sptr_relative_rate", _wrap_gr_vector_source_b_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_source_b_sptr_relative_rate(gr_vector_source_b_sptr self) -> double"},
	 { (char *)"gr_vector_source_b_sptr_start", _wrap_gr_vector_source_b_sptr_start, METH_VARARGS, (char *)"gr_vector_source_b_sptr_start(gr_vector_source_b_sptr self) -> bool"},
	 { (char *)"gr_vector_source_b_sptr_stop", _wrap_gr_vector_source_b_sptr_stop, METH_VARARGS, (char *)"gr_vector_source_b_sptr_stop(gr_vector_source_b_sptr self) -> bool"},
	 { (char *)"gr_vector_source_b_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_source_b_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_b_sptr_nitems_read(gr_vector_source_b_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_source_b_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_source_b_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_b_sptr_nitems_written(gr_vector_source_b_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_source_b_sptr_detail", _wrap_gr_vector_source_b_sptr_detail, METH_VARARGS, (char *)"gr_vector_source_b_sptr_detail(gr_vector_source_b_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_source_b_sptr_set_detail", (PyCFunction) _wrap_gr_vector_source_b_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_b_sptr_set_detail(gr_vector_source_b_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_source_b_sptr_name", _wrap_gr_vector_source_b_sptr_name, METH_VARARGS, (char *)"gr_vector_source_b_sptr_name(gr_vector_source_b_sptr self) -> string"},
	 { (char *)"gr_vector_source_b_sptr_input_signature", _wrap_gr_vector_source_b_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_source_b_sptr_input_signature(gr_vector_source_b_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_b_sptr_output_signature", _wrap_gr_vector_source_b_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_source_b_sptr_output_signature(gr_vector_source_b_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_b_sptr_unique_id", _wrap_gr_vector_source_b_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_source_b_sptr_unique_id(gr_vector_source_b_sptr self) -> long"},
	 { (char *)"gr_vector_source_b_sptr_to_basic_block", _wrap_gr_vector_source_b_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_source_b_sptr_to_basic_block(gr_vector_source_b_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_source_b_sptr_check_topology", (PyCFunction) _wrap_gr_vector_source_b_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_b_sptr_check_topology(gr_vector_source_b_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_source_b_sptr_swigregister", gr_vector_source_b_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_source_b", (PyCFunction) _wrap_vector_source_b, METH_VARARGS | METH_KEYWORDS, (char *)"vector_source_b(__dummy_0__ data, bool repeat = False, int vlen = 1) -> gr_vector_source_b_sptr"},
	 { (char *)"new_gr_vector_source_s_sptr", _wrap_new_gr_vector_source_s_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_source_s_sptr()\n"
		"new_gr_vector_source_s_sptr( p) -> gr_vector_source_s_sptr\n"
		""},
	 { (char *)"gr_vector_source_s_sptr___deref__", _wrap_gr_vector_source_s_sptr___deref__, METH_VARARGS, (char *)"gr_vector_source_s_sptr___deref__(gr_vector_source_s_sptr self)"},
	 { (char *)"delete_gr_vector_source_s_sptr", _wrap_delete_gr_vector_source_s_sptr, METH_VARARGS, (char *)"delete_gr_vector_source_s_sptr(gr_vector_source_s_sptr self)"},
	 { (char *)"gr_vector_source_s_sptr_rewind", _wrap_gr_vector_source_s_sptr_rewind, METH_VARARGS, (char *)"gr_vector_source_s_sptr_rewind(gr_vector_source_s_sptr self)"},
	 { (char *)"gr_vector_source_s_sptr_set_data", (PyCFunction) _wrap_gr_vector_source_s_sptr_set_data, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_s_sptr_set_data(gr_vector_source_s_sptr self, __dummy_2__ data)"},
	 { (char *)"gr_vector_source_s_sptr_history", _wrap_gr_vector_source_s_sptr_history, METH_VARARGS, (char *)"gr_vector_source_s_sptr_history(gr_vector_source_s_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_source_s_sptr_output_multiple", _wrap_gr_vector_source_s_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_source_s_sptr_output_multiple(gr_vector_source_s_sptr self) -> int"},
	 { (char *)"gr_vector_source_s_sptr_relative_rate", _wrap_gr_vector_source_s_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_source_s_sptr_relative_rate(gr_vector_source_s_sptr self) -> double"},
	 { (char *)"gr_vector_source_s_sptr_start", _wrap_gr_vector_source_s_sptr_start, METH_VARARGS, (char *)"gr_vector_source_s_sptr_start(gr_vector_source_s_sptr self) -> bool"},
	 { (char *)"gr_vector_source_s_sptr_stop", _wrap_gr_vector_source_s_sptr_stop, METH_VARARGS, (char *)"gr_vector_source_s_sptr_stop(gr_vector_source_s_sptr self) -> bool"},
	 { (char *)"gr_vector_source_s_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_source_s_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_s_sptr_nitems_read(gr_vector_source_s_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_source_s_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_source_s_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_s_sptr_nitems_written(gr_vector_source_s_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_source_s_sptr_detail", _wrap_gr_vector_source_s_sptr_detail, METH_VARARGS, (char *)"gr_vector_source_s_sptr_detail(gr_vector_source_s_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_source_s_sptr_set_detail", (PyCFunction) _wrap_gr_vector_source_s_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_s_sptr_set_detail(gr_vector_source_s_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_source_s_sptr_name", _wrap_gr_vector_source_s_sptr_name, METH_VARARGS, (char *)"gr_vector_source_s_sptr_name(gr_vector_source_s_sptr self) -> string"},
	 { (char *)"gr_vector_source_s_sptr_input_signature", _wrap_gr_vector_source_s_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_source_s_sptr_input_signature(gr_vector_source_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_s_sptr_output_signature", _wrap_gr_vector_source_s_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_source_s_sptr_output_signature(gr_vector_source_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_s_sptr_unique_id", _wrap_gr_vector_source_s_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_source_s_sptr_unique_id(gr_vector_source_s_sptr self) -> long"},
	 { (char *)"gr_vector_source_s_sptr_to_basic_block", _wrap_gr_vector_source_s_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_source_s_sptr_to_basic_block(gr_vector_source_s_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_source_s_sptr_check_topology", (PyCFunction) _wrap_gr_vector_source_s_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_s_sptr_check_topology(gr_vector_source_s_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_source_s_sptr_swigregister", gr_vector_source_s_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_source_s", (PyCFunction) _wrap_vector_source_s, METH_VARARGS | METH_KEYWORDS, (char *)"vector_source_s(__dummy_2__ data, bool repeat = False, int vlen = 1) -> gr_vector_source_s_sptr"},
	 { (char *)"new_gr_vector_source_i_sptr", _wrap_new_gr_vector_source_i_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_source_i_sptr()\n"
		"new_gr_vector_source_i_sptr( p) -> gr_vector_source_i_sptr\n"
		""},
	 { (char *)"gr_vector_source_i_sptr___deref__", _wrap_gr_vector_source_i_sptr___deref__, METH_VARARGS, (char *)"gr_vector_source_i_sptr___deref__(gr_vector_source_i_sptr self)"},
	 { (char *)"delete_gr_vector_source_i_sptr", _wrap_delete_gr_vector_source_i_sptr, METH_VARARGS, (char *)"delete_gr_vector_source_i_sptr(gr_vector_source_i_sptr self)"},
	 { (char *)"gr_vector_source_i_sptr_rewind", _wrap_gr_vector_source_i_sptr_rewind, METH_VARARGS, (char *)"gr_vector_source_i_sptr_rewind(gr_vector_source_i_sptr self)"},
	 { (char *)"gr_vector_source_i_sptr_set_data", (PyCFunction) _wrap_gr_vector_source_i_sptr_set_data, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_i_sptr_set_data(gr_vector_source_i_sptr self, __dummy_3__ data)"},
	 { (char *)"gr_vector_source_i_sptr_history", _wrap_gr_vector_source_i_sptr_history, METH_VARARGS, (char *)"gr_vector_source_i_sptr_history(gr_vector_source_i_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_source_i_sptr_output_multiple", _wrap_gr_vector_source_i_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_source_i_sptr_output_multiple(gr_vector_source_i_sptr self) -> int"},
	 { (char *)"gr_vector_source_i_sptr_relative_rate", _wrap_gr_vector_source_i_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_source_i_sptr_relative_rate(gr_vector_source_i_sptr self) -> double"},
	 { (char *)"gr_vector_source_i_sptr_start", _wrap_gr_vector_source_i_sptr_start, METH_VARARGS, (char *)"gr_vector_source_i_sptr_start(gr_vector_source_i_sptr self) -> bool"},
	 { (char *)"gr_vector_source_i_sptr_stop", _wrap_gr_vector_source_i_sptr_stop, METH_VARARGS, (char *)"gr_vector_source_i_sptr_stop(gr_vector_source_i_sptr self) -> bool"},
	 { (char *)"gr_vector_source_i_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_source_i_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_i_sptr_nitems_read(gr_vector_source_i_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_source_i_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_source_i_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_i_sptr_nitems_written(gr_vector_source_i_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_source_i_sptr_detail", _wrap_gr_vector_source_i_sptr_detail, METH_VARARGS, (char *)"gr_vector_source_i_sptr_detail(gr_vector_source_i_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_source_i_sptr_set_detail", (PyCFunction) _wrap_gr_vector_source_i_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_i_sptr_set_detail(gr_vector_source_i_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_source_i_sptr_name", _wrap_gr_vector_source_i_sptr_name, METH_VARARGS, (char *)"gr_vector_source_i_sptr_name(gr_vector_source_i_sptr self) -> string"},
	 { (char *)"gr_vector_source_i_sptr_input_signature", _wrap_gr_vector_source_i_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_source_i_sptr_input_signature(gr_vector_source_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_i_sptr_output_signature", _wrap_gr_vector_source_i_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_source_i_sptr_output_signature(gr_vector_source_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_i_sptr_unique_id", _wrap_gr_vector_source_i_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_source_i_sptr_unique_id(gr_vector_source_i_sptr self) -> long"},
	 { (char *)"gr_vector_source_i_sptr_to_basic_block", _wrap_gr_vector_source_i_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_source_i_sptr_to_basic_block(gr_vector_source_i_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_source_i_sptr_check_topology", (PyCFunction) _wrap_gr_vector_source_i_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_i_sptr_check_topology(gr_vector_source_i_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_source_i_sptr_swigregister", gr_vector_source_i_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_source_i", (PyCFunction) _wrap_vector_source_i, METH_VARARGS | METH_KEYWORDS, (char *)"vector_source_i(__dummy_3__ data, bool repeat = False, int vlen = 1) -> gr_vector_source_i_sptr"},
	 { (char *)"new_gr_vector_source_f_sptr", _wrap_new_gr_vector_source_f_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_source_f_sptr()\n"
		"new_gr_vector_source_f_sptr( p) -> gr_vector_source_f_sptr\n"
		""},
	 { (char *)"gr_vector_source_f_sptr___deref__", _wrap_gr_vector_source_f_sptr___deref__, METH_VARARGS, (char *)"gr_vector_source_f_sptr___deref__(gr_vector_source_f_sptr self)"},
	 { (char *)"delete_gr_vector_source_f_sptr", _wrap_delete_gr_vector_source_f_sptr, METH_VARARGS, (char *)"delete_gr_vector_source_f_sptr(gr_vector_source_f_sptr self)"},
	 { (char *)"gr_vector_source_f_sptr_rewind", _wrap_gr_vector_source_f_sptr_rewind, METH_VARARGS, (char *)"gr_vector_source_f_sptr_rewind(gr_vector_source_f_sptr self)"},
	 { (char *)"gr_vector_source_f_sptr_set_data", (PyCFunction) _wrap_gr_vector_source_f_sptr_set_data, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_f_sptr_set_data(gr_vector_source_f_sptr self, __dummy_4__ data)"},
	 { (char *)"gr_vector_source_f_sptr_history", _wrap_gr_vector_source_f_sptr_history, METH_VARARGS, (char *)"gr_vector_source_f_sptr_history(gr_vector_source_f_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_source_f_sptr_output_multiple", _wrap_gr_vector_source_f_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_source_f_sptr_output_multiple(gr_vector_source_f_sptr self) -> int"},
	 { (char *)"gr_vector_source_f_sptr_relative_rate", _wrap_gr_vector_source_f_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_source_f_sptr_relative_rate(gr_vector_source_f_sptr self) -> double"},
	 { (char *)"gr_vector_source_f_sptr_start", _wrap_gr_vector_source_f_sptr_start, METH_VARARGS, (char *)"gr_vector_source_f_sptr_start(gr_vector_source_f_sptr self) -> bool"},
	 { (char *)"gr_vector_source_f_sptr_stop", _wrap_gr_vector_source_f_sptr_stop, METH_VARARGS, (char *)"gr_vector_source_f_sptr_stop(gr_vector_source_f_sptr self) -> bool"},
	 { (char *)"gr_vector_source_f_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_source_f_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_f_sptr_nitems_read(gr_vector_source_f_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_source_f_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_source_f_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_f_sptr_nitems_written(gr_vector_source_f_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_source_f_sptr_detail", _wrap_gr_vector_source_f_sptr_detail, METH_VARARGS, (char *)"gr_vector_source_f_sptr_detail(gr_vector_source_f_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_source_f_sptr_set_detail", (PyCFunction) _wrap_gr_vector_source_f_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_f_sptr_set_detail(gr_vector_source_f_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_source_f_sptr_name", _wrap_gr_vector_source_f_sptr_name, METH_VARARGS, (char *)"gr_vector_source_f_sptr_name(gr_vector_source_f_sptr self) -> string"},
	 { (char *)"gr_vector_source_f_sptr_input_signature", _wrap_gr_vector_source_f_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_source_f_sptr_input_signature(gr_vector_source_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_f_sptr_output_signature", _wrap_gr_vector_source_f_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_source_f_sptr_output_signature(gr_vector_source_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_f_sptr_unique_id", _wrap_gr_vector_source_f_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_source_f_sptr_unique_id(gr_vector_source_f_sptr self) -> long"},
	 { (char *)"gr_vector_source_f_sptr_to_basic_block", _wrap_gr_vector_source_f_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_source_f_sptr_to_basic_block(gr_vector_source_f_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_source_f_sptr_check_topology", (PyCFunction) _wrap_gr_vector_source_f_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_f_sptr_check_topology(gr_vector_source_f_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_source_f_sptr_swigregister", gr_vector_source_f_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_source_f", (PyCFunction) _wrap_vector_source_f, METH_VARARGS | METH_KEYWORDS, (char *)"vector_source_f(__dummy_4__ data, bool repeat = False, int vlen = 1) -> gr_vector_source_f_sptr"},
	 { (char *)"new_gr_vector_source_c_sptr", _wrap_new_gr_vector_source_c_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_source_c_sptr()\n"
		"new_gr_vector_source_c_sptr( p) -> gr_vector_source_c_sptr\n"
		""},
	 { (char *)"gr_vector_source_c_sptr___deref__", _wrap_gr_vector_source_c_sptr___deref__, METH_VARARGS, (char *)"gr_vector_source_c_sptr___deref__(gr_vector_source_c_sptr self)"},
	 { (char *)"delete_gr_vector_source_c_sptr", _wrap_delete_gr_vector_source_c_sptr, METH_VARARGS, (char *)"delete_gr_vector_source_c_sptr(gr_vector_source_c_sptr self)"},
	 { (char *)"gr_vector_source_c_sptr_rewind", _wrap_gr_vector_source_c_sptr_rewind, METH_VARARGS, (char *)"gr_vector_source_c_sptr_rewind(gr_vector_source_c_sptr self)"},
	 { (char *)"gr_vector_source_c_sptr_set_data", (PyCFunction) _wrap_gr_vector_source_c_sptr_set_data, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_c_sptr_set_data(gr_vector_source_c_sptr self, std::vector<(gr_complex,std::allocator<(gr_complex)>)> data)"},
	 { (char *)"gr_vector_source_c_sptr_history", _wrap_gr_vector_source_c_sptr_history, METH_VARARGS, (char *)"gr_vector_source_c_sptr_history(gr_vector_source_c_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_source_c_sptr_output_multiple", _wrap_gr_vector_source_c_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_source_c_sptr_output_multiple(gr_vector_source_c_sptr self) -> int"},
	 { (char *)"gr_vector_source_c_sptr_relative_rate", _wrap_gr_vector_source_c_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_source_c_sptr_relative_rate(gr_vector_source_c_sptr self) -> double"},
	 { (char *)"gr_vector_source_c_sptr_start", _wrap_gr_vector_source_c_sptr_start, METH_VARARGS, (char *)"gr_vector_source_c_sptr_start(gr_vector_source_c_sptr self) -> bool"},
	 { (char *)"gr_vector_source_c_sptr_stop", _wrap_gr_vector_source_c_sptr_stop, METH_VARARGS, (char *)"gr_vector_source_c_sptr_stop(gr_vector_source_c_sptr self) -> bool"},
	 { (char *)"gr_vector_source_c_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_source_c_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_c_sptr_nitems_read(gr_vector_source_c_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_source_c_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_source_c_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_c_sptr_nitems_written(gr_vector_source_c_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_source_c_sptr_detail", _wrap_gr_vector_source_c_sptr_detail, METH_VARARGS, (char *)"gr_vector_source_c_sptr_detail(gr_vector_source_c_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_source_c_sptr_set_detail", (PyCFunction) _wrap_gr_vector_source_c_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_c_sptr_set_detail(gr_vector_source_c_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_source_c_sptr_name", _wrap_gr_vector_source_c_sptr_name, METH_VARARGS, (char *)"gr_vector_source_c_sptr_name(gr_vector_source_c_sptr self) -> string"},
	 { (char *)"gr_vector_source_c_sptr_input_signature", _wrap_gr_vector_source_c_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_source_c_sptr_input_signature(gr_vector_source_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_c_sptr_output_signature", _wrap_gr_vector_source_c_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_source_c_sptr_output_signature(gr_vector_source_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_source_c_sptr_unique_id", _wrap_gr_vector_source_c_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_source_c_sptr_unique_id(gr_vector_source_c_sptr self) -> long"},
	 { (char *)"gr_vector_source_c_sptr_to_basic_block", _wrap_gr_vector_source_c_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_source_c_sptr_to_basic_block(gr_vector_source_c_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_source_c_sptr_check_topology", (PyCFunction) _wrap_gr_vector_source_c_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_source_c_sptr_check_topology(gr_vector_source_c_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_source_c_sptr_swigregister", gr_vector_source_c_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_source_c", (PyCFunction) _wrap_vector_source_c, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"vector_source_c(std::vector<(gr_complex,std::allocator<(gr_complex)>)> data, \n"
		"    bool repeat = False, int vlen = 1) -> gr_vector_source_c_sptr\n"
		""},
	 { (char *)"new_gr_vector_insert_b_sptr", _wrap_new_gr_vector_insert_b_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_insert_b_sptr()\n"
		"new_gr_vector_insert_b_sptr( p) -> gr_vector_insert_b_sptr\n"
		""},
	 { (char *)"gr_vector_insert_b_sptr___deref__", _wrap_gr_vector_insert_b_sptr___deref__, METH_VARARGS, (char *)"gr_vector_insert_b_sptr___deref__(gr_vector_insert_b_sptr self)"},
	 { (char *)"delete_gr_vector_insert_b_sptr", _wrap_delete_gr_vector_insert_b_sptr, METH_VARARGS, (char *)"delete_gr_vector_insert_b_sptr(gr_vector_insert_b_sptr self)"},
	 { (char *)"gr_vector_insert_b_sptr_rewind", _wrap_gr_vector_insert_b_sptr_rewind, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_rewind(gr_vector_insert_b_sptr self)"},
	 { (char *)"gr_vector_insert_b_sptr_set_data", (PyCFunction) _wrap_gr_vector_insert_b_sptr_set_data, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_insert_b_sptr_set_data(gr_vector_insert_b_sptr self, __dummy_0__ data)"},
	 { (char *)"gr_vector_insert_b_sptr_history", _wrap_gr_vector_insert_b_sptr_history, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_history(gr_vector_insert_b_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_insert_b_sptr_output_multiple", _wrap_gr_vector_insert_b_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_output_multiple(gr_vector_insert_b_sptr self) -> int"},
	 { (char *)"gr_vector_insert_b_sptr_relative_rate", _wrap_gr_vector_insert_b_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_relative_rate(gr_vector_insert_b_sptr self) -> double"},
	 { (char *)"gr_vector_insert_b_sptr_start", _wrap_gr_vector_insert_b_sptr_start, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_start(gr_vector_insert_b_sptr self) -> bool"},
	 { (char *)"gr_vector_insert_b_sptr_stop", _wrap_gr_vector_insert_b_sptr_stop, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_stop(gr_vector_insert_b_sptr self) -> bool"},
	 { (char *)"gr_vector_insert_b_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_insert_b_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_insert_b_sptr_nitems_read(gr_vector_insert_b_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_insert_b_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_insert_b_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_insert_b_sptr_nitems_written(gr_vector_insert_b_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_insert_b_sptr_detail", _wrap_gr_vector_insert_b_sptr_detail, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_detail(gr_vector_insert_b_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_insert_b_sptr_set_detail", (PyCFunction) _wrap_gr_vector_insert_b_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_insert_b_sptr_set_detail(gr_vector_insert_b_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_insert_b_sptr_name", _wrap_gr_vector_insert_b_sptr_name, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_name(gr_vector_insert_b_sptr self) -> string"},
	 { (char *)"gr_vector_insert_b_sptr_input_signature", _wrap_gr_vector_insert_b_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_input_signature(gr_vector_insert_b_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_insert_b_sptr_output_signature", _wrap_gr_vector_insert_b_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_output_signature(gr_vector_insert_b_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_insert_b_sptr_unique_id", _wrap_gr_vector_insert_b_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_unique_id(gr_vector_insert_b_sptr self) -> long"},
	 { (char *)"gr_vector_insert_b_sptr_to_basic_block", _wrap_gr_vector_insert_b_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_insert_b_sptr_to_basic_block(gr_vector_insert_b_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_insert_b_sptr_check_topology", (PyCFunction) _wrap_gr_vector_insert_b_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_insert_b_sptr_check_topology(gr_vector_insert_b_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_insert_b_sptr_swigregister", gr_vector_insert_b_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_insert_b", (PyCFunction) _wrap_vector_insert_b, METH_VARARGS | METH_KEYWORDS, (char *)"vector_insert_b(__dummy_0__ data, int periodicity, int offset = 0) -> gr_vector_insert_b_sptr"},
	 { (char *)"new_gr_vector_sink_b_sptr", _wrap_new_gr_vector_sink_b_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_sink_b_sptr()\n"
		"new_gr_vector_sink_b_sptr( p) -> gr_vector_sink_b_sptr\n"
		""},
	 { (char *)"gr_vector_sink_b_sptr___deref__", _wrap_gr_vector_sink_b_sptr___deref__, METH_VARARGS, (char *)"gr_vector_sink_b_sptr___deref__(gr_vector_sink_b_sptr self)"},
	 { (char *)"delete_gr_vector_sink_b_sptr", _wrap_delete_gr_vector_sink_b_sptr, METH_VARARGS, (char *)"delete_gr_vector_sink_b_sptr(gr_vector_sink_b_sptr self)"},
	 { (char *)"gr_vector_sink_b_sptr_clear", _wrap_gr_vector_sink_b_sptr_clear, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_clear(gr_vector_sink_b_sptr self)"},
	 { (char *)"gr_vector_sink_b_sptr_reset", _wrap_gr_vector_sink_b_sptr_reset, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_reset(gr_vector_sink_b_sptr self)"},
	 { (char *)"gr_vector_sink_b_sptr_data", _wrap_gr_vector_sink_b_sptr_data, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_data(gr_vector_sink_b_sptr self) -> __dummy_0__"},
	 { (char *)"gr_vector_sink_b_sptr_history", _wrap_gr_vector_sink_b_sptr_history, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_history(gr_vector_sink_b_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_sink_b_sptr_output_multiple", _wrap_gr_vector_sink_b_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_output_multiple(gr_vector_sink_b_sptr self) -> int"},
	 { (char *)"gr_vector_sink_b_sptr_relative_rate", _wrap_gr_vector_sink_b_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_relative_rate(gr_vector_sink_b_sptr self) -> double"},
	 { (char *)"gr_vector_sink_b_sptr_start", _wrap_gr_vector_sink_b_sptr_start, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_start(gr_vector_sink_b_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_b_sptr_stop", _wrap_gr_vector_sink_b_sptr_stop, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_stop(gr_vector_sink_b_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_b_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_sink_b_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_b_sptr_nitems_read(gr_vector_sink_b_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_sink_b_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_sink_b_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_b_sptr_nitems_written(gr_vector_sink_b_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_sink_b_sptr_detail", _wrap_gr_vector_sink_b_sptr_detail, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_detail(gr_vector_sink_b_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_sink_b_sptr_set_detail", (PyCFunction) _wrap_gr_vector_sink_b_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_b_sptr_set_detail(gr_vector_sink_b_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_sink_b_sptr_name", _wrap_gr_vector_sink_b_sptr_name, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_name(gr_vector_sink_b_sptr self) -> string"},
	 { (char *)"gr_vector_sink_b_sptr_input_signature", _wrap_gr_vector_sink_b_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_input_signature(gr_vector_sink_b_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_b_sptr_output_signature", _wrap_gr_vector_sink_b_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_output_signature(gr_vector_sink_b_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_b_sptr_unique_id", _wrap_gr_vector_sink_b_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_unique_id(gr_vector_sink_b_sptr self) -> long"},
	 { (char *)"gr_vector_sink_b_sptr_to_basic_block", _wrap_gr_vector_sink_b_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_sink_b_sptr_to_basic_block(gr_vector_sink_b_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_sink_b_sptr_check_topology", (PyCFunction) _wrap_gr_vector_sink_b_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_b_sptr_check_topology(gr_vector_sink_b_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_sink_b_sptr_swigregister", gr_vector_sink_b_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_sink_b", (PyCFunction) _wrap_vector_sink_b, METH_VARARGS | METH_KEYWORDS, (char *)"vector_sink_b(int vlen = 1) -> gr_vector_sink_b_sptr"},
	 { (char *)"new_gr_vector_sink_s_sptr", _wrap_new_gr_vector_sink_s_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_sink_s_sptr()\n"
		"new_gr_vector_sink_s_sptr( p) -> gr_vector_sink_s_sptr\n"
		""},
	 { (char *)"gr_vector_sink_s_sptr___deref__", _wrap_gr_vector_sink_s_sptr___deref__, METH_VARARGS, (char *)"gr_vector_sink_s_sptr___deref__(gr_vector_sink_s_sptr self)"},
	 { (char *)"delete_gr_vector_sink_s_sptr", _wrap_delete_gr_vector_sink_s_sptr, METH_VARARGS, (char *)"delete_gr_vector_sink_s_sptr(gr_vector_sink_s_sptr self)"},
	 { (char *)"gr_vector_sink_s_sptr_clear", _wrap_gr_vector_sink_s_sptr_clear, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_clear(gr_vector_sink_s_sptr self)"},
	 { (char *)"gr_vector_sink_s_sptr_reset", _wrap_gr_vector_sink_s_sptr_reset, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_reset(gr_vector_sink_s_sptr self)"},
	 { (char *)"gr_vector_sink_s_sptr_data", _wrap_gr_vector_sink_s_sptr_data, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_data(gr_vector_sink_s_sptr self) -> __dummy_2__"},
	 { (char *)"gr_vector_sink_s_sptr_history", _wrap_gr_vector_sink_s_sptr_history, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_history(gr_vector_sink_s_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_sink_s_sptr_output_multiple", _wrap_gr_vector_sink_s_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_output_multiple(gr_vector_sink_s_sptr self) -> int"},
	 { (char *)"gr_vector_sink_s_sptr_relative_rate", _wrap_gr_vector_sink_s_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_relative_rate(gr_vector_sink_s_sptr self) -> double"},
	 { (char *)"gr_vector_sink_s_sptr_start", _wrap_gr_vector_sink_s_sptr_start, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_start(gr_vector_sink_s_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_s_sptr_stop", _wrap_gr_vector_sink_s_sptr_stop, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_stop(gr_vector_sink_s_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_s_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_sink_s_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_s_sptr_nitems_read(gr_vector_sink_s_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_sink_s_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_sink_s_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_s_sptr_nitems_written(gr_vector_sink_s_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_sink_s_sptr_detail", _wrap_gr_vector_sink_s_sptr_detail, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_detail(gr_vector_sink_s_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_sink_s_sptr_set_detail", (PyCFunction) _wrap_gr_vector_sink_s_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_s_sptr_set_detail(gr_vector_sink_s_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_sink_s_sptr_name", _wrap_gr_vector_sink_s_sptr_name, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_name(gr_vector_sink_s_sptr self) -> string"},
	 { (char *)"gr_vector_sink_s_sptr_input_signature", _wrap_gr_vector_sink_s_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_input_signature(gr_vector_sink_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_s_sptr_output_signature", _wrap_gr_vector_sink_s_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_output_signature(gr_vector_sink_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_s_sptr_unique_id", _wrap_gr_vector_sink_s_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_unique_id(gr_vector_sink_s_sptr self) -> long"},
	 { (char *)"gr_vector_sink_s_sptr_to_basic_block", _wrap_gr_vector_sink_s_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_sink_s_sptr_to_basic_block(gr_vector_sink_s_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_sink_s_sptr_check_topology", (PyCFunction) _wrap_gr_vector_sink_s_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_s_sptr_check_topology(gr_vector_sink_s_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_sink_s_sptr_swigregister", gr_vector_sink_s_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_sink_s", (PyCFunction) _wrap_vector_sink_s, METH_VARARGS | METH_KEYWORDS, (char *)"vector_sink_s(int vlen = 1) -> gr_vector_sink_s_sptr"},
	 { (char *)"new_gr_vector_sink_i_sptr", _wrap_new_gr_vector_sink_i_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_sink_i_sptr()\n"
		"new_gr_vector_sink_i_sptr( p) -> gr_vector_sink_i_sptr\n"
		""},
	 { (char *)"gr_vector_sink_i_sptr___deref__", _wrap_gr_vector_sink_i_sptr___deref__, METH_VARARGS, (char *)"gr_vector_sink_i_sptr___deref__(gr_vector_sink_i_sptr self)"},
	 { (char *)"delete_gr_vector_sink_i_sptr", _wrap_delete_gr_vector_sink_i_sptr, METH_VARARGS, (char *)"delete_gr_vector_sink_i_sptr(gr_vector_sink_i_sptr self)"},
	 { (char *)"gr_vector_sink_i_sptr_clear", _wrap_gr_vector_sink_i_sptr_clear, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_clear(gr_vector_sink_i_sptr self)"},
	 { (char *)"gr_vector_sink_i_sptr_reset", _wrap_gr_vector_sink_i_sptr_reset, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_reset(gr_vector_sink_i_sptr self)"},
	 { (char *)"gr_vector_sink_i_sptr_data", _wrap_gr_vector_sink_i_sptr_data, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_data(gr_vector_sink_i_sptr self) -> __dummy_3__"},
	 { (char *)"gr_vector_sink_i_sptr_history", _wrap_gr_vector_sink_i_sptr_history, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_history(gr_vector_sink_i_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_sink_i_sptr_output_multiple", _wrap_gr_vector_sink_i_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_output_multiple(gr_vector_sink_i_sptr self) -> int"},
	 { (char *)"gr_vector_sink_i_sptr_relative_rate", _wrap_gr_vector_sink_i_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_relative_rate(gr_vector_sink_i_sptr self) -> double"},
	 { (char *)"gr_vector_sink_i_sptr_start", _wrap_gr_vector_sink_i_sptr_start, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_start(gr_vector_sink_i_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_i_sptr_stop", _wrap_gr_vector_sink_i_sptr_stop, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_stop(gr_vector_sink_i_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_i_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_sink_i_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_i_sptr_nitems_read(gr_vector_sink_i_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_sink_i_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_sink_i_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_i_sptr_nitems_written(gr_vector_sink_i_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_sink_i_sptr_detail", _wrap_gr_vector_sink_i_sptr_detail, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_detail(gr_vector_sink_i_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_sink_i_sptr_set_detail", (PyCFunction) _wrap_gr_vector_sink_i_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_i_sptr_set_detail(gr_vector_sink_i_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_sink_i_sptr_name", _wrap_gr_vector_sink_i_sptr_name, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_name(gr_vector_sink_i_sptr self) -> string"},
	 { (char *)"gr_vector_sink_i_sptr_input_signature", _wrap_gr_vector_sink_i_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_input_signature(gr_vector_sink_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_i_sptr_output_signature", _wrap_gr_vector_sink_i_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_output_signature(gr_vector_sink_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_i_sptr_unique_id", _wrap_gr_vector_sink_i_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_unique_id(gr_vector_sink_i_sptr self) -> long"},
	 { (char *)"gr_vector_sink_i_sptr_to_basic_block", _wrap_gr_vector_sink_i_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_sink_i_sptr_to_basic_block(gr_vector_sink_i_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_sink_i_sptr_check_topology", (PyCFunction) _wrap_gr_vector_sink_i_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_i_sptr_check_topology(gr_vector_sink_i_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_sink_i_sptr_swigregister", gr_vector_sink_i_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_sink_i", (PyCFunction) _wrap_vector_sink_i, METH_VARARGS | METH_KEYWORDS, (char *)"vector_sink_i(int vlen = 1) -> gr_vector_sink_i_sptr"},
	 { (char *)"new_gr_vector_sink_f_sptr", _wrap_new_gr_vector_sink_f_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_sink_f_sptr()\n"
		"new_gr_vector_sink_f_sptr( p) -> gr_vector_sink_f_sptr\n"
		""},
	 { (char *)"gr_vector_sink_f_sptr___deref__", _wrap_gr_vector_sink_f_sptr___deref__, METH_VARARGS, (char *)"gr_vector_sink_f_sptr___deref__(gr_vector_sink_f_sptr self)"},
	 { (char *)"delete_gr_vector_sink_f_sptr", _wrap_delete_gr_vector_sink_f_sptr, METH_VARARGS, (char *)"delete_gr_vector_sink_f_sptr(gr_vector_sink_f_sptr self)"},
	 { (char *)"gr_vector_sink_f_sptr_clear", _wrap_gr_vector_sink_f_sptr_clear, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_clear(gr_vector_sink_f_sptr self)"},
	 { (char *)"gr_vector_sink_f_sptr_reset", _wrap_gr_vector_sink_f_sptr_reset, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_reset(gr_vector_sink_f_sptr self)"},
	 { (char *)"gr_vector_sink_f_sptr_data", _wrap_gr_vector_sink_f_sptr_data, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_data(gr_vector_sink_f_sptr self) -> __dummy_4__"},
	 { (char *)"gr_vector_sink_f_sptr_history", _wrap_gr_vector_sink_f_sptr_history, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_history(gr_vector_sink_f_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_sink_f_sptr_output_multiple", _wrap_gr_vector_sink_f_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_output_multiple(gr_vector_sink_f_sptr self) -> int"},
	 { (char *)"gr_vector_sink_f_sptr_relative_rate", _wrap_gr_vector_sink_f_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_relative_rate(gr_vector_sink_f_sptr self) -> double"},
	 { (char *)"gr_vector_sink_f_sptr_start", _wrap_gr_vector_sink_f_sptr_start, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_start(gr_vector_sink_f_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_f_sptr_stop", _wrap_gr_vector_sink_f_sptr_stop, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_stop(gr_vector_sink_f_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_f_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_sink_f_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_f_sptr_nitems_read(gr_vector_sink_f_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_sink_f_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_sink_f_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_f_sptr_nitems_written(gr_vector_sink_f_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_sink_f_sptr_detail", _wrap_gr_vector_sink_f_sptr_detail, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_detail(gr_vector_sink_f_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_sink_f_sptr_set_detail", (PyCFunction) _wrap_gr_vector_sink_f_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_f_sptr_set_detail(gr_vector_sink_f_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_sink_f_sptr_name", _wrap_gr_vector_sink_f_sptr_name, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_name(gr_vector_sink_f_sptr self) -> string"},
	 { (char *)"gr_vector_sink_f_sptr_input_signature", _wrap_gr_vector_sink_f_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_input_signature(gr_vector_sink_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_f_sptr_output_signature", _wrap_gr_vector_sink_f_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_output_signature(gr_vector_sink_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_f_sptr_unique_id", _wrap_gr_vector_sink_f_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_unique_id(gr_vector_sink_f_sptr self) -> long"},
	 { (char *)"gr_vector_sink_f_sptr_to_basic_block", _wrap_gr_vector_sink_f_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_sink_f_sptr_to_basic_block(gr_vector_sink_f_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_sink_f_sptr_check_topology", (PyCFunction) _wrap_gr_vector_sink_f_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_f_sptr_check_topology(gr_vector_sink_f_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_sink_f_sptr_swigregister", gr_vector_sink_f_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_sink_f", (PyCFunction) _wrap_vector_sink_f, METH_VARARGS | METH_KEYWORDS, (char *)"vector_sink_f(int vlen = 1) -> gr_vector_sink_f_sptr"},
	 { (char *)"new_gr_vector_sink_c_sptr", _wrap_new_gr_vector_sink_c_sptr, METH_VARARGS, (char *)"\n"
		"gr_vector_sink_c_sptr()\n"
		"new_gr_vector_sink_c_sptr( p) -> gr_vector_sink_c_sptr\n"
		""},
	 { (char *)"gr_vector_sink_c_sptr___deref__", _wrap_gr_vector_sink_c_sptr___deref__, METH_VARARGS, (char *)"gr_vector_sink_c_sptr___deref__(gr_vector_sink_c_sptr self)"},
	 { (char *)"delete_gr_vector_sink_c_sptr", _wrap_delete_gr_vector_sink_c_sptr, METH_VARARGS, (char *)"delete_gr_vector_sink_c_sptr(gr_vector_sink_c_sptr self)"},
	 { (char *)"gr_vector_sink_c_sptr_clear", _wrap_gr_vector_sink_c_sptr_clear, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_clear(gr_vector_sink_c_sptr self)"},
	 { (char *)"gr_vector_sink_c_sptr_reset", _wrap_gr_vector_sink_c_sptr_reset, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_reset(gr_vector_sink_c_sptr self)"},
	 { (char *)"gr_vector_sink_c_sptr_data", _wrap_gr_vector_sink_c_sptr_data, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_data(gr_vector_sink_c_sptr self) -> std::vector<(gr_complex,std::allocator<(gr_complex)>)>"},
	 { (char *)"gr_vector_sink_c_sptr_history", _wrap_gr_vector_sink_c_sptr_history, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_history(gr_vector_sink_c_sptr self) -> unsigned int"},
	 { (char *)"gr_vector_sink_c_sptr_output_multiple", _wrap_gr_vector_sink_c_sptr_output_multiple, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_output_multiple(gr_vector_sink_c_sptr self) -> int"},
	 { (char *)"gr_vector_sink_c_sptr_relative_rate", _wrap_gr_vector_sink_c_sptr_relative_rate, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_relative_rate(gr_vector_sink_c_sptr self) -> double"},
	 { (char *)"gr_vector_sink_c_sptr_start", _wrap_gr_vector_sink_c_sptr_start, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_start(gr_vector_sink_c_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_c_sptr_stop", _wrap_gr_vector_sink_c_sptr_stop, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_stop(gr_vector_sink_c_sptr self) -> bool"},
	 { (char *)"gr_vector_sink_c_sptr_nitems_read", (PyCFunction) _wrap_gr_vector_sink_c_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_c_sptr_nitems_read(gr_vector_sink_c_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_vector_sink_c_sptr_nitems_written", (PyCFunction) _wrap_gr_vector_sink_c_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_c_sptr_nitems_written(gr_vector_sink_c_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_vector_sink_c_sptr_detail", _wrap_gr_vector_sink_c_sptr_detail, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_detail(gr_vector_sink_c_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_vector_sink_c_sptr_set_detail", (PyCFunction) _wrap_gr_vector_sink_c_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_c_sptr_set_detail(gr_vector_sink_c_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_vector_sink_c_sptr_name", _wrap_gr_vector_sink_c_sptr_name, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_name(gr_vector_sink_c_sptr self) -> string"},
	 { (char *)"gr_vector_sink_c_sptr_input_signature", _wrap_gr_vector_sink_c_sptr_input_signature, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_input_signature(gr_vector_sink_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_c_sptr_output_signature", _wrap_gr_vector_sink_c_sptr_output_signature, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_output_signature(gr_vector_sink_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_vector_sink_c_sptr_unique_id", _wrap_gr_vector_sink_c_sptr_unique_id, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_unique_id(gr_vector_sink_c_sptr self) -> long"},
	 { (char *)"gr_vector_sink_c_sptr_to_basic_block", _wrap_gr_vector_sink_c_sptr_to_basic_block, METH_VARARGS, (char *)"gr_vector_sink_c_sptr_to_basic_block(gr_vector_sink_c_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_vector_sink_c_sptr_check_topology", (PyCFunction) _wrap_gr_vector_sink_c_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_vector_sink_c_sptr_check_topology(gr_vector_sink_c_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_vector_sink_c_sptr_swigregister", gr_vector_sink_c_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"vector_sink_c", (PyCFunction) _wrap_vector_sink_c, METH_VARARGS | METH_KEYWORDS, (char *)"vector_sink_c(int vlen = 1) -> gr_vector_sink_c_sptr"},
	 { (char *)"new_gr_noise_source_s_sptr", _wrap_new_gr_noise_source_s_sptr, METH_VARARGS, (char *)"\n"
		"gr_noise_source_s_sptr()\n"
		"new_gr_noise_source_s_sptr( p) -> gr_noise_source_s_sptr\n"
		""},
	 { (char *)"gr_noise_source_s_sptr___deref__", _wrap_gr_noise_source_s_sptr___deref__, METH_VARARGS, (char *)"gr_noise_source_s_sptr___deref__(gr_noise_source_s_sptr self)"},
	 { (char *)"delete_gr_noise_source_s_sptr", _wrap_delete_gr_noise_source_s_sptr, METH_VARARGS, (char *)"delete_gr_noise_source_s_sptr(gr_noise_source_s_sptr self)"},
	 { (char *)"gr_noise_source_s_sptr_set_type", (PyCFunction) _wrap_gr_noise_source_s_sptr_set_type, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_s_sptr_set_type(gr_noise_source_s_sptr self, gr_noise_type_t type)"},
	 { (char *)"gr_noise_source_s_sptr_set_amplitude", (PyCFunction) _wrap_gr_noise_source_s_sptr_set_amplitude, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_s_sptr_set_amplitude(gr_noise_source_s_sptr self, float ampl)"},
	 { (char *)"gr_noise_source_s_sptr_type", _wrap_gr_noise_source_s_sptr_type, METH_VARARGS, (char *)"gr_noise_source_s_sptr_type(gr_noise_source_s_sptr self) -> gr_noise_type_t"},
	 { (char *)"gr_noise_source_s_sptr_amplitude", _wrap_gr_noise_source_s_sptr_amplitude, METH_VARARGS, (char *)"gr_noise_source_s_sptr_amplitude(gr_noise_source_s_sptr self) -> float"},
	 { (char *)"gr_noise_source_s_sptr_history", _wrap_gr_noise_source_s_sptr_history, METH_VARARGS, (char *)"gr_noise_source_s_sptr_history(gr_noise_source_s_sptr self) -> unsigned int"},
	 { (char *)"gr_noise_source_s_sptr_output_multiple", _wrap_gr_noise_source_s_sptr_output_multiple, METH_VARARGS, (char *)"gr_noise_source_s_sptr_output_multiple(gr_noise_source_s_sptr self) -> int"},
	 { (char *)"gr_noise_source_s_sptr_relative_rate", _wrap_gr_noise_source_s_sptr_relative_rate, METH_VARARGS, (char *)"gr_noise_source_s_sptr_relative_rate(gr_noise_source_s_sptr self) -> double"},
	 { (char *)"gr_noise_source_s_sptr_start", _wrap_gr_noise_source_s_sptr_start, METH_VARARGS, (char *)"gr_noise_source_s_sptr_start(gr_noise_source_s_sptr self) -> bool"},
	 { (char *)"gr_noise_source_s_sptr_stop", _wrap_gr_noise_source_s_sptr_stop, METH_VARARGS, (char *)"gr_noise_source_s_sptr_stop(gr_noise_source_s_sptr self) -> bool"},
	 { (char *)"gr_noise_source_s_sptr_nitems_read", (PyCFunction) _wrap_gr_noise_source_s_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_s_sptr_nitems_read(gr_noise_source_s_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_noise_source_s_sptr_nitems_written", (PyCFunction) _wrap_gr_noise_source_s_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_s_sptr_nitems_written(gr_noise_source_s_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_noise_source_s_sptr_detail", _wrap_gr_noise_source_s_sptr_detail, METH_VARARGS, (char *)"gr_noise_source_s_sptr_detail(gr_noise_source_s_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_noise_source_s_sptr_set_detail", (PyCFunction) _wrap_gr_noise_source_s_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_s_sptr_set_detail(gr_noise_source_s_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_noise_source_s_sptr_name", _wrap_gr_noise_source_s_sptr_name, METH_VARARGS, (char *)"gr_noise_source_s_sptr_name(gr_noise_source_s_sptr self) -> string"},
	 { (char *)"gr_noise_source_s_sptr_input_signature", _wrap_gr_noise_source_s_sptr_input_signature, METH_VARARGS, (char *)"gr_noise_source_s_sptr_input_signature(gr_noise_source_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_noise_source_s_sptr_output_signature", _wrap_gr_noise_source_s_sptr_output_signature, METH_VARARGS, (char *)"gr_noise_source_s_sptr_output_signature(gr_noise_source_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_noise_source_s_sptr_unique_id", _wrap_gr_noise_source_s_sptr_unique_id, METH_VARARGS, (char *)"gr_noise_source_s_sptr_unique_id(gr_noise_source_s_sptr self) -> long"},
	 { (char *)"gr_noise_source_s_sptr_to_basic_block", _wrap_gr_noise_source_s_sptr_to_basic_block, METH_VARARGS, (char *)"gr_noise_source_s_sptr_to_basic_block(gr_noise_source_s_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_noise_source_s_sptr_check_topology", (PyCFunction) _wrap_gr_noise_source_s_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_s_sptr_check_topology(gr_noise_source_s_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_noise_source_s_sptr_swigregister", gr_noise_source_s_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"noise_source_s", (PyCFunction) _wrap_noise_source_s, METH_VARARGS | METH_KEYWORDS, (char *)"noise_source_s(gr_noise_type_t type, float ampl, long seed = 0) -> gr_noise_source_s_sptr"},
	 { (char *)"new_gr_noise_source_i_sptr", _wrap_new_gr_noise_source_i_sptr, METH_VARARGS, (char *)"\n"
		"gr_noise_source_i_sptr()\n"
		"new_gr_noise_source_i_sptr( p) -> gr_noise_source_i_sptr\n"
		""},
	 { (char *)"gr_noise_source_i_sptr___deref__", _wrap_gr_noise_source_i_sptr___deref__, METH_VARARGS, (char *)"gr_noise_source_i_sptr___deref__(gr_noise_source_i_sptr self)"},
	 { (char *)"delete_gr_noise_source_i_sptr", _wrap_delete_gr_noise_source_i_sptr, METH_VARARGS, (char *)"delete_gr_noise_source_i_sptr(gr_noise_source_i_sptr self)"},
	 { (char *)"gr_noise_source_i_sptr_set_type", (PyCFunction) _wrap_gr_noise_source_i_sptr_set_type, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_i_sptr_set_type(gr_noise_source_i_sptr self, gr_noise_type_t type)"},
	 { (char *)"gr_noise_source_i_sptr_set_amplitude", (PyCFunction) _wrap_gr_noise_source_i_sptr_set_amplitude, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_i_sptr_set_amplitude(gr_noise_source_i_sptr self, float ampl)"},
	 { (char *)"gr_noise_source_i_sptr_type", _wrap_gr_noise_source_i_sptr_type, METH_VARARGS, (char *)"gr_noise_source_i_sptr_type(gr_noise_source_i_sptr self) -> gr_noise_type_t"},
	 { (char *)"gr_noise_source_i_sptr_amplitude", _wrap_gr_noise_source_i_sptr_amplitude, METH_VARARGS, (char *)"gr_noise_source_i_sptr_amplitude(gr_noise_source_i_sptr self) -> float"},
	 { (char *)"gr_noise_source_i_sptr_history", _wrap_gr_noise_source_i_sptr_history, METH_VARARGS, (char *)"gr_noise_source_i_sptr_history(gr_noise_source_i_sptr self) -> unsigned int"},
	 { (char *)"gr_noise_source_i_sptr_output_multiple", _wrap_gr_noise_source_i_sptr_output_multiple, METH_VARARGS, (char *)"gr_noise_source_i_sptr_output_multiple(gr_noise_source_i_sptr self) -> int"},
	 { (char *)"gr_noise_source_i_sptr_relative_rate", _wrap_gr_noise_source_i_sptr_relative_rate, METH_VARARGS, (char *)"gr_noise_source_i_sptr_relative_rate(gr_noise_source_i_sptr self) -> double"},
	 { (char *)"gr_noise_source_i_sptr_start", _wrap_gr_noise_source_i_sptr_start, METH_VARARGS, (char *)"gr_noise_source_i_sptr_start(gr_noise_source_i_sptr self) -> bool"},
	 { (char *)"gr_noise_source_i_sptr_stop", _wrap_gr_noise_source_i_sptr_stop, METH_VARARGS, (char *)"gr_noise_source_i_sptr_stop(gr_noise_source_i_sptr self) -> bool"},
	 { (char *)"gr_noise_source_i_sptr_nitems_read", (PyCFunction) _wrap_gr_noise_source_i_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_i_sptr_nitems_read(gr_noise_source_i_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_noise_source_i_sptr_nitems_written", (PyCFunction) _wrap_gr_noise_source_i_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_i_sptr_nitems_written(gr_noise_source_i_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_noise_source_i_sptr_detail", _wrap_gr_noise_source_i_sptr_detail, METH_VARARGS, (char *)"gr_noise_source_i_sptr_detail(gr_noise_source_i_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_noise_source_i_sptr_set_detail", (PyCFunction) _wrap_gr_noise_source_i_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_i_sptr_set_detail(gr_noise_source_i_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_noise_source_i_sptr_name", _wrap_gr_noise_source_i_sptr_name, METH_VARARGS, (char *)"gr_noise_source_i_sptr_name(gr_noise_source_i_sptr self) -> string"},
	 { (char *)"gr_noise_source_i_sptr_input_signature", _wrap_gr_noise_source_i_sptr_input_signature, METH_VARARGS, (char *)"gr_noise_source_i_sptr_input_signature(gr_noise_source_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_noise_source_i_sptr_output_signature", _wrap_gr_noise_source_i_sptr_output_signature, METH_VARARGS, (char *)"gr_noise_source_i_sptr_output_signature(gr_noise_source_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_noise_source_i_sptr_unique_id", _wrap_gr_noise_source_i_sptr_unique_id, METH_VARARGS, (char *)"gr_noise_source_i_sptr_unique_id(gr_noise_source_i_sptr self) -> long"},
	 { (char *)"gr_noise_source_i_sptr_to_basic_block", _wrap_gr_noise_source_i_sptr_to_basic_block, METH_VARARGS, (char *)"gr_noise_source_i_sptr_to_basic_block(gr_noise_source_i_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_noise_source_i_sptr_check_topology", (PyCFunction) _wrap_gr_noise_source_i_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_i_sptr_check_topology(gr_noise_source_i_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_noise_source_i_sptr_swigregister", gr_noise_source_i_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"noise_source_i", (PyCFunction) _wrap_noise_source_i, METH_VARARGS | METH_KEYWORDS, (char *)"noise_source_i(gr_noise_type_t type, float ampl, long seed = 0) -> gr_noise_source_i_sptr"},
	 { (char *)"new_gr_noise_source_f_sptr", _wrap_new_gr_noise_source_f_sptr, METH_VARARGS, (char *)"\n"
		"gr_noise_source_f_sptr()\n"
		"new_gr_noise_source_f_sptr( p) -> gr_noise_source_f_sptr\n"
		""},
	 { (char *)"gr_noise_source_f_sptr___deref__", _wrap_gr_noise_source_f_sptr___deref__, METH_VARARGS, (char *)"gr_noise_source_f_sptr___deref__(gr_noise_source_f_sptr self)"},
	 { (char *)"delete_gr_noise_source_f_sptr", _wrap_delete_gr_noise_source_f_sptr, METH_VARARGS, (char *)"delete_gr_noise_source_f_sptr(gr_noise_source_f_sptr self)"},
	 { (char *)"gr_noise_source_f_sptr_set_type", (PyCFunction) _wrap_gr_noise_source_f_sptr_set_type, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_f_sptr_set_type(gr_noise_source_f_sptr self, gr_noise_type_t type)"},
	 { (char *)"gr_noise_source_f_sptr_set_amplitude", (PyCFunction) _wrap_gr_noise_source_f_sptr_set_amplitude, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_f_sptr_set_amplitude(gr_noise_source_f_sptr self, float ampl)"},
	 { (char *)"gr_noise_source_f_sptr_type", _wrap_gr_noise_source_f_sptr_type, METH_VARARGS, (char *)"gr_noise_source_f_sptr_type(gr_noise_source_f_sptr self) -> gr_noise_type_t"},
	 { (char *)"gr_noise_source_f_sptr_amplitude", _wrap_gr_noise_source_f_sptr_amplitude, METH_VARARGS, (char *)"gr_noise_source_f_sptr_amplitude(gr_noise_source_f_sptr self) -> float"},
	 { (char *)"gr_noise_source_f_sptr_history", _wrap_gr_noise_source_f_sptr_history, METH_VARARGS, (char *)"gr_noise_source_f_sptr_history(gr_noise_source_f_sptr self) -> unsigned int"},
	 { (char *)"gr_noise_source_f_sptr_output_multiple", _wrap_gr_noise_source_f_sptr_output_multiple, METH_VARARGS, (char *)"gr_noise_source_f_sptr_output_multiple(gr_noise_source_f_sptr self) -> int"},
	 { (char *)"gr_noise_source_f_sptr_relative_rate", _wrap_gr_noise_source_f_sptr_relative_rate, METH_VARARGS, (char *)"gr_noise_source_f_sptr_relative_rate(gr_noise_source_f_sptr self) -> double"},
	 { (char *)"gr_noise_source_f_sptr_start", _wrap_gr_noise_source_f_sptr_start, METH_VARARGS, (char *)"gr_noise_source_f_sptr_start(gr_noise_source_f_sptr self) -> bool"},
	 { (char *)"gr_noise_source_f_sptr_stop", _wrap_gr_noise_source_f_sptr_stop, METH_VARARGS, (char *)"gr_noise_source_f_sptr_stop(gr_noise_source_f_sptr self) -> bool"},
	 { (char *)"gr_noise_source_f_sptr_nitems_read", (PyCFunction) _wrap_gr_noise_source_f_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_f_sptr_nitems_read(gr_noise_source_f_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_noise_source_f_sptr_nitems_written", (PyCFunction) _wrap_gr_noise_source_f_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_f_sptr_nitems_written(gr_noise_source_f_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_noise_source_f_sptr_detail", _wrap_gr_noise_source_f_sptr_detail, METH_VARARGS, (char *)"gr_noise_source_f_sptr_detail(gr_noise_source_f_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_noise_source_f_sptr_set_detail", (PyCFunction) _wrap_gr_noise_source_f_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_f_sptr_set_detail(gr_noise_source_f_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_noise_source_f_sptr_name", _wrap_gr_noise_source_f_sptr_name, METH_VARARGS, (char *)"gr_noise_source_f_sptr_name(gr_noise_source_f_sptr self) -> string"},
	 { (char *)"gr_noise_source_f_sptr_input_signature", _wrap_gr_noise_source_f_sptr_input_signature, METH_VARARGS, (char *)"gr_noise_source_f_sptr_input_signature(gr_noise_source_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_noise_source_f_sptr_output_signature", _wrap_gr_noise_source_f_sptr_output_signature, METH_VARARGS, (char *)"gr_noise_source_f_sptr_output_signature(gr_noise_source_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_noise_source_f_sptr_unique_id", _wrap_gr_noise_source_f_sptr_unique_id, METH_VARARGS, (char *)"gr_noise_source_f_sptr_unique_id(gr_noise_source_f_sptr self) -> long"},
	 { (char *)"gr_noise_source_f_sptr_to_basic_block", _wrap_gr_noise_source_f_sptr_to_basic_block, METH_VARARGS, (char *)"gr_noise_source_f_sptr_to_basic_block(gr_noise_source_f_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_noise_source_f_sptr_check_topology", (PyCFunction) _wrap_gr_noise_source_f_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_f_sptr_check_topology(gr_noise_source_f_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_noise_source_f_sptr_swigregister", gr_noise_source_f_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"noise_source_f", (PyCFunction) _wrap_noise_source_f, METH_VARARGS | METH_KEYWORDS, (char *)"noise_source_f(gr_noise_type_t type, float ampl, long seed = 0) -> gr_noise_source_f_sptr"},
	 { (char *)"new_gr_noise_source_c_sptr", _wrap_new_gr_noise_source_c_sptr, METH_VARARGS, (char *)"\n"
		"gr_noise_source_c_sptr()\n"
		"new_gr_noise_source_c_sptr( p) -> gr_noise_source_c_sptr\n"
		""},
	 { (char *)"gr_noise_source_c_sptr___deref__", _wrap_gr_noise_source_c_sptr___deref__, METH_VARARGS, (char *)"gr_noise_source_c_sptr___deref__(gr_noise_source_c_sptr self)"},
	 { (char *)"delete_gr_noise_source_c_sptr", _wrap_delete_gr_noise_source_c_sptr, METH_VARARGS, (char *)"delete_gr_noise_source_c_sptr(gr_noise_source_c_sptr self)"},
	 { (char *)"gr_noise_source_c_sptr_set_type", (PyCFunction) _wrap_gr_noise_source_c_sptr_set_type, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_c_sptr_set_type(gr_noise_source_c_sptr self, gr_noise_type_t type)"},
	 { (char *)"gr_noise_source_c_sptr_set_amplitude", (PyCFunction) _wrap_gr_noise_source_c_sptr_set_amplitude, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_c_sptr_set_amplitude(gr_noise_source_c_sptr self, float ampl)"},
	 { (char *)"gr_noise_source_c_sptr_type", _wrap_gr_noise_source_c_sptr_type, METH_VARARGS, (char *)"gr_noise_source_c_sptr_type(gr_noise_source_c_sptr self) -> gr_noise_type_t"},
	 { (char *)"gr_noise_source_c_sptr_amplitude", _wrap_gr_noise_source_c_sptr_amplitude, METH_VARARGS, (char *)"gr_noise_source_c_sptr_amplitude(gr_noise_source_c_sptr self) -> float"},
	 { (char *)"gr_noise_source_c_sptr_history", _wrap_gr_noise_source_c_sptr_history, METH_VARARGS, (char *)"gr_noise_source_c_sptr_history(gr_noise_source_c_sptr self) -> unsigned int"},
	 { (char *)"gr_noise_source_c_sptr_output_multiple", _wrap_gr_noise_source_c_sptr_output_multiple, METH_VARARGS, (char *)"gr_noise_source_c_sptr_output_multiple(gr_noise_source_c_sptr self) -> int"},
	 { (char *)"gr_noise_source_c_sptr_relative_rate", _wrap_gr_noise_source_c_sptr_relative_rate, METH_VARARGS, (char *)"gr_noise_source_c_sptr_relative_rate(gr_noise_source_c_sptr self) -> double"},
	 { (char *)"gr_noise_source_c_sptr_start", _wrap_gr_noise_source_c_sptr_start, METH_VARARGS, (char *)"gr_noise_source_c_sptr_start(gr_noise_source_c_sptr self) -> bool"},
	 { (char *)"gr_noise_source_c_sptr_stop", _wrap_gr_noise_source_c_sptr_stop, METH_VARARGS, (char *)"gr_noise_source_c_sptr_stop(gr_noise_source_c_sptr self) -> bool"},
	 { (char *)"gr_noise_source_c_sptr_nitems_read", (PyCFunction) _wrap_gr_noise_source_c_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_c_sptr_nitems_read(gr_noise_source_c_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_noise_source_c_sptr_nitems_written", (PyCFunction) _wrap_gr_noise_source_c_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_c_sptr_nitems_written(gr_noise_source_c_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_noise_source_c_sptr_detail", _wrap_gr_noise_source_c_sptr_detail, METH_VARARGS, (char *)"gr_noise_source_c_sptr_detail(gr_noise_source_c_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_noise_source_c_sptr_set_detail", (PyCFunction) _wrap_gr_noise_source_c_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_c_sptr_set_detail(gr_noise_source_c_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_noise_source_c_sptr_name", _wrap_gr_noise_source_c_sptr_name, METH_VARARGS, (char *)"gr_noise_source_c_sptr_name(gr_noise_source_c_sptr self) -> string"},
	 { (char *)"gr_noise_source_c_sptr_input_signature", _wrap_gr_noise_source_c_sptr_input_signature, METH_VARARGS, (char *)"gr_noise_source_c_sptr_input_signature(gr_noise_source_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_noise_source_c_sptr_output_signature", _wrap_gr_noise_source_c_sptr_output_signature, METH_VARARGS, (char *)"gr_noise_source_c_sptr_output_signature(gr_noise_source_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_noise_source_c_sptr_unique_id", _wrap_gr_noise_source_c_sptr_unique_id, METH_VARARGS, (char *)"gr_noise_source_c_sptr_unique_id(gr_noise_source_c_sptr self) -> long"},
	 { (char *)"gr_noise_source_c_sptr_to_basic_block", _wrap_gr_noise_source_c_sptr_to_basic_block, METH_VARARGS, (char *)"gr_noise_source_c_sptr_to_basic_block(gr_noise_source_c_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_noise_source_c_sptr_check_topology", (PyCFunction) _wrap_gr_noise_source_c_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_noise_source_c_sptr_check_topology(gr_noise_source_c_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_noise_source_c_sptr_swigregister", gr_noise_source_c_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"noise_source_c", (PyCFunction) _wrap_noise_source_c, METH_VARARGS | METH_KEYWORDS, (char *)"noise_source_c(gr_noise_type_t type, float ampl, long seed = 0) -> gr_noise_source_c_sptr"},
	 { (char *)"new_gr_sig_source_s_sptr", _wrap_new_gr_sig_source_s_sptr, METH_VARARGS, (char *)"\n"
		"gr_sig_source_s_sptr()\n"
		"new_gr_sig_source_s_sptr( p) -> gr_sig_source_s_sptr\n"
		""},
	 { (char *)"gr_sig_source_s_sptr___deref__", _wrap_gr_sig_source_s_sptr___deref__, METH_VARARGS, (char *)"gr_sig_source_s_sptr___deref__(gr_sig_source_s_sptr self)"},
	 { (char *)"delete_gr_sig_source_s_sptr", _wrap_delete_gr_sig_source_s_sptr, METH_VARARGS, (char *)"delete_gr_sig_source_s_sptr(gr_sig_source_s_sptr self)"},
	 { (char *)"gr_sig_source_s_sptr_sampling_freq", _wrap_gr_sig_source_s_sptr_sampling_freq, METH_VARARGS, (char *)"gr_sig_source_s_sptr_sampling_freq(gr_sig_source_s_sptr self) -> double"},
	 { (char *)"gr_sig_source_s_sptr_waveform", _wrap_gr_sig_source_s_sptr_waveform, METH_VARARGS, (char *)"gr_sig_source_s_sptr_waveform(gr_sig_source_s_sptr self) -> gr_waveform_t"},
	 { (char *)"gr_sig_source_s_sptr_frequency", _wrap_gr_sig_source_s_sptr_frequency, METH_VARARGS, (char *)"gr_sig_source_s_sptr_frequency(gr_sig_source_s_sptr self) -> double"},
	 { (char *)"gr_sig_source_s_sptr_amplitude", _wrap_gr_sig_source_s_sptr_amplitude, METH_VARARGS, (char *)"gr_sig_source_s_sptr_amplitude(gr_sig_source_s_sptr self) -> double"},
	 { (char *)"gr_sig_source_s_sptr_offset", _wrap_gr_sig_source_s_sptr_offset, METH_VARARGS, (char *)"gr_sig_source_s_sptr_offset(gr_sig_source_s_sptr self) -> short"},
	 { (char *)"gr_sig_source_s_sptr_set_sampling_freq", (PyCFunction) _wrap_gr_sig_source_s_sptr_set_sampling_freq, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_s_sptr_set_sampling_freq(gr_sig_source_s_sptr self, double sampling_freq)"},
	 { (char *)"gr_sig_source_s_sptr_set_waveform", (PyCFunction) _wrap_gr_sig_source_s_sptr_set_waveform, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_s_sptr_set_waveform(gr_sig_source_s_sptr self, gr_waveform_t waveform)"},
	 { (char *)"gr_sig_source_s_sptr_set_frequency", (PyCFunction) _wrap_gr_sig_source_s_sptr_set_frequency, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_s_sptr_set_frequency(gr_sig_source_s_sptr self, double frequency)"},
	 { (char *)"gr_sig_source_s_sptr_set_amplitude", (PyCFunction) _wrap_gr_sig_source_s_sptr_set_amplitude, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_s_sptr_set_amplitude(gr_sig_source_s_sptr self, double ampl)"},
	 { (char *)"gr_sig_source_s_sptr_set_offset", (PyCFunction) _wrap_gr_sig_source_s_sptr_set_offset, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_s_sptr_set_offset(gr_sig_source_s_sptr self, short offset)"},
	 { (char *)"gr_sig_source_s_sptr_history", _wrap_gr_sig_source_s_sptr_history, METH_VARARGS, (char *)"gr_sig_source_s_sptr_history(gr_sig_source_s_sptr self) -> unsigned int"},
	 { (char *)"gr_sig_source_s_sptr_output_multiple", _wrap_gr_sig_source_s_sptr_output_multiple, METH_VARARGS, (char *)"gr_sig_source_s_sptr_output_multiple(gr_sig_source_s_sptr self) -> int"},
	 { (char *)"gr_sig_source_s_sptr_relative_rate", _wrap_gr_sig_source_s_sptr_relative_rate, METH_VARARGS, (char *)"gr_sig_source_s_sptr_relative_rate(gr_sig_source_s_sptr self) -> double"},
	 { (char *)"gr_sig_source_s_sptr_start", _wrap_gr_sig_source_s_sptr_start, METH_VARARGS, (char *)"gr_sig_source_s_sptr_start(gr_sig_source_s_sptr self) -> bool"},
	 { (char *)"gr_sig_source_s_sptr_stop", _wrap_gr_sig_source_s_sptr_stop, METH_VARARGS, (char *)"gr_sig_source_s_sptr_stop(gr_sig_source_s_sptr self) -> bool"},
	 { (char *)"gr_sig_source_s_sptr_nitems_read", (PyCFunction) _wrap_gr_sig_source_s_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_s_sptr_nitems_read(gr_sig_source_s_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sig_source_s_sptr_nitems_written", (PyCFunction) _wrap_gr_sig_source_s_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_s_sptr_nitems_written(gr_sig_source_s_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sig_source_s_sptr_detail", _wrap_gr_sig_source_s_sptr_detail, METH_VARARGS, (char *)"gr_sig_source_s_sptr_detail(gr_sig_source_s_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sig_source_s_sptr_set_detail", (PyCFunction) _wrap_gr_sig_source_s_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_s_sptr_set_detail(gr_sig_source_s_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sig_source_s_sptr_name", _wrap_gr_sig_source_s_sptr_name, METH_VARARGS, (char *)"gr_sig_source_s_sptr_name(gr_sig_source_s_sptr self) -> string"},
	 { (char *)"gr_sig_source_s_sptr_input_signature", _wrap_gr_sig_source_s_sptr_input_signature, METH_VARARGS, (char *)"gr_sig_source_s_sptr_input_signature(gr_sig_source_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sig_source_s_sptr_output_signature", _wrap_gr_sig_source_s_sptr_output_signature, METH_VARARGS, (char *)"gr_sig_source_s_sptr_output_signature(gr_sig_source_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sig_source_s_sptr_unique_id", _wrap_gr_sig_source_s_sptr_unique_id, METH_VARARGS, (char *)"gr_sig_source_s_sptr_unique_id(gr_sig_source_s_sptr self) -> long"},
	 { (char *)"gr_sig_source_s_sptr_to_basic_block", _wrap_gr_sig_source_s_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sig_source_s_sptr_to_basic_block(gr_sig_source_s_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sig_source_s_sptr_check_topology", (PyCFunction) _wrap_gr_sig_source_s_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_s_sptr_check_topology(gr_sig_source_s_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sig_source_s_sptr_swigregister", gr_sig_source_s_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sig_source_s", (PyCFunction) _wrap_sig_source_s, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"sig_source_s(double sampling_freq, gr_waveform_t waveform, double wave_freq, \n"
		"    double ampl, short offset = 0) -> gr_sig_source_s_sptr\n"
		""},
	 { (char *)"new_gr_sig_source_i_sptr", _wrap_new_gr_sig_source_i_sptr, METH_VARARGS, (char *)"\n"
		"gr_sig_source_i_sptr()\n"
		"new_gr_sig_source_i_sptr( p) -> gr_sig_source_i_sptr\n"
		""},
	 { (char *)"gr_sig_source_i_sptr___deref__", _wrap_gr_sig_source_i_sptr___deref__, METH_VARARGS, (char *)"gr_sig_source_i_sptr___deref__(gr_sig_source_i_sptr self)"},
	 { (char *)"delete_gr_sig_source_i_sptr", _wrap_delete_gr_sig_source_i_sptr, METH_VARARGS, (char *)"delete_gr_sig_source_i_sptr(gr_sig_source_i_sptr self)"},
	 { (char *)"gr_sig_source_i_sptr_sampling_freq", _wrap_gr_sig_source_i_sptr_sampling_freq, METH_VARARGS, (char *)"gr_sig_source_i_sptr_sampling_freq(gr_sig_source_i_sptr self) -> double"},
	 { (char *)"gr_sig_source_i_sptr_waveform", _wrap_gr_sig_source_i_sptr_waveform, METH_VARARGS, (char *)"gr_sig_source_i_sptr_waveform(gr_sig_source_i_sptr self) -> gr_waveform_t"},
	 { (char *)"gr_sig_source_i_sptr_frequency", _wrap_gr_sig_source_i_sptr_frequency, METH_VARARGS, (char *)"gr_sig_source_i_sptr_frequency(gr_sig_source_i_sptr self) -> double"},
	 { (char *)"gr_sig_source_i_sptr_amplitude", _wrap_gr_sig_source_i_sptr_amplitude, METH_VARARGS, (char *)"gr_sig_source_i_sptr_amplitude(gr_sig_source_i_sptr self) -> double"},
	 { (char *)"gr_sig_source_i_sptr_offset", _wrap_gr_sig_source_i_sptr_offset, METH_VARARGS, (char *)"gr_sig_source_i_sptr_offset(gr_sig_source_i_sptr self) -> int"},
	 { (char *)"gr_sig_source_i_sptr_set_sampling_freq", (PyCFunction) _wrap_gr_sig_source_i_sptr_set_sampling_freq, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_i_sptr_set_sampling_freq(gr_sig_source_i_sptr self, double sampling_freq)"},
	 { (char *)"gr_sig_source_i_sptr_set_waveform", (PyCFunction) _wrap_gr_sig_source_i_sptr_set_waveform, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_i_sptr_set_waveform(gr_sig_source_i_sptr self, gr_waveform_t waveform)"},
	 { (char *)"gr_sig_source_i_sptr_set_frequency", (PyCFunction) _wrap_gr_sig_source_i_sptr_set_frequency, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_i_sptr_set_frequency(gr_sig_source_i_sptr self, double frequency)"},
	 { (char *)"gr_sig_source_i_sptr_set_amplitude", (PyCFunction) _wrap_gr_sig_source_i_sptr_set_amplitude, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_i_sptr_set_amplitude(gr_sig_source_i_sptr self, double ampl)"},
	 { (char *)"gr_sig_source_i_sptr_set_offset", (PyCFunction) _wrap_gr_sig_source_i_sptr_set_offset, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_i_sptr_set_offset(gr_sig_source_i_sptr self, int offset)"},
	 { (char *)"gr_sig_source_i_sptr_history", _wrap_gr_sig_source_i_sptr_history, METH_VARARGS, (char *)"gr_sig_source_i_sptr_history(gr_sig_source_i_sptr self) -> unsigned int"},
	 { (char *)"gr_sig_source_i_sptr_output_multiple", _wrap_gr_sig_source_i_sptr_output_multiple, METH_VARARGS, (char *)"gr_sig_source_i_sptr_output_multiple(gr_sig_source_i_sptr self) -> int"},
	 { (char *)"gr_sig_source_i_sptr_relative_rate", _wrap_gr_sig_source_i_sptr_relative_rate, METH_VARARGS, (char *)"gr_sig_source_i_sptr_relative_rate(gr_sig_source_i_sptr self) -> double"},
	 { (char *)"gr_sig_source_i_sptr_start", _wrap_gr_sig_source_i_sptr_start, METH_VARARGS, (char *)"gr_sig_source_i_sptr_start(gr_sig_source_i_sptr self) -> bool"},
	 { (char *)"gr_sig_source_i_sptr_stop", _wrap_gr_sig_source_i_sptr_stop, METH_VARARGS, (char *)"gr_sig_source_i_sptr_stop(gr_sig_source_i_sptr self) -> bool"},
	 { (char *)"gr_sig_source_i_sptr_nitems_read", (PyCFunction) _wrap_gr_sig_source_i_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_i_sptr_nitems_read(gr_sig_source_i_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sig_source_i_sptr_nitems_written", (PyCFunction) _wrap_gr_sig_source_i_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_i_sptr_nitems_written(gr_sig_source_i_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sig_source_i_sptr_detail", _wrap_gr_sig_source_i_sptr_detail, METH_VARARGS, (char *)"gr_sig_source_i_sptr_detail(gr_sig_source_i_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sig_source_i_sptr_set_detail", (PyCFunction) _wrap_gr_sig_source_i_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_i_sptr_set_detail(gr_sig_source_i_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sig_source_i_sptr_name", _wrap_gr_sig_source_i_sptr_name, METH_VARARGS, (char *)"gr_sig_source_i_sptr_name(gr_sig_source_i_sptr self) -> string"},
	 { (char *)"gr_sig_source_i_sptr_input_signature", _wrap_gr_sig_source_i_sptr_input_signature, METH_VARARGS, (char *)"gr_sig_source_i_sptr_input_signature(gr_sig_source_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sig_source_i_sptr_output_signature", _wrap_gr_sig_source_i_sptr_output_signature, METH_VARARGS, (char *)"gr_sig_source_i_sptr_output_signature(gr_sig_source_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sig_source_i_sptr_unique_id", _wrap_gr_sig_source_i_sptr_unique_id, METH_VARARGS, (char *)"gr_sig_source_i_sptr_unique_id(gr_sig_source_i_sptr self) -> long"},
	 { (char *)"gr_sig_source_i_sptr_to_basic_block", _wrap_gr_sig_source_i_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sig_source_i_sptr_to_basic_block(gr_sig_source_i_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sig_source_i_sptr_check_topology", (PyCFunction) _wrap_gr_sig_source_i_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_i_sptr_check_topology(gr_sig_source_i_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sig_source_i_sptr_swigregister", gr_sig_source_i_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sig_source_i", (PyCFunction) _wrap_sig_source_i, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"sig_source_i(double sampling_freq, gr_waveform_t waveform, double wave_freq, \n"
		"    double ampl, int offset = 0) -> gr_sig_source_i_sptr\n"
		""},
	 { (char *)"new_gr_sig_source_f_sptr", _wrap_new_gr_sig_source_f_sptr, METH_VARARGS, (char *)"\n"
		"gr_sig_source_f_sptr()\n"
		"new_gr_sig_source_f_sptr( p) -> gr_sig_source_f_sptr\n"
		""},
	 { (char *)"gr_sig_source_f_sptr___deref__", _wrap_gr_sig_source_f_sptr___deref__, METH_VARARGS, (char *)"gr_sig_source_f_sptr___deref__(gr_sig_source_f_sptr self)"},
	 { (char *)"delete_gr_sig_source_f_sptr", _wrap_delete_gr_sig_source_f_sptr, METH_VARARGS, (char *)"delete_gr_sig_source_f_sptr(gr_sig_source_f_sptr self)"},
	 { (char *)"gr_sig_source_f_sptr_sampling_freq", _wrap_gr_sig_source_f_sptr_sampling_freq, METH_VARARGS, (char *)"gr_sig_source_f_sptr_sampling_freq(gr_sig_source_f_sptr self) -> double"},
	 { (char *)"gr_sig_source_f_sptr_waveform", _wrap_gr_sig_source_f_sptr_waveform, METH_VARARGS, (char *)"gr_sig_source_f_sptr_waveform(gr_sig_source_f_sptr self) -> gr_waveform_t"},
	 { (char *)"gr_sig_source_f_sptr_frequency", _wrap_gr_sig_source_f_sptr_frequency, METH_VARARGS, (char *)"gr_sig_source_f_sptr_frequency(gr_sig_source_f_sptr self) -> double"},
	 { (char *)"gr_sig_source_f_sptr_amplitude", _wrap_gr_sig_source_f_sptr_amplitude, METH_VARARGS, (char *)"gr_sig_source_f_sptr_amplitude(gr_sig_source_f_sptr self) -> double"},
	 { (char *)"gr_sig_source_f_sptr_offset", _wrap_gr_sig_source_f_sptr_offset, METH_VARARGS, (char *)"gr_sig_source_f_sptr_offset(gr_sig_source_f_sptr self) -> float"},
	 { (char *)"gr_sig_source_f_sptr_set_sampling_freq", (PyCFunction) _wrap_gr_sig_source_f_sptr_set_sampling_freq, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_f_sptr_set_sampling_freq(gr_sig_source_f_sptr self, double sampling_freq)"},
	 { (char *)"gr_sig_source_f_sptr_set_waveform", (PyCFunction) _wrap_gr_sig_source_f_sptr_set_waveform, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_f_sptr_set_waveform(gr_sig_source_f_sptr self, gr_waveform_t waveform)"},
	 { (char *)"gr_sig_source_f_sptr_set_frequency", (PyCFunction) _wrap_gr_sig_source_f_sptr_set_frequency, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_f_sptr_set_frequency(gr_sig_source_f_sptr self, double frequency)"},
	 { (char *)"gr_sig_source_f_sptr_set_amplitude", (PyCFunction) _wrap_gr_sig_source_f_sptr_set_amplitude, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_f_sptr_set_amplitude(gr_sig_source_f_sptr self, double ampl)"},
	 { (char *)"gr_sig_source_f_sptr_set_offset", (PyCFunction) _wrap_gr_sig_source_f_sptr_set_offset, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_f_sptr_set_offset(gr_sig_source_f_sptr self, float offset)"},
	 { (char *)"gr_sig_source_f_sptr_history", _wrap_gr_sig_source_f_sptr_history, METH_VARARGS, (char *)"gr_sig_source_f_sptr_history(gr_sig_source_f_sptr self) -> unsigned int"},
	 { (char *)"gr_sig_source_f_sptr_output_multiple", _wrap_gr_sig_source_f_sptr_output_multiple, METH_VARARGS, (char *)"gr_sig_source_f_sptr_output_multiple(gr_sig_source_f_sptr self) -> int"},
	 { (char *)"gr_sig_source_f_sptr_relative_rate", _wrap_gr_sig_source_f_sptr_relative_rate, METH_VARARGS, (char *)"gr_sig_source_f_sptr_relative_rate(gr_sig_source_f_sptr self) -> double"},
	 { (char *)"gr_sig_source_f_sptr_start", _wrap_gr_sig_source_f_sptr_start, METH_VARARGS, (char *)"gr_sig_source_f_sptr_start(gr_sig_source_f_sptr self) -> bool"},
	 { (char *)"gr_sig_source_f_sptr_stop", _wrap_gr_sig_source_f_sptr_stop, METH_VARARGS, (char *)"gr_sig_source_f_sptr_stop(gr_sig_source_f_sptr self) -> bool"},
	 { (char *)"gr_sig_source_f_sptr_nitems_read", (PyCFunction) _wrap_gr_sig_source_f_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_f_sptr_nitems_read(gr_sig_source_f_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sig_source_f_sptr_nitems_written", (PyCFunction) _wrap_gr_sig_source_f_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_f_sptr_nitems_written(gr_sig_source_f_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sig_source_f_sptr_detail", _wrap_gr_sig_source_f_sptr_detail, METH_VARARGS, (char *)"gr_sig_source_f_sptr_detail(gr_sig_source_f_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sig_source_f_sptr_set_detail", (PyCFunction) _wrap_gr_sig_source_f_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_f_sptr_set_detail(gr_sig_source_f_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sig_source_f_sptr_name", _wrap_gr_sig_source_f_sptr_name, METH_VARARGS, (char *)"gr_sig_source_f_sptr_name(gr_sig_source_f_sptr self) -> string"},
	 { (char *)"gr_sig_source_f_sptr_input_signature", _wrap_gr_sig_source_f_sptr_input_signature, METH_VARARGS, (char *)"gr_sig_source_f_sptr_input_signature(gr_sig_source_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sig_source_f_sptr_output_signature", _wrap_gr_sig_source_f_sptr_output_signature, METH_VARARGS, (char *)"gr_sig_source_f_sptr_output_signature(gr_sig_source_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sig_source_f_sptr_unique_id", _wrap_gr_sig_source_f_sptr_unique_id, METH_VARARGS, (char *)"gr_sig_source_f_sptr_unique_id(gr_sig_source_f_sptr self) -> long"},
	 { (char *)"gr_sig_source_f_sptr_to_basic_block", _wrap_gr_sig_source_f_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sig_source_f_sptr_to_basic_block(gr_sig_source_f_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sig_source_f_sptr_check_topology", (PyCFunction) _wrap_gr_sig_source_f_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_f_sptr_check_topology(gr_sig_source_f_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sig_source_f_sptr_swigregister", gr_sig_source_f_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sig_source_f", (PyCFunction) _wrap_sig_source_f, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"sig_source_f(double sampling_freq, gr_waveform_t waveform, double wave_freq, \n"
		"    double ampl, float offset = 0) -> gr_sig_source_f_sptr\n"
		""},
	 { (char *)"new_gr_sig_source_c_sptr", _wrap_new_gr_sig_source_c_sptr, METH_VARARGS, (char *)"\n"
		"gr_sig_source_c_sptr()\n"
		"new_gr_sig_source_c_sptr( p) -> gr_sig_source_c_sptr\n"
		""},
	 { (char *)"gr_sig_source_c_sptr___deref__", _wrap_gr_sig_source_c_sptr___deref__, METH_VARARGS, (char *)"gr_sig_source_c_sptr___deref__(gr_sig_source_c_sptr self)"},
	 { (char *)"delete_gr_sig_source_c_sptr", _wrap_delete_gr_sig_source_c_sptr, METH_VARARGS, (char *)"delete_gr_sig_source_c_sptr(gr_sig_source_c_sptr self)"},
	 { (char *)"gr_sig_source_c_sptr_sampling_freq", _wrap_gr_sig_source_c_sptr_sampling_freq, METH_VARARGS, (char *)"gr_sig_source_c_sptr_sampling_freq(gr_sig_source_c_sptr self) -> double"},
	 { (char *)"gr_sig_source_c_sptr_waveform", _wrap_gr_sig_source_c_sptr_waveform, METH_VARARGS, (char *)"gr_sig_source_c_sptr_waveform(gr_sig_source_c_sptr self) -> gr_waveform_t"},
	 { (char *)"gr_sig_source_c_sptr_frequency", _wrap_gr_sig_source_c_sptr_frequency, METH_VARARGS, (char *)"gr_sig_source_c_sptr_frequency(gr_sig_source_c_sptr self) -> double"},
	 { (char *)"gr_sig_source_c_sptr_amplitude", _wrap_gr_sig_source_c_sptr_amplitude, METH_VARARGS, (char *)"gr_sig_source_c_sptr_amplitude(gr_sig_source_c_sptr self) -> double"},
	 { (char *)"gr_sig_source_c_sptr_offset", _wrap_gr_sig_source_c_sptr_offset, METH_VARARGS, (char *)"gr_sig_source_c_sptr_offset(gr_sig_source_c_sptr self) -> gr_complex"},
	 { (char *)"gr_sig_source_c_sptr_set_sampling_freq", (PyCFunction) _wrap_gr_sig_source_c_sptr_set_sampling_freq, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_c_sptr_set_sampling_freq(gr_sig_source_c_sptr self, double sampling_freq)"},
	 { (char *)"gr_sig_source_c_sptr_set_waveform", (PyCFunction) _wrap_gr_sig_source_c_sptr_set_waveform, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_c_sptr_set_waveform(gr_sig_source_c_sptr self, gr_waveform_t waveform)"},
	 { (char *)"gr_sig_source_c_sptr_set_frequency", (PyCFunction) _wrap_gr_sig_source_c_sptr_set_frequency, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_c_sptr_set_frequency(gr_sig_source_c_sptr self, double frequency)"},
	 { (char *)"gr_sig_source_c_sptr_set_amplitude", (PyCFunction) _wrap_gr_sig_source_c_sptr_set_amplitude, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_c_sptr_set_amplitude(gr_sig_source_c_sptr self, double ampl)"},
	 { (char *)"gr_sig_source_c_sptr_set_offset", (PyCFunction) _wrap_gr_sig_source_c_sptr_set_offset, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_c_sptr_set_offset(gr_sig_source_c_sptr self, gr_complex offset)"},
	 { (char *)"gr_sig_source_c_sptr_history", _wrap_gr_sig_source_c_sptr_history, METH_VARARGS, (char *)"gr_sig_source_c_sptr_history(gr_sig_source_c_sptr self) -> unsigned int"},
	 { (char *)"gr_sig_source_c_sptr_output_multiple", _wrap_gr_sig_source_c_sptr_output_multiple, METH_VARARGS, (char *)"gr_sig_source_c_sptr_output_multiple(gr_sig_source_c_sptr self) -> int"},
	 { (char *)"gr_sig_source_c_sptr_relative_rate", _wrap_gr_sig_source_c_sptr_relative_rate, METH_VARARGS, (char *)"gr_sig_source_c_sptr_relative_rate(gr_sig_source_c_sptr self) -> double"},
	 { (char *)"gr_sig_source_c_sptr_start", _wrap_gr_sig_source_c_sptr_start, METH_VARARGS, (char *)"gr_sig_source_c_sptr_start(gr_sig_source_c_sptr self) -> bool"},
	 { (char *)"gr_sig_source_c_sptr_stop", _wrap_gr_sig_source_c_sptr_stop, METH_VARARGS, (char *)"gr_sig_source_c_sptr_stop(gr_sig_source_c_sptr self) -> bool"},
	 { (char *)"gr_sig_source_c_sptr_nitems_read", (PyCFunction) _wrap_gr_sig_source_c_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_c_sptr_nitems_read(gr_sig_source_c_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sig_source_c_sptr_nitems_written", (PyCFunction) _wrap_gr_sig_source_c_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_c_sptr_nitems_written(gr_sig_source_c_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sig_source_c_sptr_detail", _wrap_gr_sig_source_c_sptr_detail, METH_VARARGS, (char *)"gr_sig_source_c_sptr_detail(gr_sig_source_c_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sig_source_c_sptr_set_detail", (PyCFunction) _wrap_gr_sig_source_c_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_c_sptr_set_detail(gr_sig_source_c_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sig_source_c_sptr_name", _wrap_gr_sig_source_c_sptr_name, METH_VARARGS, (char *)"gr_sig_source_c_sptr_name(gr_sig_source_c_sptr self) -> string"},
	 { (char *)"gr_sig_source_c_sptr_input_signature", _wrap_gr_sig_source_c_sptr_input_signature, METH_VARARGS, (char *)"gr_sig_source_c_sptr_input_signature(gr_sig_source_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sig_source_c_sptr_output_signature", _wrap_gr_sig_source_c_sptr_output_signature, METH_VARARGS, (char *)"gr_sig_source_c_sptr_output_signature(gr_sig_source_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sig_source_c_sptr_unique_id", _wrap_gr_sig_source_c_sptr_unique_id, METH_VARARGS, (char *)"gr_sig_source_c_sptr_unique_id(gr_sig_source_c_sptr self) -> long"},
	 { (char *)"gr_sig_source_c_sptr_to_basic_block", _wrap_gr_sig_source_c_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sig_source_c_sptr_to_basic_block(gr_sig_source_c_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sig_source_c_sptr_check_topology", (PyCFunction) _wrap_gr_sig_source_c_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sig_source_c_sptr_check_topology(gr_sig_source_c_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sig_source_c_sptr_swigregister", gr_sig_source_c_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sig_source_c", (PyCFunction) _wrap_sig_source_c, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"sig_source_c(double sampling_freq, gr_waveform_t waveform, double wave_freq, \n"
		"    double ampl, gr_complex offset = 0) -> gr_sig_source_c_sptr\n"
		""},
	 { (char *)"new_gr_probe_signal_b_sptr", _wrap_new_gr_probe_signal_b_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_b_sptr()\n"
		"new_gr_probe_signal_b_sptr( p) -> gr_probe_signal_b_sptr\n"
		""},
	 { (char *)"gr_probe_signal_b_sptr___deref__", _wrap_gr_probe_signal_b_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_b_sptr___deref__(gr_probe_signal_b_sptr self)"},
	 { (char *)"delete_gr_probe_signal_b_sptr", _wrap_delete_gr_probe_signal_b_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_b_sptr(gr_probe_signal_b_sptr self)"},
	 { (char *)"gr_probe_signal_b_sptr_level", _wrap_gr_probe_signal_b_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_level(gr_probe_signal_b_sptr self) -> unsigned char"},
	 { (char *)"gr_probe_signal_b_sptr_history", _wrap_gr_probe_signal_b_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_history(gr_probe_signal_b_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_b_sptr_output_multiple", _wrap_gr_probe_signal_b_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_output_multiple(gr_probe_signal_b_sptr self) -> int"},
	 { (char *)"gr_probe_signal_b_sptr_relative_rate", _wrap_gr_probe_signal_b_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_relative_rate(gr_probe_signal_b_sptr self) -> double"},
	 { (char *)"gr_probe_signal_b_sptr_start", _wrap_gr_probe_signal_b_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_start(gr_probe_signal_b_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_b_sptr_stop", _wrap_gr_probe_signal_b_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_stop(gr_probe_signal_b_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_b_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_b_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_b_sptr_nitems_read(gr_probe_signal_b_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_b_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_b_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_b_sptr_nitems_written(gr_probe_signal_b_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_b_sptr_detail", _wrap_gr_probe_signal_b_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_detail(gr_probe_signal_b_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_b_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_b_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_b_sptr_set_detail(gr_probe_signal_b_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_b_sptr_name", _wrap_gr_probe_signal_b_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_name(gr_probe_signal_b_sptr self) -> string"},
	 { (char *)"gr_probe_signal_b_sptr_input_signature", _wrap_gr_probe_signal_b_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_input_signature(gr_probe_signal_b_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_b_sptr_output_signature", _wrap_gr_probe_signal_b_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_output_signature(gr_probe_signal_b_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_b_sptr_unique_id", _wrap_gr_probe_signal_b_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_unique_id(gr_probe_signal_b_sptr self) -> long"},
	 { (char *)"gr_probe_signal_b_sptr_to_basic_block", _wrap_gr_probe_signal_b_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_b_sptr_to_basic_block(gr_probe_signal_b_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_b_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_b_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_b_sptr_check_topology(gr_probe_signal_b_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_b_sptr_swigregister", gr_probe_signal_b_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_b", _wrap_probe_signal_b, METH_VARARGS, (char *)"probe_signal_b() -> gr_probe_signal_b_sptr"},
	 { (char *)"new_gr_probe_signal_s_sptr", _wrap_new_gr_probe_signal_s_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_s_sptr()\n"
		"new_gr_probe_signal_s_sptr( p) -> gr_probe_signal_s_sptr\n"
		""},
	 { (char *)"gr_probe_signal_s_sptr___deref__", _wrap_gr_probe_signal_s_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_s_sptr___deref__(gr_probe_signal_s_sptr self)"},
	 { (char *)"delete_gr_probe_signal_s_sptr", _wrap_delete_gr_probe_signal_s_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_s_sptr(gr_probe_signal_s_sptr self)"},
	 { (char *)"gr_probe_signal_s_sptr_level", _wrap_gr_probe_signal_s_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_level(gr_probe_signal_s_sptr self) -> short"},
	 { (char *)"gr_probe_signal_s_sptr_history", _wrap_gr_probe_signal_s_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_history(gr_probe_signal_s_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_s_sptr_output_multiple", _wrap_gr_probe_signal_s_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_output_multiple(gr_probe_signal_s_sptr self) -> int"},
	 { (char *)"gr_probe_signal_s_sptr_relative_rate", _wrap_gr_probe_signal_s_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_relative_rate(gr_probe_signal_s_sptr self) -> double"},
	 { (char *)"gr_probe_signal_s_sptr_start", _wrap_gr_probe_signal_s_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_start(gr_probe_signal_s_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_s_sptr_stop", _wrap_gr_probe_signal_s_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_stop(gr_probe_signal_s_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_s_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_s_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_s_sptr_nitems_read(gr_probe_signal_s_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_s_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_s_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_s_sptr_nitems_written(gr_probe_signal_s_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_s_sptr_detail", _wrap_gr_probe_signal_s_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_detail(gr_probe_signal_s_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_s_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_s_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_s_sptr_set_detail(gr_probe_signal_s_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_s_sptr_name", _wrap_gr_probe_signal_s_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_name(gr_probe_signal_s_sptr self) -> string"},
	 { (char *)"gr_probe_signal_s_sptr_input_signature", _wrap_gr_probe_signal_s_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_input_signature(gr_probe_signal_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_s_sptr_output_signature", _wrap_gr_probe_signal_s_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_output_signature(gr_probe_signal_s_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_s_sptr_unique_id", _wrap_gr_probe_signal_s_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_unique_id(gr_probe_signal_s_sptr self) -> long"},
	 { (char *)"gr_probe_signal_s_sptr_to_basic_block", _wrap_gr_probe_signal_s_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_s_sptr_to_basic_block(gr_probe_signal_s_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_s_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_s_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_s_sptr_check_topology(gr_probe_signal_s_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_s_sptr_swigregister", gr_probe_signal_s_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_s", _wrap_probe_signal_s, METH_VARARGS, (char *)"probe_signal_s() -> gr_probe_signal_s_sptr"},
	 { (char *)"new_gr_probe_signal_i_sptr", _wrap_new_gr_probe_signal_i_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_i_sptr()\n"
		"new_gr_probe_signal_i_sptr( p) -> gr_probe_signal_i_sptr\n"
		""},
	 { (char *)"gr_probe_signal_i_sptr___deref__", _wrap_gr_probe_signal_i_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_i_sptr___deref__(gr_probe_signal_i_sptr self)"},
	 { (char *)"delete_gr_probe_signal_i_sptr", _wrap_delete_gr_probe_signal_i_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_i_sptr(gr_probe_signal_i_sptr self)"},
	 { (char *)"gr_probe_signal_i_sptr_level", _wrap_gr_probe_signal_i_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_level(gr_probe_signal_i_sptr self) -> int"},
	 { (char *)"gr_probe_signal_i_sptr_history", _wrap_gr_probe_signal_i_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_history(gr_probe_signal_i_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_i_sptr_output_multiple", _wrap_gr_probe_signal_i_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_output_multiple(gr_probe_signal_i_sptr self) -> int"},
	 { (char *)"gr_probe_signal_i_sptr_relative_rate", _wrap_gr_probe_signal_i_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_relative_rate(gr_probe_signal_i_sptr self) -> double"},
	 { (char *)"gr_probe_signal_i_sptr_start", _wrap_gr_probe_signal_i_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_start(gr_probe_signal_i_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_i_sptr_stop", _wrap_gr_probe_signal_i_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_stop(gr_probe_signal_i_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_i_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_i_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_i_sptr_nitems_read(gr_probe_signal_i_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_i_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_i_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_i_sptr_nitems_written(gr_probe_signal_i_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_i_sptr_detail", _wrap_gr_probe_signal_i_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_detail(gr_probe_signal_i_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_i_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_i_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_i_sptr_set_detail(gr_probe_signal_i_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_i_sptr_name", _wrap_gr_probe_signal_i_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_name(gr_probe_signal_i_sptr self) -> string"},
	 { (char *)"gr_probe_signal_i_sptr_input_signature", _wrap_gr_probe_signal_i_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_input_signature(gr_probe_signal_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_i_sptr_output_signature", _wrap_gr_probe_signal_i_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_output_signature(gr_probe_signal_i_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_i_sptr_unique_id", _wrap_gr_probe_signal_i_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_unique_id(gr_probe_signal_i_sptr self) -> long"},
	 { (char *)"gr_probe_signal_i_sptr_to_basic_block", _wrap_gr_probe_signal_i_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_i_sptr_to_basic_block(gr_probe_signal_i_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_i_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_i_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_i_sptr_check_topology(gr_probe_signal_i_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_i_sptr_swigregister", gr_probe_signal_i_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_i", _wrap_probe_signal_i, METH_VARARGS, (char *)"probe_signal_i() -> gr_probe_signal_i_sptr"},
	 { (char *)"new_gr_probe_signal_f_sptr", _wrap_new_gr_probe_signal_f_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_f_sptr()\n"
		"new_gr_probe_signal_f_sptr( p) -> gr_probe_signal_f_sptr\n"
		""},
	 { (char *)"gr_probe_signal_f_sptr___deref__", _wrap_gr_probe_signal_f_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_f_sptr___deref__(gr_probe_signal_f_sptr self)"},
	 { (char *)"delete_gr_probe_signal_f_sptr", _wrap_delete_gr_probe_signal_f_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_f_sptr(gr_probe_signal_f_sptr self)"},
	 { (char *)"gr_probe_signal_f_sptr_level", _wrap_gr_probe_signal_f_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_level(gr_probe_signal_f_sptr self) -> float"},
	 { (char *)"gr_probe_signal_f_sptr_history", _wrap_gr_probe_signal_f_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_history(gr_probe_signal_f_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_f_sptr_output_multiple", _wrap_gr_probe_signal_f_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_output_multiple(gr_probe_signal_f_sptr self) -> int"},
	 { (char *)"gr_probe_signal_f_sptr_relative_rate", _wrap_gr_probe_signal_f_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_relative_rate(gr_probe_signal_f_sptr self) -> double"},
	 { (char *)"gr_probe_signal_f_sptr_start", _wrap_gr_probe_signal_f_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_start(gr_probe_signal_f_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_f_sptr_stop", _wrap_gr_probe_signal_f_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_stop(gr_probe_signal_f_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_f_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_f_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_f_sptr_nitems_read(gr_probe_signal_f_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_f_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_f_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_f_sptr_nitems_written(gr_probe_signal_f_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_f_sptr_detail", _wrap_gr_probe_signal_f_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_detail(gr_probe_signal_f_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_f_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_f_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_f_sptr_set_detail(gr_probe_signal_f_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_f_sptr_name", _wrap_gr_probe_signal_f_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_name(gr_probe_signal_f_sptr self) -> string"},
	 { (char *)"gr_probe_signal_f_sptr_input_signature", _wrap_gr_probe_signal_f_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_input_signature(gr_probe_signal_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_f_sptr_output_signature", _wrap_gr_probe_signal_f_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_output_signature(gr_probe_signal_f_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_f_sptr_unique_id", _wrap_gr_probe_signal_f_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_unique_id(gr_probe_signal_f_sptr self) -> long"},
	 { (char *)"gr_probe_signal_f_sptr_to_basic_block", _wrap_gr_probe_signal_f_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_f_sptr_to_basic_block(gr_probe_signal_f_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_f_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_f_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_f_sptr_check_topology(gr_probe_signal_f_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_f_sptr_swigregister", gr_probe_signal_f_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_f", _wrap_probe_signal_f, METH_VARARGS, (char *)"probe_signal_f() -> gr_probe_signal_f_sptr"},
	 { (char *)"new_gr_probe_signal_c_sptr", _wrap_new_gr_probe_signal_c_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_c_sptr()\n"
		"new_gr_probe_signal_c_sptr( p) -> gr_probe_signal_c_sptr\n"
		""},
	 { (char *)"gr_probe_signal_c_sptr___deref__", _wrap_gr_probe_signal_c_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_c_sptr___deref__(gr_probe_signal_c_sptr self)"},
	 { (char *)"delete_gr_probe_signal_c_sptr", _wrap_delete_gr_probe_signal_c_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_c_sptr(gr_probe_signal_c_sptr self)"},
	 { (char *)"gr_probe_signal_c_sptr_level", _wrap_gr_probe_signal_c_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_level(gr_probe_signal_c_sptr self) -> gr_complex"},
	 { (char *)"gr_probe_signal_c_sptr_history", _wrap_gr_probe_signal_c_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_history(gr_probe_signal_c_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_c_sptr_output_multiple", _wrap_gr_probe_signal_c_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_output_multiple(gr_probe_signal_c_sptr self) -> int"},
	 { (char *)"gr_probe_signal_c_sptr_relative_rate", _wrap_gr_probe_signal_c_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_relative_rate(gr_probe_signal_c_sptr self) -> double"},
	 { (char *)"gr_probe_signal_c_sptr_start", _wrap_gr_probe_signal_c_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_start(gr_probe_signal_c_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_c_sptr_stop", _wrap_gr_probe_signal_c_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_stop(gr_probe_signal_c_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_c_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_c_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_c_sptr_nitems_read(gr_probe_signal_c_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_c_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_c_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_c_sptr_nitems_written(gr_probe_signal_c_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_c_sptr_detail", _wrap_gr_probe_signal_c_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_detail(gr_probe_signal_c_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_c_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_c_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_c_sptr_set_detail(gr_probe_signal_c_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_c_sptr_name", _wrap_gr_probe_signal_c_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_name(gr_probe_signal_c_sptr self) -> string"},
	 { (char *)"gr_probe_signal_c_sptr_input_signature", _wrap_gr_probe_signal_c_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_input_signature(gr_probe_signal_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_c_sptr_output_signature", _wrap_gr_probe_signal_c_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_output_signature(gr_probe_signal_c_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_c_sptr_unique_id", _wrap_gr_probe_signal_c_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_unique_id(gr_probe_signal_c_sptr self) -> long"},
	 { (char *)"gr_probe_signal_c_sptr_to_basic_block", _wrap_gr_probe_signal_c_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_c_sptr_to_basic_block(gr_probe_signal_c_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_c_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_c_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_c_sptr_check_topology(gr_probe_signal_c_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_c_sptr_swigregister", gr_probe_signal_c_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_c", _wrap_probe_signal_c, METH_VARARGS, (char *)"probe_signal_c() -> gr_probe_signal_c_sptr"},
	 { (char *)"new_gr_probe_signal_vb_sptr", _wrap_new_gr_probe_signal_vb_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_vb_sptr()\n"
		"new_gr_probe_signal_vb_sptr( p) -> gr_probe_signal_vb_sptr\n"
		""},
	 { (char *)"gr_probe_signal_vb_sptr___deref__", _wrap_gr_probe_signal_vb_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr___deref__(gr_probe_signal_vb_sptr self)"},
	 { (char *)"delete_gr_probe_signal_vb_sptr", _wrap_delete_gr_probe_signal_vb_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_vb_sptr(gr_probe_signal_vb_sptr self)"},
	 { (char *)"gr_probe_signal_vb_sptr_level", _wrap_gr_probe_signal_vb_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_level(gr_probe_signal_vb_sptr self) -> __dummy_0__"},
	 { (char *)"gr_probe_signal_vb_sptr_history", _wrap_gr_probe_signal_vb_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_history(gr_probe_signal_vb_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_vb_sptr_output_multiple", _wrap_gr_probe_signal_vb_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_output_multiple(gr_probe_signal_vb_sptr self) -> int"},
	 { (char *)"gr_probe_signal_vb_sptr_relative_rate", _wrap_gr_probe_signal_vb_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_relative_rate(gr_probe_signal_vb_sptr self) -> double"},
	 { (char *)"gr_probe_signal_vb_sptr_start", _wrap_gr_probe_signal_vb_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_start(gr_probe_signal_vb_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vb_sptr_stop", _wrap_gr_probe_signal_vb_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_stop(gr_probe_signal_vb_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vb_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_vb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vb_sptr_nitems_read(gr_probe_signal_vb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_vb_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_vb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vb_sptr_nitems_written(gr_probe_signal_vb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_vb_sptr_detail", _wrap_gr_probe_signal_vb_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_detail(gr_probe_signal_vb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_vb_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_vb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vb_sptr_set_detail(gr_probe_signal_vb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_vb_sptr_name", _wrap_gr_probe_signal_vb_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_name(gr_probe_signal_vb_sptr self) -> string"},
	 { (char *)"gr_probe_signal_vb_sptr_input_signature", _wrap_gr_probe_signal_vb_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_input_signature(gr_probe_signal_vb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vb_sptr_output_signature", _wrap_gr_probe_signal_vb_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_output_signature(gr_probe_signal_vb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vb_sptr_unique_id", _wrap_gr_probe_signal_vb_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_unique_id(gr_probe_signal_vb_sptr self) -> long"},
	 { (char *)"gr_probe_signal_vb_sptr_to_basic_block", _wrap_gr_probe_signal_vb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_vb_sptr_to_basic_block(gr_probe_signal_vb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_vb_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_vb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vb_sptr_check_topology(gr_probe_signal_vb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_vb_sptr_swigregister", gr_probe_signal_vb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_vb", (PyCFunction) _wrap_probe_signal_vb, METH_VARARGS | METH_KEYWORDS, (char *)"probe_signal_vb(size_t size) -> gr_probe_signal_vb_sptr"},
	 { (char *)"new_gr_probe_signal_vs_sptr", _wrap_new_gr_probe_signal_vs_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_vs_sptr()\n"
		"new_gr_probe_signal_vs_sptr( p) -> gr_probe_signal_vs_sptr\n"
		""},
	 { (char *)"gr_probe_signal_vs_sptr___deref__", _wrap_gr_probe_signal_vs_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr___deref__(gr_probe_signal_vs_sptr self)"},
	 { (char *)"delete_gr_probe_signal_vs_sptr", _wrap_delete_gr_probe_signal_vs_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_vs_sptr(gr_probe_signal_vs_sptr self)"},
	 { (char *)"gr_probe_signal_vs_sptr_level", _wrap_gr_probe_signal_vs_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_level(gr_probe_signal_vs_sptr self) -> __dummy_2__"},
	 { (char *)"gr_probe_signal_vs_sptr_history", _wrap_gr_probe_signal_vs_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_history(gr_probe_signal_vs_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_vs_sptr_output_multiple", _wrap_gr_probe_signal_vs_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_output_multiple(gr_probe_signal_vs_sptr self) -> int"},
	 { (char *)"gr_probe_signal_vs_sptr_relative_rate", _wrap_gr_probe_signal_vs_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_relative_rate(gr_probe_signal_vs_sptr self) -> double"},
	 { (char *)"gr_probe_signal_vs_sptr_start", _wrap_gr_probe_signal_vs_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_start(gr_probe_signal_vs_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vs_sptr_stop", _wrap_gr_probe_signal_vs_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_stop(gr_probe_signal_vs_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vs_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_vs_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vs_sptr_nitems_read(gr_probe_signal_vs_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_vs_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_vs_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vs_sptr_nitems_written(gr_probe_signal_vs_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_vs_sptr_detail", _wrap_gr_probe_signal_vs_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_detail(gr_probe_signal_vs_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_vs_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_vs_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vs_sptr_set_detail(gr_probe_signal_vs_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_vs_sptr_name", _wrap_gr_probe_signal_vs_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_name(gr_probe_signal_vs_sptr self) -> string"},
	 { (char *)"gr_probe_signal_vs_sptr_input_signature", _wrap_gr_probe_signal_vs_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_input_signature(gr_probe_signal_vs_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vs_sptr_output_signature", _wrap_gr_probe_signal_vs_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_output_signature(gr_probe_signal_vs_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vs_sptr_unique_id", _wrap_gr_probe_signal_vs_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_unique_id(gr_probe_signal_vs_sptr self) -> long"},
	 { (char *)"gr_probe_signal_vs_sptr_to_basic_block", _wrap_gr_probe_signal_vs_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_vs_sptr_to_basic_block(gr_probe_signal_vs_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_vs_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_vs_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vs_sptr_check_topology(gr_probe_signal_vs_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_vs_sptr_swigregister", gr_probe_signal_vs_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_vs", (PyCFunction) _wrap_probe_signal_vs, METH_VARARGS | METH_KEYWORDS, (char *)"probe_signal_vs(size_t size) -> gr_probe_signal_vs_sptr"},
	 { (char *)"new_gr_probe_signal_vi_sptr", _wrap_new_gr_probe_signal_vi_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_vi_sptr()\n"
		"new_gr_probe_signal_vi_sptr( p) -> gr_probe_signal_vi_sptr\n"
		""},
	 { (char *)"gr_probe_signal_vi_sptr___deref__", _wrap_gr_probe_signal_vi_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr___deref__(gr_probe_signal_vi_sptr self)"},
	 { (char *)"delete_gr_probe_signal_vi_sptr", _wrap_delete_gr_probe_signal_vi_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_vi_sptr(gr_probe_signal_vi_sptr self)"},
	 { (char *)"gr_probe_signal_vi_sptr_level", _wrap_gr_probe_signal_vi_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_level(gr_probe_signal_vi_sptr self) -> __dummy_3__"},
	 { (char *)"gr_probe_signal_vi_sptr_history", _wrap_gr_probe_signal_vi_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_history(gr_probe_signal_vi_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_vi_sptr_output_multiple", _wrap_gr_probe_signal_vi_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_output_multiple(gr_probe_signal_vi_sptr self) -> int"},
	 { (char *)"gr_probe_signal_vi_sptr_relative_rate", _wrap_gr_probe_signal_vi_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_relative_rate(gr_probe_signal_vi_sptr self) -> double"},
	 { (char *)"gr_probe_signal_vi_sptr_start", _wrap_gr_probe_signal_vi_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_start(gr_probe_signal_vi_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vi_sptr_stop", _wrap_gr_probe_signal_vi_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_stop(gr_probe_signal_vi_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vi_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_vi_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vi_sptr_nitems_read(gr_probe_signal_vi_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_vi_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_vi_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vi_sptr_nitems_written(gr_probe_signal_vi_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_vi_sptr_detail", _wrap_gr_probe_signal_vi_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_detail(gr_probe_signal_vi_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_vi_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_vi_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vi_sptr_set_detail(gr_probe_signal_vi_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_vi_sptr_name", _wrap_gr_probe_signal_vi_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_name(gr_probe_signal_vi_sptr self) -> string"},
	 { (char *)"gr_probe_signal_vi_sptr_input_signature", _wrap_gr_probe_signal_vi_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_input_signature(gr_probe_signal_vi_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vi_sptr_output_signature", _wrap_gr_probe_signal_vi_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_output_signature(gr_probe_signal_vi_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vi_sptr_unique_id", _wrap_gr_probe_signal_vi_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_unique_id(gr_probe_signal_vi_sptr self) -> long"},
	 { (char *)"gr_probe_signal_vi_sptr_to_basic_block", _wrap_gr_probe_signal_vi_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_vi_sptr_to_basic_block(gr_probe_signal_vi_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_vi_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_vi_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vi_sptr_check_topology(gr_probe_signal_vi_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_vi_sptr_swigregister", gr_probe_signal_vi_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_vi", (PyCFunction) _wrap_probe_signal_vi, METH_VARARGS | METH_KEYWORDS, (char *)"probe_signal_vi(size_t size) -> gr_probe_signal_vi_sptr"},
	 { (char *)"new_gr_probe_signal_vf_sptr", _wrap_new_gr_probe_signal_vf_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_vf_sptr()\n"
		"new_gr_probe_signal_vf_sptr( p) -> gr_probe_signal_vf_sptr\n"
		""},
	 { (char *)"gr_probe_signal_vf_sptr___deref__", _wrap_gr_probe_signal_vf_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr___deref__(gr_probe_signal_vf_sptr self)"},
	 { (char *)"delete_gr_probe_signal_vf_sptr", _wrap_delete_gr_probe_signal_vf_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_vf_sptr(gr_probe_signal_vf_sptr self)"},
	 { (char *)"gr_probe_signal_vf_sptr_level", _wrap_gr_probe_signal_vf_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_level(gr_probe_signal_vf_sptr self) -> __dummy_4__"},
	 { (char *)"gr_probe_signal_vf_sptr_history", _wrap_gr_probe_signal_vf_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_history(gr_probe_signal_vf_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_vf_sptr_output_multiple", _wrap_gr_probe_signal_vf_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_output_multiple(gr_probe_signal_vf_sptr self) -> int"},
	 { (char *)"gr_probe_signal_vf_sptr_relative_rate", _wrap_gr_probe_signal_vf_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_relative_rate(gr_probe_signal_vf_sptr self) -> double"},
	 { (char *)"gr_probe_signal_vf_sptr_start", _wrap_gr_probe_signal_vf_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_start(gr_probe_signal_vf_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vf_sptr_stop", _wrap_gr_probe_signal_vf_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_stop(gr_probe_signal_vf_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vf_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_vf_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vf_sptr_nitems_read(gr_probe_signal_vf_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_vf_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_vf_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vf_sptr_nitems_written(gr_probe_signal_vf_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_vf_sptr_detail", _wrap_gr_probe_signal_vf_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_detail(gr_probe_signal_vf_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_vf_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_vf_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vf_sptr_set_detail(gr_probe_signal_vf_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_vf_sptr_name", _wrap_gr_probe_signal_vf_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_name(gr_probe_signal_vf_sptr self) -> string"},
	 { (char *)"gr_probe_signal_vf_sptr_input_signature", _wrap_gr_probe_signal_vf_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_input_signature(gr_probe_signal_vf_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vf_sptr_output_signature", _wrap_gr_probe_signal_vf_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_output_signature(gr_probe_signal_vf_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vf_sptr_unique_id", _wrap_gr_probe_signal_vf_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_unique_id(gr_probe_signal_vf_sptr self) -> long"},
	 { (char *)"gr_probe_signal_vf_sptr_to_basic_block", _wrap_gr_probe_signal_vf_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_vf_sptr_to_basic_block(gr_probe_signal_vf_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_vf_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_vf_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vf_sptr_check_topology(gr_probe_signal_vf_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_vf_sptr_swigregister", gr_probe_signal_vf_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_vf", (PyCFunction) _wrap_probe_signal_vf, METH_VARARGS | METH_KEYWORDS, (char *)"probe_signal_vf(size_t size) -> gr_probe_signal_vf_sptr"},
	 { (char *)"new_gr_probe_signal_vc_sptr", _wrap_new_gr_probe_signal_vc_sptr, METH_VARARGS, (char *)"\n"
		"gr_probe_signal_vc_sptr()\n"
		"new_gr_probe_signal_vc_sptr( p) -> gr_probe_signal_vc_sptr\n"
		""},
	 { (char *)"gr_probe_signal_vc_sptr___deref__", _wrap_gr_probe_signal_vc_sptr___deref__, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr___deref__(gr_probe_signal_vc_sptr self)"},
	 { (char *)"delete_gr_probe_signal_vc_sptr", _wrap_delete_gr_probe_signal_vc_sptr, METH_VARARGS, (char *)"delete_gr_probe_signal_vc_sptr(gr_probe_signal_vc_sptr self)"},
	 { (char *)"gr_probe_signal_vc_sptr_level", _wrap_gr_probe_signal_vc_sptr_level, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_level(gr_probe_signal_vc_sptr self) -> std::vector<(gr_complex,std::allocator<(gr_complex)>)>"},
	 { (char *)"gr_probe_signal_vc_sptr_history", _wrap_gr_probe_signal_vc_sptr_history, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_history(gr_probe_signal_vc_sptr self) -> unsigned int"},
	 { (char *)"gr_probe_signal_vc_sptr_output_multiple", _wrap_gr_probe_signal_vc_sptr_output_multiple, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_output_multiple(gr_probe_signal_vc_sptr self) -> int"},
	 { (char *)"gr_probe_signal_vc_sptr_relative_rate", _wrap_gr_probe_signal_vc_sptr_relative_rate, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_relative_rate(gr_probe_signal_vc_sptr self) -> double"},
	 { (char *)"gr_probe_signal_vc_sptr_start", _wrap_gr_probe_signal_vc_sptr_start, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_start(gr_probe_signal_vc_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vc_sptr_stop", _wrap_gr_probe_signal_vc_sptr_stop, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_stop(gr_probe_signal_vc_sptr self) -> bool"},
	 { (char *)"gr_probe_signal_vc_sptr_nitems_read", (PyCFunction) _wrap_gr_probe_signal_vc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vc_sptr_nitems_read(gr_probe_signal_vc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_probe_signal_vc_sptr_nitems_written", (PyCFunction) _wrap_gr_probe_signal_vc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vc_sptr_nitems_written(gr_probe_signal_vc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_probe_signal_vc_sptr_detail", _wrap_gr_probe_signal_vc_sptr_detail, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_detail(gr_probe_signal_vc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_probe_signal_vc_sptr_set_detail", (PyCFunction) _wrap_gr_probe_signal_vc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vc_sptr_set_detail(gr_probe_signal_vc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_probe_signal_vc_sptr_name", _wrap_gr_probe_signal_vc_sptr_name, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_name(gr_probe_signal_vc_sptr self) -> string"},
	 { (char *)"gr_probe_signal_vc_sptr_input_signature", _wrap_gr_probe_signal_vc_sptr_input_signature, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_input_signature(gr_probe_signal_vc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vc_sptr_output_signature", _wrap_gr_probe_signal_vc_sptr_output_signature, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_output_signature(gr_probe_signal_vc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_probe_signal_vc_sptr_unique_id", _wrap_gr_probe_signal_vc_sptr_unique_id, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_unique_id(gr_probe_signal_vc_sptr self) -> long"},
	 { (char *)"gr_probe_signal_vc_sptr_to_basic_block", _wrap_gr_probe_signal_vc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_probe_signal_vc_sptr_to_basic_block(gr_probe_signal_vc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_probe_signal_vc_sptr_check_topology", (PyCFunction) _wrap_gr_probe_signal_vc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_probe_signal_vc_sptr_check_topology(gr_probe_signal_vc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_probe_signal_vc_sptr_swigregister", gr_probe_signal_vc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"probe_signal_vc", (PyCFunction) _wrap_probe_signal_vc, METH_VARARGS | METH_KEYWORDS, (char *)"probe_signal_vc(size_t size) -> gr_probe_signal_vc_sptr"},
	 { (char *)"new_gr_add_const_ss_sptr", _wrap_new_gr_add_const_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_const_ss_sptr()\n"
		"new_gr_add_const_ss_sptr( p) -> gr_add_const_ss_sptr\n"
		""},
	 { (char *)"gr_add_const_ss_sptr___deref__", _wrap_gr_add_const_ss_sptr___deref__, METH_VARARGS, (char *)"gr_add_const_ss_sptr___deref__(gr_add_const_ss_sptr self)"},
	 { (char *)"delete_gr_add_const_ss_sptr", _wrap_delete_gr_add_const_ss_sptr, METH_VARARGS, (char *)"delete_gr_add_const_ss_sptr(gr_add_const_ss_sptr self)"},
	 { (char *)"gr_add_const_ss_sptr_k", _wrap_gr_add_const_ss_sptr_k, METH_VARARGS, (char *)"gr_add_const_ss_sptr_k(gr_add_const_ss_sptr self) -> short"},
	 { (char *)"gr_add_const_ss_sptr_set_k", (PyCFunction) _wrap_gr_add_const_ss_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ss_sptr_set_k(gr_add_const_ss_sptr self, short k)"},
	 { (char *)"gr_add_const_ss_sptr_history", _wrap_gr_add_const_ss_sptr_history, METH_VARARGS, (char *)"gr_add_const_ss_sptr_history(gr_add_const_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_add_const_ss_sptr_output_multiple", _wrap_gr_add_const_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_const_ss_sptr_output_multiple(gr_add_const_ss_sptr self) -> int"},
	 { (char *)"gr_add_const_ss_sptr_relative_rate", _wrap_gr_add_const_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_const_ss_sptr_relative_rate(gr_add_const_ss_sptr self) -> double"},
	 { (char *)"gr_add_const_ss_sptr_start", _wrap_gr_add_const_ss_sptr_start, METH_VARARGS, (char *)"gr_add_const_ss_sptr_start(gr_add_const_ss_sptr self) -> bool"},
	 { (char *)"gr_add_const_ss_sptr_stop", _wrap_gr_add_const_ss_sptr_stop, METH_VARARGS, (char *)"gr_add_const_ss_sptr_stop(gr_add_const_ss_sptr self) -> bool"},
	 { (char *)"gr_add_const_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_add_const_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ss_sptr_nitems_read(gr_add_const_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_const_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_add_const_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ss_sptr_nitems_written(gr_add_const_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_const_ss_sptr_detail", _wrap_gr_add_const_ss_sptr_detail, METH_VARARGS, (char *)"gr_add_const_ss_sptr_detail(gr_add_const_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_const_ss_sptr_set_detail", (PyCFunction) _wrap_gr_add_const_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ss_sptr_set_detail(gr_add_const_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_const_ss_sptr_name", _wrap_gr_add_const_ss_sptr_name, METH_VARARGS, (char *)"gr_add_const_ss_sptr_name(gr_add_const_ss_sptr self) -> string"},
	 { (char *)"gr_add_const_ss_sptr_input_signature", _wrap_gr_add_const_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_add_const_ss_sptr_input_signature(gr_add_const_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_ss_sptr_output_signature", _wrap_gr_add_const_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_add_const_ss_sptr_output_signature(gr_add_const_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_ss_sptr_unique_id", _wrap_gr_add_const_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_add_const_ss_sptr_unique_id(gr_add_const_ss_sptr self) -> long"},
	 { (char *)"gr_add_const_ss_sptr_to_basic_block", _wrap_gr_add_const_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_const_ss_sptr_to_basic_block(gr_add_const_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_const_ss_sptr_check_topology", (PyCFunction) _wrap_gr_add_const_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ss_sptr_check_topology(gr_add_const_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_const_ss_sptr_swigregister", gr_add_const_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_const_ss", (PyCFunction) _wrap_add_const_ss, METH_VARARGS | METH_KEYWORDS, (char *)"add_const_ss(short k) -> gr_add_const_ss_sptr"},
	 { (char *)"new_gr_add_const_ii_sptr", _wrap_new_gr_add_const_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_const_ii_sptr()\n"
		"new_gr_add_const_ii_sptr( p) -> gr_add_const_ii_sptr\n"
		""},
	 { (char *)"gr_add_const_ii_sptr___deref__", _wrap_gr_add_const_ii_sptr___deref__, METH_VARARGS, (char *)"gr_add_const_ii_sptr___deref__(gr_add_const_ii_sptr self)"},
	 { (char *)"delete_gr_add_const_ii_sptr", _wrap_delete_gr_add_const_ii_sptr, METH_VARARGS, (char *)"delete_gr_add_const_ii_sptr(gr_add_const_ii_sptr self)"},
	 { (char *)"gr_add_const_ii_sptr_k", _wrap_gr_add_const_ii_sptr_k, METH_VARARGS, (char *)"gr_add_const_ii_sptr_k(gr_add_const_ii_sptr self) -> int"},
	 { (char *)"gr_add_const_ii_sptr_set_k", (PyCFunction) _wrap_gr_add_const_ii_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ii_sptr_set_k(gr_add_const_ii_sptr self, int k)"},
	 { (char *)"gr_add_const_ii_sptr_history", _wrap_gr_add_const_ii_sptr_history, METH_VARARGS, (char *)"gr_add_const_ii_sptr_history(gr_add_const_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_add_const_ii_sptr_output_multiple", _wrap_gr_add_const_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_const_ii_sptr_output_multiple(gr_add_const_ii_sptr self) -> int"},
	 { (char *)"gr_add_const_ii_sptr_relative_rate", _wrap_gr_add_const_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_const_ii_sptr_relative_rate(gr_add_const_ii_sptr self) -> double"},
	 { (char *)"gr_add_const_ii_sptr_start", _wrap_gr_add_const_ii_sptr_start, METH_VARARGS, (char *)"gr_add_const_ii_sptr_start(gr_add_const_ii_sptr self) -> bool"},
	 { (char *)"gr_add_const_ii_sptr_stop", _wrap_gr_add_const_ii_sptr_stop, METH_VARARGS, (char *)"gr_add_const_ii_sptr_stop(gr_add_const_ii_sptr self) -> bool"},
	 { (char *)"gr_add_const_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_add_const_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ii_sptr_nitems_read(gr_add_const_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_const_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_add_const_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ii_sptr_nitems_written(gr_add_const_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_const_ii_sptr_detail", _wrap_gr_add_const_ii_sptr_detail, METH_VARARGS, (char *)"gr_add_const_ii_sptr_detail(gr_add_const_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_const_ii_sptr_set_detail", (PyCFunction) _wrap_gr_add_const_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ii_sptr_set_detail(gr_add_const_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_const_ii_sptr_name", _wrap_gr_add_const_ii_sptr_name, METH_VARARGS, (char *)"gr_add_const_ii_sptr_name(gr_add_const_ii_sptr self) -> string"},
	 { (char *)"gr_add_const_ii_sptr_input_signature", _wrap_gr_add_const_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_add_const_ii_sptr_input_signature(gr_add_const_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_ii_sptr_output_signature", _wrap_gr_add_const_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_add_const_ii_sptr_output_signature(gr_add_const_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_ii_sptr_unique_id", _wrap_gr_add_const_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_add_const_ii_sptr_unique_id(gr_add_const_ii_sptr self) -> long"},
	 { (char *)"gr_add_const_ii_sptr_to_basic_block", _wrap_gr_add_const_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_const_ii_sptr_to_basic_block(gr_add_const_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_const_ii_sptr_check_topology", (PyCFunction) _wrap_gr_add_const_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ii_sptr_check_topology(gr_add_const_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_const_ii_sptr_swigregister", gr_add_const_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_const_ii", (PyCFunction) _wrap_add_const_ii, METH_VARARGS | METH_KEYWORDS, (char *)"add_const_ii(int k) -> gr_add_const_ii_sptr"},
	 { (char *)"new_gr_add_const_ff_sptr", _wrap_new_gr_add_const_ff_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_const_ff_sptr()\n"
		"new_gr_add_const_ff_sptr( p) -> gr_add_const_ff_sptr\n"
		""},
	 { (char *)"gr_add_const_ff_sptr___deref__", _wrap_gr_add_const_ff_sptr___deref__, METH_VARARGS, (char *)"gr_add_const_ff_sptr___deref__(gr_add_const_ff_sptr self)"},
	 { (char *)"delete_gr_add_const_ff_sptr", _wrap_delete_gr_add_const_ff_sptr, METH_VARARGS, (char *)"delete_gr_add_const_ff_sptr(gr_add_const_ff_sptr self)"},
	 { (char *)"gr_add_const_ff_sptr_k", _wrap_gr_add_const_ff_sptr_k, METH_VARARGS, (char *)"gr_add_const_ff_sptr_k(gr_add_const_ff_sptr self) -> float"},
	 { (char *)"gr_add_const_ff_sptr_set_k", (PyCFunction) _wrap_gr_add_const_ff_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ff_sptr_set_k(gr_add_const_ff_sptr self, float k)"},
	 { (char *)"gr_add_const_ff_sptr_history", _wrap_gr_add_const_ff_sptr_history, METH_VARARGS, (char *)"gr_add_const_ff_sptr_history(gr_add_const_ff_sptr self) -> unsigned int"},
	 { (char *)"gr_add_const_ff_sptr_output_multiple", _wrap_gr_add_const_ff_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_const_ff_sptr_output_multiple(gr_add_const_ff_sptr self) -> int"},
	 { (char *)"gr_add_const_ff_sptr_relative_rate", _wrap_gr_add_const_ff_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_const_ff_sptr_relative_rate(gr_add_const_ff_sptr self) -> double"},
	 { (char *)"gr_add_const_ff_sptr_start", _wrap_gr_add_const_ff_sptr_start, METH_VARARGS, (char *)"gr_add_const_ff_sptr_start(gr_add_const_ff_sptr self) -> bool"},
	 { (char *)"gr_add_const_ff_sptr_stop", _wrap_gr_add_const_ff_sptr_stop, METH_VARARGS, (char *)"gr_add_const_ff_sptr_stop(gr_add_const_ff_sptr self) -> bool"},
	 { (char *)"gr_add_const_ff_sptr_nitems_read", (PyCFunction) _wrap_gr_add_const_ff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ff_sptr_nitems_read(gr_add_const_ff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_const_ff_sptr_nitems_written", (PyCFunction) _wrap_gr_add_const_ff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ff_sptr_nitems_written(gr_add_const_ff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_const_ff_sptr_detail", _wrap_gr_add_const_ff_sptr_detail, METH_VARARGS, (char *)"gr_add_const_ff_sptr_detail(gr_add_const_ff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_const_ff_sptr_set_detail", (PyCFunction) _wrap_gr_add_const_ff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ff_sptr_set_detail(gr_add_const_ff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_const_ff_sptr_name", _wrap_gr_add_const_ff_sptr_name, METH_VARARGS, (char *)"gr_add_const_ff_sptr_name(gr_add_const_ff_sptr self) -> string"},
	 { (char *)"gr_add_const_ff_sptr_input_signature", _wrap_gr_add_const_ff_sptr_input_signature, METH_VARARGS, (char *)"gr_add_const_ff_sptr_input_signature(gr_add_const_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_ff_sptr_output_signature", _wrap_gr_add_const_ff_sptr_output_signature, METH_VARARGS, (char *)"gr_add_const_ff_sptr_output_signature(gr_add_const_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_ff_sptr_unique_id", _wrap_gr_add_const_ff_sptr_unique_id, METH_VARARGS, (char *)"gr_add_const_ff_sptr_unique_id(gr_add_const_ff_sptr self) -> long"},
	 { (char *)"gr_add_const_ff_sptr_to_basic_block", _wrap_gr_add_const_ff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_const_ff_sptr_to_basic_block(gr_add_const_ff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_const_ff_sptr_check_topology", (PyCFunction) _wrap_gr_add_const_ff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_ff_sptr_check_topology(gr_add_const_ff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_const_ff_sptr_swigregister", gr_add_const_ff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_const_ff", (PyCFunction) _wrap_add_const_ff, METH_VARARGS | METH_KEYWORDS, (char *)"add_const_ff(float k) -> gr_add_const_ff_sptr"},
	 { (char *)"new_gr_add_const_cc_sptr", _wrap_new_gr_add_const_cc_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_const_cc_sptr()\n"
		"new_gr_add_const_cc_sptr( p) -> gr_add_const_cc_sptr\n"
		""},
	 { (char *)"gr_add_const_cc_sptr___deref__", _wrap_gr_add_const_cc_sptr___deref__, METH_VARARGS, (char *)"gr_add_const_cc_sptr___deref__(gr_add_const_cc_sptr self)"},
	 { (char *)"delete_gr_add_const_cc_sptr", _wrap_delete_gr_add_const_cc_sptr, METH_VARARGS, (char *)"delete_gr_add_const_cc_sptr(gr_add_const_cc_sptr self)"},
	 { (char *)"gr_add_const_cc_sptr_k", _wrap_gr_add_const_cc_sptr_k, METH_VARARGS, (char *)"gr_add_const_cc_sptr_k(gr_add_const_cc_sptr self) -> gr_complex"},
	 { (char *)"gr_add_const_cc_sptr_set_k", (PyCFunction) _wrap_gr_add_const_cc_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_cc_sptr_set_k(gr_add_const_cc_sptr self, gr_complex k)"},
	 { (char *)"gr_add_const_cc_sptr_history", _wrap_gr_add_const_cc_sptr_history, METH_VARARGS, (char *)"gr_add_const_cc_sptr_history(gr_add_const_cc_sptr self) -> unsigned int"},
	 { (char *)"gr_add_const_cc_sptr_output_multiple", _wrap_gr_add_const_cc_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_const_cc_sptr_output_multiple(gr_add_const_cc_sptr self) -> int"},
	 { (char *)"gr_add_const_cc_sptr_relative_rate", _wrap_gr_add_const_cc_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_const_cc_sptr_relative_rate(gr_add_const_cc_sptr self) -> double"},
	 { (char *)"gr_add_const_cc_sptr_start", _wrap_gr_add_const_cc_sptr_start, METH_VARARGS, (char *)"gr_add_const_cc_sptr_start(gr_add_const_cc_sptr self) -> bool"},
	 { (char *)"gr_add_const_cc_sptr_stop", _wrap_gr_add_const_cc_sptr_stop, METH_VARARGS, (char *)"gr_add_const_cc_sptr_stop(gr_add_const_cc_sptr self) -> bool"},
	 { (char *)"gr_add_const_cc_sptr_nitems_read", (PyCFunction) _wrap_gr_add_const_cc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_cc_sptr_nitems_read(gr_add_const_cc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_const_cc_sptr_nitems_written", (PyCFunction) _wrap_gr_add_const_cc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_cc_sptr_nitems_written(gr_add_const_cc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_const_cc_sptr_detail", _wrap_gr_add_const_cc_sptr_detail, METH_VARARGS, (char *)"gr_add_const_cc_sptr_detail(gr_add_const_cc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_const_cc_sptr_set_detail", (PyCFunction) _wrap_gr_add_const_cc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_cc_sptr_set_detail(gr_add_const_cc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_const_cc_sptr_name", _wrap_gr_add_const_cc_sptr_name, METH_VARARGS, (char *)"gr_add_const_cc_sptr_name(gr_add_const_cc_sptr self) -> string"},
	 { (char *)"gr_add_const_cc_sptr_input_signature", _wrap_gr_add_const_cc_sptr_input_signature, METH_VARARGS, (char *)"gr_add_const_cc_sptr_input_signature(gr_add_const_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_cc_sptr_output_signature", _wrap_gr_add_const_cc_sptr_output_signature, METH_VARARGS, (char *)"gr_add_const_cc_sptr_output_signature(gr_add_const_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_cc_sptr_unique_id", _wrap_gr_add_const_cc_sptr_unique_id, METH_VARARGS, (char *)"gr_add_const_cc_sptr_unique_id(gr_add_const_cc_sptr self) -> long"},
	 { (char *)"gr_add_const_cc_sptr_to_basic_block", _wrap_gr_add_const_cc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_const_cc_sptr_to_basic_block(gr_add_const_cc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_const_cc_sptr_check_topology", (PyCFunction) _wrap_gr_add_const_cc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_cc_sptr_check_topology(gr_add_const_cc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_const_cc_sptr_swigregister", gr_add_const_cc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_const_cc", (PyCFunction) _wrap_add_const_cc, METH_VARARGS | METH_KEYWORDS, (char *)"add_const_cc(gr_complex k) -> gr_add_const_cc_sptr"},
	 { (char *)"new_gr_add_const_sf_sptr", _wrap_new_gr_add_const_sf_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_const_sf_sptr()\n"
		"new_gr_add_const_sf_sptr( p) -> gr_add_const_sf_sptr\n"
		""},
	 { (char *)"gr_add_const_sf_sptr___deref__", _wrap_gr_add_const_sf_sptr___deref__, METH_VARARGS, (char *)"gr_add_const_sf_sptr___deref__(gr_add_const_sf_sptr self)"},
	 { (char *)"delete_gr_add_const_sf_sptr", _wrap_delete_gr_add_const_sf_sptr, METH_VARARGS, (char *)"delete_gr_add_const_sf_sptr(gr_add_const_sf_sptr self)"},
	 { (char *)"gr_add_const_sf_sptr_k", _wrap_gr_add_const_sf_sptr_k, METH_VARARGS, (char *)"gr_add_const_sf_sptr_k(gr_add_const_sf_sptr self) -> short"},
	 { (char *)"gr_add_const_sf_sptr_set_k", (PyCFunction) _wrap_gr_add_const_sf_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_sf_sptr_set_k(gr_add_const_sf_sptr self, short k)"},
	 { (char *)"gr_add_const_sf_sptr_history", _wrap_gr_add_const_sf_sptr_history, METH_VARARGS, (char *)"gr_add_const_sf_sptr_history(gr_add_const_sf_sptr self) -> unsigned int"},
	 { (char *)"gr_add_const_sf_sptr_output_multiple", _wrap_gr_add_const_sf_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_const_sf_sptr_output_multiple(gr_add_const_sf_sptr self) -> int"},
	 { (char *)"gr_add_const_sf_sptr_relative_rate", _wrap_gr_add_const_sf_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_const_sf_sptr_relative_rate(gr_add_const_sf_sptr self) -> double"},
	 { (char *)"gr_add_const_sf_sptr_start", _wrap_gr_add_const_sf_sptr_start, METH_VARARGS, (char *)"gr_add_const_sf_sptr_start(gr_add_const_sf_sptr self) -> bool"},
	 { (char *)"gr_add_const_sf_sptr_stop", _wrap_gr_add_const_sf_sptr_stop, METH_VARARGS, (char *)"gr_add_const_sf_sptr_stop(gr_add_const_sf_sptr self) -> bool"},
	 { (char *)"gr_add_const_sf_sptr_nitems_read", (PyCFunction) _wrap_gr_add_const_sf_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_sf_sptr_nitems_read(gr_add_const_sf_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_const_sf_sptr_nitems_written", (PyCFunction) _wrap_gr_add_const_sf_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_sf_sptr_nitems_written(gr_add_const_sf_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_const_sf_sptr_detail", _wrap_gr_add_const_sf_sptr_detail, METH_VARARGS, (char *)"gr_add_const_sf_sptr_detail(gr_add_const_sf_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_const_sf_sptr_set_detail", (PyCFunction) _wrap_gr_add_const_sf_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_sf_sptr_set_detail(gr_add_const_sf_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_const_sf_sptr_name", _wrap_gr_add_const_sf_sptr_name, METH_VARARGS, (char *)"gr_add_const_sf_sptr_name(gr_add_const_sf_sptr self) -> string"},
	 { (char *)"gr_add_const_sf_sptr_input_signature", _wrap_gr_add_const_sf_sptr_input_signature, METH_VARARGS, (char *)"gr_add_const_sf_sptr_input_signature(gr_add_const_sf_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_sf_sptr_output_signature", _wrap_gr_add_const_sf_sptr_output_signature, METH_VARARGS, (char *)"gr_add_const_sf_sptr_output_signature(gr_add_const_sf_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_sf_sptr_unique_id", _wrap_gr_add_const_sf_sptr_unique_id, METH_VARARGS, (char *)"gr_add_const_sf_sptr_unique_id(gr_add_const_sf_sptr self) -> long"},
	 { (char *)"gr_add_const_sf_sptr_to_basic_block", _wrap_gr_add_const_sf_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_const_sf_sptr_to_basic_block(gr_add_const_sf_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_const_sf_sptr_check_topology", (PyCFunction) _wrap_gr_add_const_sf_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_sf_sptr_check_topology(gr_add_const_sf_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_const_sf_sptr_swigregister", gr_add_const_sf_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_const_sf", (PyCFunction) _wrap_add_const_sf, METH_VARARGS | METH_KEYWORDS, (char *)"add_const_sf(short k) -> gr_add_const_sf_sptr"},
	 { (char *)"new_gr_multiply_const_ss_sptr", _wrap_new_gr_multiply_const_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_multiply_const_ss_sptr()\n"
		"new_gr_multiply_const_ss_sptr( p) -> gr_multiply_const_ss_sptr\n"
		""},
	 { (char *)"gr_multiply_const_ss_sptr___deref__", _wrap_gr_multiply_const_ss_sptr___deref__, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr___deref__(gr_multiply_const_ss_sptr self)"},
	 { (char *)"delete_gr_multiply_const_ss_sptr", _wrap_delete_gr_multiply_const_ss_sptr, METH_VARARGS, (char *)"delete_gr_multiply_const_ss_sptr(gr_multiply_const_ss_sptr self)"},
	 { (char *)"gr_multiply_const_ss_sptr_k", _wrap_gr_multiply_const_ss_sptr_k, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_k(gr_multiply_const_ss_sptr self) -> short"},
	 { (char *)"gr_multiply_const_ss_sptr_set_k", (PyCFunction) _wrap_gr_multiply_const_ss_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ss_sptr_set_k(gr_multiply_const_ss_sptr self, short k)"},
	 { (char *)"gr_multiply_const_ss_sptr_history", _wrap_gr_multiply_const_ss_sptr_history, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_history(gr_multiply_const_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_multiply_const_ss_sptr_output_multiple", _wrap_gr_multiply_const_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_output_multiple(gr_multiply_const_ss_sptr self) -> int"},
	 { (char *)"gr_multiply_const_ss_sptr_relative_rate", _wrap_gr_multiply_const_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_relative_rate(gr_multiply_const_ss_sptr self) -> double"},
	 { (char *)"gr_multiply_const_ss_sptr_start", _wrap_gr_multiply_const_ss_sptr_start, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_start(gr_multiply_const_ss_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_ss_sptr_stop", _wrap_gr_multiply_const_ss_sptr_stop, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_stop(gr_multiply_const_ss_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_multiply_const_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ss_sptr_nitems_read(gr_multiply_const_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_multiply_const_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_multiply_const_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ss_sptr_nitems_written(gr_multiply_const_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_multiply_const_ss_sptr_detail", _wrap_gr_multiply_const_ss_sptr_detail, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_detail(gr_multiply_const_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_multiply_const_ss_sptr_set_detail", (PyCFunction) _wrap_gr_multiply_const_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ss_sptr_set_detail(gr_multiply_const_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_multiply_const_ss_sptr_name", _wrap_gr_multiply_const_ss_sptr_name, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_name(gr_multiply_const_ss_sptr self) -> string"},
	 { (char *)"gr_multiply_const_ss_sptr_input_signature", _wrap_gr_multiply_const_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_input_signature(gr_multiply_const_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_ss_sptr_output_signature", _wrap_gr_multiply_const_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_output_signature(gr_multiply_const_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_ss_sptr_unique_id", _wrap_gr_multiply_const_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_unique_id(gr_multiply_const_ss_sptr self) -> long"},
	 { (char *)"gr_multiply_const_ss_sptr_to_basic_block", _wrap_gr_multiply_const_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_multiply_const_ss_sptr_to_basic_block(gr_multiply_const_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_multiply_const_ss_sptr_check_topology", (PyCFunction) _wrap_gr_multiply_const_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ss_sptr_check_topology(gr_multiply_const_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_multiply_const_ss_sptr_swigregister", gr_multiply_const_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"multiply_const_ss", (PyCFunction) _wrap_multiply_const_ss, METH_VARARGS | METH_KEYWORDS, (char *)"multiply_const_ss(short k) -> gr_multiply_const_ss_sptr"},
	 { (char *)"new_gr_multiply_const_ii_sptr", _wrap_new_gr_multiply_const_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_multiply_const_ii_sptr()\n"
		"new_gr_multiply_const_ii_sptr( p) -> gr_multiply_const_ii_sptr\n"
		""},
	 { (char *)"gr_multiply_const_ii_sptr___deref__", _wrap_gr_multiply_const_ii_sptr___deref__, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr___deref__(gr_multiply_const_ii_sptr self)"},
	 { (char *)"delete_gr_multiply_const_ii_sptr", _wrap_delete_gr_multiply_const_ii_sptr, METH_VARARGS, (char *)"delete_gr_multiply_const_ii_sptr(gr_multiply_const_ii_sptr self)"},
	 { (char *)"gr_multiply_const_ii_sptr_k", _wrap_gr_multiply_const_ii_sptr_k, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_k(gr_multiply_const_ii_sptr self) -> int"},
	 { (char *)"gr_multiply_const_ii_sptr_set_k", (PyCFunction) _wrap_gr_multiply_const_ii_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ii_sptr_set_k(gr_multiply_const_ii_sptr self, int k)"},
	 { (char *)"gr_multiply_const_ii_sptr_history", _wrap_gr_multiply_const_ii_sptr_history, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_history(gr_multiply_const_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_multiply_const_ii_sptr_output_multiple", _wrap_gr_multiply_const_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_output_multiple(gr_multiply_const_ii_sptr self) -> int"},
	 { (char *)"gr_multiply_const_ii_sptr_relative_rate", _wrap_gr_multiply_const_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_relative_rate(gr_multiply_const_ii_sptr self) -> double"},
	 { (char *)"gr_multiply_const_ii_sptr_start", _wrap_gr_multiply_const_ii_sptr_start, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_start(gr_multiply_const_ii_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_ii_sptr_stop", _wrap_gr_multiply_const_ii_sptr_stop, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_stop(gr_multiply_const_ii_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_multiply_const_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ii_sptr_nitems_read(gr_multiply_const_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_multiply_const_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_multiply_const_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ii_sptr_nitems_written(gr_multiply_const_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_multiply_const_ii_sptr_detail", _wrap_gr_multiply_const_ii_sptr_detail, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_detail(gr_multiply_const_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_multiply_const_ii_sptr_set_detail", (PyCFunction) _wrap_gr_multiply_const_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ii_sptr_set_detail(gr_multiply_const_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_multiply_const_ii_sptr_name", _wrap_gr_multiply_const_ii_sptr_name, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_name(gr_multiply_const_ii_sptr self) -> string"},
	 { (char *)"gr_multiply_const_ii_sptr_input_signature", _wrap_gr_multiply_const_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_input_signature(gr_multiply_const_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_ii_sptr_output_signature", _wrap_gr_multiply_const_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_output_signature(gr_multiply_const_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_ii_sptr_unique_id", _wrap_gr_multiply_const_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_unique_id(gr_multiply_const_ii_sptr self) -> long"},
	 { (char *)"gr_multiply_const_ii_sptr_to_basic_block", _wrap_gr_multiply_const_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_multiply_const_ii_sptr_to_basic_block(gr_multiply_const_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_multiply_const_ii_sptr_check_topology", (PyCFunction) _wrap_gr_multiply_const_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_ii_sptr_check_topology(gr_multiply_const_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_multiply_const_ii_sptr_swigregister", gr_multiply_const_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"multiply_const_ii", (PyCFunction) _wrap_multiply_const_ii, METH_VARARGS | METH_KEYWORDS, (char *)"multiply_const_ii(int k) -> gr_multiply_const_ii_sptr"},
	 { (char *)"new_gr_add_ss_sptr", _wrap_new_gr_add_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_ss_sptr()\n"
		"new_gr_add_ss_sptr( p) -> gr_add_ss_sptr\n"
		""},
	 { (char *)"gr_add_ss_sptr___deref__", _wrap_gr_add_ss_sptr___deref__, METH_VARARGS, (char *)"gr_add_ss_sptr___deref__(gr_add_ss_sptr self)"},
	 { (char *)"delete_gr_add_ss_sptr", _wrap_delete_gr_add_ss_sptr, METH_VARARGS, (char *)"delete_gr_add_ss_sptr(gr_add_ss_sptr self)"},
	 { (char *)"gr_add_ss_sptr_history", _wrap_gr_add_ss_sptr_history, METH_VARARGS, (char *)"gr_add_ss_sptr_history(gr_add_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_add_ss_sptr_output_multiple", _wrap_gr_add_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_ss_sptr_output_multiple(gr_add_ss_sptr self) -> int"},
	 { (char *)"gr_add_ss_sptr_relative_rate", _wrap_gr_add_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_ss_sptr_relative_rate(gr_add_ss_sptr self) -> double"},
	 { (char *)"gr_add_ss_sptr_start", _wrap_gr_add_ss_sptr_start, METH_VARARGS, (char *)"gr_add_ss_sptr_start(gr_add_ss_sptr self) -> bool"},
	 { (char *)"gr_add_ss_sptr_stop", _wrap_gr_add_ss_sptr_stop, METH_VARARGS, (char *)"gr_add_ss_sptr_stop(gr_add_ss_sptr self) -> bool"},
	 { (char *)"gr_add_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_add_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_ss_sptr_nitems_read(gr_add_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_add_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_ss_sptr_nitems_written(gr_add_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_ss_sptr_detail", _wrap_gr_add_ss_sptr_detail, METH_VARARGS, (char *)"gr_add_ss_sptr_detail(gr_add_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_ss_sptr_set_detail", (PyCFunction) _wrap_gr_add_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_ss_sptr_set_detail(gr_add_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_ss_sptr_name", _wrap_gr_add_ss_sptr_name, METH_VARARGS, (char *)"gr_add_ss_sptr_name(gr_add_ss_sptr self) -> string"},
	 { (char *)"gr_add_ss_sptr_input_signature", _wrap_gr_add_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_add_ss_sptr_input_signature(gr_add_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_ss_sptr_output_signature", _wrap_gr_add_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_add_ss_sptr_output_signature(gr_add_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_ss_sptr_unique_id", _wrap_gr_add_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_add_ss_sptr_unique_id(gr_add_ss_sptr self) -> long"},
	 { (char *)"gr_add_ss_sptr_to_basic_block", _wrap_gr_add_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_ss_sptr_to_basic_block(gr_add_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_ss_sptr_check_topology", (PyCFunction) _wrap_gr_add_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_ss_sptr_check_topology(gr_add_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_ss_sptr_swigregister", gr_add_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_ss", (PyCFunction) _wrap_add_ss, METH_VARARGS | METH_KEYWORDS, (char *)"add_ss(size_t vlen = 1) -> gr_add_ss_sptr"},
	 { (char *)"new_gr_add_ii_sptr", _wrap_new_gr_add_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_ii_sptr()\n"
		"new_gr_add_ii_sptr( p) -> gr_add_ii_sptr\n"
		""},
	 { (char *)"gr_add_ii_sptr___deref__", _wrap_gr_add_ii_sptr___deref__, METH_VARARGS, (char *)"gr_add_ii_sptr___deref__(gr_add_ii_sptr self)"},
	 { (char *)"delete_gr_add_ii_sptr", _wrap_delete_gr_add_ii_sptr, METH_VARARGS, (char *)"delete_gr_add_ii_sptr(gr_add_ii_sptr self)"},
	 { (char *)"gr_add_ii_sptr_history", _wrap_gr_add_ii_sptr_history, METH_VARARGS, (char *)"gr_add_ii_sptr_history(gr_add_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_add_ii_sptr_output_multiple", _wrap_gr_add_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_ii_sptr_output_multiple(gr_add_ii_sptr self) -> int"},
	 { (char *)"gr_add_ii_sptr_relative_rate", _wrap_gr_add_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_ii_sptr_relative_rate(gr_add_ii_sptr self) -> double"},
	 { (char *)"gr_add_ii_sptr_start", _wrap_gr_add_ii_sptr_start, METH_VARARGS, (char *)"gr_add_ii_sptr_start(gr_add_ii_sptr self) -> bool"},
	 { (char *)"gr_add_ii_sptr_stop", _wrap_gr_add_ii_sptr_stop, METH_VARARGS, (char *)"gr_add_ii_sptr_stop(gr_add_ii_sptr self) -> bool"},
	 { (char *)"gr_add_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_add_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_ii_sptr_nitems_read(gr_add_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_add_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_ii_sptr_nitems_written(gr_add_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_ii_sptr_detail", _wrap_gr_add_ii_sptr_detail, METH_VARARGS, (char *)"gr_add_ii_sptr_detail(gr_add_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_ii_sptr_set_detail", (PyCFunction) _wrap_gr_add_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_ii_sptr_set_detail(gr_add_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_ii_sptr_name", _wrap_gr_add_ii_sptr_name, METH_VARARGS, (char *)"gr_add_ii_sptr_name(gr_add_ii_sptr self) -> string"},
	 { (char *)"gr_add_ii_sptr_input_signature", _wrap_gr_add_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_add_ii_sptr_input_signature(gr_add_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_ii_sptr_output_signature", _wrap_gr_add_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_add_ii_sptr_output_signature(gr_add_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_ii_sptr_unique_id", _wrap_gr_add_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_add_ii_sptr_unique_id(gr_add_ii_sptr self) -> long"},
	 { (char *)"gr_add_ii_sptr_to_basic_block", _wrap_gr_add_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_ii_sptr_to_basic_block(gr_add_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_ii_sptr_check_topology", (PyCFunction) _wrap_gr_add_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_ii_sptr_check_topology(gr_add_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_ii_sptr_swigregister", gr_add_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_ii", (PyCFunction) _wrap_add_ii, METH_VARARGS | METH_KEYWORDS, (char *)"add_ii(size_t vlen = 1) -> gr_add_ii_sptr"},
	 { (char *)"new_gr_add_cc_sptr", _wrap_new_gr_add_cc_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_cc_sptr()\n"
		"new_gr_add_cc_sptr( p) -> gr_add_cc_sptr\n"
		""},
	 { (char *)"gr_add_cc_sptr___deref__", _wrap_gr_add_cc_sptr___deref__, METH_VARARGS, (char *)"gr_add_cc_sptr___deref__(gr_add_cc_sptr self)"},
	 { (char *)"delete_gr_add_cc_sptr", _wrap_delete_gr_add_cc_sptr, METH_VARARGS, (char *)"delete_gr_add_cc_sptr(gr_add_cc_sptr self)"},
	 { (char *)"gr_add_cc_sptr_history", _wrap_gr_add_cc_sptr_history, METH_VARARGS, (char *)"gr_add_cc_sptr_history(gr_add_cc_sptr self) -> unsigned int"},
	 { (char *)"gr_add_cc_sptr_output_multiple", _wrap_gr_add_cc_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_cc_sptr_output_multiple(gr_add_cc_sptr self) -> int"},
	 { (char *)"gr_add_cc_sptr_relative_rate", _wrap_gr_add_cc_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_cc_sptr_relative_rate(gr_add_cc_sptr self) -> double"},
	 { (char *)"gr_add_cc_sptr_start", _wrap_gr_add_cc_sptr_start, METH_VARARGS, (char *)"gr_add_cc_sptr_start(gr_add_cc_sptr self) -> bool"},
	 { (char *)"gr_add_cc_sptr_stop", _wrap_gr_add_cc_sptr_stop, METH_VARARGS, (char *)"gr_add_cc_sptr_stop(gr_add_cc_sptr self) -> bool"},
	 { (char *)"gr_add_cc_sptr_nitems_read", (PyCFunction) _wrap_gr_add_cc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_cc_sptr_nitems_read(gr_add_cc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_cc_sptr_nitems_written", (PyCFunction) _wrap_gr_add_cc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_cc_sptr_nitems_written(gr_add_cc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_cc_sptr_detail", _wrap_gr_add_cc_sptr_detail, METH_VARARGS, (char *)"gr_add_cc_sptr_detail(gr_add_cc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_cc_sptr_set_detail", (PyCFunction) _wrap_gr_add_cc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_cc_sptr_set_detail(gr_add_cc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_cc_sptr_name", _wrap_gr_add_cc_sptr_name, METH_VARARGS, (char *)"gr_add_cc_sptr_name(gr_add_cc_sptr self) -> string"},
	 { (char *)"gr_add_cc_sptr_input_signature", _wrap_gr_add_cc_sptr_input_signature, METH_VARARGS, (char *)"gr_add_cc_sptr_input_signature(gr_add_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_cc_sptr_output_signature", _wrap_gr_add_cc_sptr_output_signature, METH_VARARGS, (char *)"gr_add_cc_sptr_output_signature(gr_add_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_cc_sptr_unique_id", _wrap_gr_add_cc_sptr_unique_id, METH_VARARGS, (char *)"gr_add_cc_sptr_unique_id(gr_add_cc_sptr self) -> long"},
	 { (char *)"gr_add_cc_sptr_to_basic_block", _wrap_gr_add_cc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_cc_sptr_to_basic_block(gr_add_cc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_cc_sptr_check_topology", (PyCFunction) _wrap_gr_add_cc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_cc_sptr_check_topology(gr_add_cc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_cc_sptr_swigregister", gr_add_cc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_cc", (PyCFunction) _wrap_add_cc, METH_VARARGS | METH_KEYWORDS, (char *)"add_cc(size_t vlen = 1) -> gr_add_cc_sptr"},
	 { (char *)"new_gr_sub_ss_sptr", _wrap_new_gr_sub_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_sub_ss_sptr()\n"
		"new_gr_sub_ss_sptr( p) -> gr_sub_ss_sptr\n"
		""},
	 { (char *)"gr_sub_ss_sptr___deref__", _wrap_gr_sub_ss_sptr___deref__, METH_VARARGS, (char *)"gr_sub_ss_sptr___deref__(gr_sub_ss_sptr self)"},
	 { (char *)"delete_gr_sub_ss_sptr", _wrap_delete_gr_sub_ss_sptr, METH_VARARGS, (char *)"delete_gr_sub_ss_sptr(gr_sub_ss_sptr self)"},
	 { (char *)"gr_sub_ss_sptr_history", _wrap_gr_sub_ss_sptr_history, METH_VARARGS, (char *)"gr_sub_ss_sptr_history(gr_sub_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_sub_ss_sptr_output_multiple", _wrap_gr_sub_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_sub_ss_sptr_output_multiple(gr_sub_ss_sptr self) -> int"},
	 { (char *)"gr_sub_ss_sptr_relative_rate", _wrap_gr_sub_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_sub_ss_sptr_relative_rate(gr_sub_ss_sptr self) -> double"},
	 { (char *)"gr_sub_ss_sptr_start", _wrap_gr_sub_ss_sptr_start, METH_VARARGS, (char *)"gr_sub_ss_sptr_start(gr_sub_ss_sptr self) -> bool"},
	 { (char *)"gr_sub_ss_sptr_stop", _wrap_gr_sub_ss_sptr_stop, METH_VARARGS, (char *)"gr_sub_ss_sptr_stop(gr_sub_ss_sptr self) -> bool"},
	 { (char *)"gr_sub_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_sub_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ss_sptr_nitems_read(gr_sub_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sub_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_sub_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ss_sptr_nitems_written(gr_sub_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sub_ss_sptr_detail", _wrap_gr_sub_ss_sptr_detail, METH_VARARGS, (char *)"gr_sub_ss_sptr_detail(gr_sub_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sub_ss_sptr_set_detail", (PyCFunction) _wrap_gr_sub_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ss_sptr_set_detail(gr_sub_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sub_ss_sptr_name", _wrap_gr_sub_ss_sptr_name, METH_VARARGS, (char *)"gr_sub_ss_sptr_name(gr_sub_ss_sptr self) -> string"},
	 { (char *)"gr_sub_ss_sptr_input_signature", _wrap_gr_sub_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_sub_ss_sptr_input_signature(gr_sub_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sub_ss_sptr_output_signature", _wrap_gr_sub_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_sub_ss_sptr_output_signature(gr_sub_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sub_ss_sptr_unique_id", _wrap_gr_sub_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_sub_ss_sptr_unique_id(gr_sub_ss_sptr self) -> long"},
	 { (char *)"gr_sub_ss_sptr_to_basic_block", _wrap_gr_sub_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sub_ss_sptr_to_basic_block(gr_sub_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sub_ss_sptr_check_topology", (PyCFunction) _wrap_gr_sub_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ss_sptr_check_topology(gr_sub_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sub_ss_sptr_swigregister", gr_sub_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sub_ss", (PyCFunction) _wrap_sub_ss, METH_VARARGS | METH_KEYWORDS, (char *)"sub_ss(size_t vlen = 1) -> gr_sub_ss_sptr"},
	 { (char *)"new_gr_sub_ii_sptr", _wrap_new_gr_sub_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_sub_ii_sptr()\n"
		"new_gr_sub_ii_sptr( p) -> gr_sub_ii_sptr\n"
		""},
	 { (char *)"gr_sub_ii_sptr___deref__", _wrap_gr_sub_ii_sptr___deref__, METH_VARARGS, (char *)"gr_sub_ii_sptr___deref__(gr_sub_ii_sptr self)"},
	 { (char *)"delete_gr_sub_ii_sptr", _wrap_delete_gr_sub_ii_sptr, METH_VARARGS, (char *)"delete_gr_sub_ii_sptr(gr_sub_ii_sptr self)"},
	 { (char *)"gr_sub_ii_sptr_history", _wrap_gr_sub_ii_sptr_history, METH_VARARGS, (char *)"gr_sub_ii_sptr_history(gr_sub_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_sub_ii_sptr_output_multiple", _wrap_gr_sub_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_sub_ii_sptr_output_multiple(gr_sub_ii_sptr self) -> int"},
	 { (char *)"gr_sub_ii_sptr_relative_rate", _wrap_gr_sub_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_sub_ii_sptr_relative_rate(gr_sub_ii_sptr self) -> double"},
	 { (char *)"gr_sub_ii_sptr_start", _wrap_gr_sub_ii_sptr_start, METH_VARARGS, (char *)"gr_sub_ii_sptr_start(gr_sub_ii_sptr self) -> bool"},
	 { (char *)"gr_sub_ii_sptr_stop", _wrap_gr_sub_ii_sptr_stop, METH_VARARGS, (char *)"gr_sub_ii_sptr_stop(gr_sub_ii_sptr self) -> bool"},
	 { (char *)"gr_sub_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_sub_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ii_sptr_nitems_read(gr_sub_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sub_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_sub_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ii_sptr_nitems_written(gr_sub_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sub_ii_sptr_detail", _wrap_gr_sub_ii_sptr_detail, METH_VARARGS, (char *)"gr_sub_ii_sptr_detail(gr_sub_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sub_ii_sptr_set_detail", (PyCFunction) _wrap_gr_sub_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ii_sptr_set_detail(gr_sub_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sub_ii_sptr_name", _wrap_gr_sub_ii_sptr_name, METH_VARARGS, (char *)"gr_sub_ii_sptr_name(gr_sub_ii_sptr self) -> string"},
	 { (char *)"gr_sub_ii_sptr_input_signature", _wrap_gr_sub_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_sub_ii_sptr_input_signature(gr_sub_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sub_ii_sptr_output_signature", _wrap_gr_sub_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_sub_ii_sptr_output_signature(gr_sub_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sub_ii_sptr_unique_id", _wrap_gr_sub_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_sub_ii_sptr_unique_id(gr_sub_ii_sptr self) -> long"},
	 { (char *)"gr_sub_ii_sptr_to_basic_block", _wrap_gr_sub_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sub_ii_sptr_to_basic_block(gr_sub_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sub_ii_sptr_check_topology", (PyCFunction) _wrap_gr_sub_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ii_sptr_check_topology(gr_sub_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sub_ii_sptr_swigregister", gr_sub_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sub_ii", (PyCFunction) _wrap_sub_ii, METH_VARARGS | METH_KEYWORDS, (char *)"sub_ii(size_t vlen = 1) -> gr_sub_ii_sptr"},
	 { (char *)"new_gr_sub_ff_sptr", _wrap_new_gr_sub_ff_sptr, METH_VARARGS, (char *)"\n"
		"gr_sub_ff_sptr()\n"
		"new_gr_sub_ff_sptr( p) -> gr_sub_ff_sptr\n"
		""},
	 { (char *)"gr_sub_ff_sptr___deref__", _wrap_gr_sub_ff_sptr___deref__, METH_VARARGS, (char *)"gr_sub_ff_sptr___deref__(gr_sub_ff_sptr self)"},
	 { (char *)"delete_gr_sub_ff_sptr", _wrap_delete_gr_sub_ff_sptr, METH_VARARGS, (char *)"delete_gr_sub_ff_sptr(gr_sub_ff_sptr self)"},
	 { (char *)"gr_sub_ff_sptr_history", _wrap_gr_sub_ff_sptr_history, METH_VARARGS, (char *)"gr_sub_ff_sptr_history(gr_sub_ff_sptr self) -> unsigned int"},
	 { (char *)"gr_sub_ff_sptr_output_multiple", _wrap_gr_sub_ff_sptr_output_multiple, METH_VARARGS, (char *)"gr_sub_ff_sptr_output_multiple(gr_sub_ff_sptr self) -> int"},
	 { (char *)"gr_sub_ff_sptr_relative_rate", _wrap_gr_sub_ff_sptr_relative_rate, METH_VARARGS, (char *)"gr_sub_ff_sptr_relative_rate(gr_sub_ff_sptr self) -> double"},
	 { (char *)"gr_sub_ff_sptr_start", _wrap_gr_sub_ff_sptr_start, METH_VARARGS, (char *)"gr_sub_ff_sptr_start(gr_sub_ff_sptr self) -> bool"},
	 { (char *)"gr_sub_ff_sptr_stop", _wrap_gr_sub_ff_sptr_stop, METH_VARARGS, (char *)"gr_sub_ff_sptr_stop(gr_sub_ff_sptr self) -> bool"},
	 { (char *)"gr_sub_ff_sptr_nitems_read", (PyCFunction) _wrap_gr_sub_ff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ff_sptr_nitems_read(gr_sub_ff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sub_ff_sptr_nitems_written", (PyCFunction) _wrap_gr_sub_ff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ff_sptr_nitems_written(gr_sub_ff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sub_ff_sptr_detail", _wrap_gr_sub_ff_sptr_detail, METH_VARARGS, (char *)"gr_sub_ff_sptr_detail(gr_sub_ff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sub_ff_sptr_set_detail", (PyCFunction) _wrap_gr_sub_ff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ff_sptr_set_detail(gr_sub_ff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sub_ff_sptr_name", _wrap_gr_sub_ff_sptr_name, METH_VARARGS, (char *)"gr_sub_ff_sptr_name(gr_sub_ff_sptr self) -> string"},
	 { (char *)"gr_sub_ff_sptr_input_signature", _wrap_gr_sub_ff_sptr_input_signature, METH_VARARGS, (char *)"gr_sub_ff_sptr_input_signature(gr_sub_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sub_ff_sptr_output_signature", _wrap_gr_sub_ff_sptr_output_signature, METH_VARARGS, (char *)"gr_sub_ff_sptr_output_signature(gr_sub_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sub_ff_sptr_unique_id", _wrap_gr_sub_ff_sptr_unique_id, METH_VARARGS, (char *)"gr_sub_ff_sptr_unique_id(gr_sub_ff_sptr self) -> long"},
	 { (char *)"gr_sub_ff_sptr_to_basic_block", _wrap_gr_sub_ff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sub_ff_sptr_to_basic_block(gr_sub_ff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sub_ff_sptr_check_topology", (PyCFunction) _wrap_gr_sub_ff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_ff_sptr_check_topology(gr_sub_ff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sub_ff_sptr_swigregister", gr_sub_ff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sub_ff", (PyCFunction) _wrap_sub_ff, METH_VARARGS | METH_KEYWORDS, (char *)"sub_ff(size_t vlen = 1) -> gr_sub_ff_sptr"},
	 { (char *)"new_gr_sub_cc_sptr", _wrap_new_gr_sub_cc_sptr, METH_VARARGS, (char *)"\n"
		"gr_sub_cc_sptr()\n"
		"new_gr_sub_cc_sptr( p) -> gr_sub_cc_sptr\n"
		""},
	 { (char *)"gr_sub_cc_sptr___deref__", _wrap_gr_sub_cc_sptr___deref__, METH_VARARGS, (char *)"gr_sub_cc_sptr___deref__(gr_sub_cc_sptr self)"},
	 { (char *)"delete_gr_sub_cc_sptr", _wrap_delete_gr_sub_cc_sptr, METH_VARARGS, (char *)"delete_gr_sub_cc_sptr(gr_sub_cc_sptr self)"},
	 { (char *)"gr_sub_cc_sptr_history", _wrap_gr_sub_cc_sptr_history, METH_VARARGS, (char *)"gr_sub_cc_sptr_history(gr_sub_cc_sptr self) -> unsigned int"},
	 { (char *)"gr_sub_cc_sptr_output_multiple", _wrap_gr_sub_cc_sptr_output_multiple, METH_VARARGS, (char *)"gr_sub_cc_sptr_output_multiple(gr_sub_cc_sptr self) -> int"},
	 { (char *)"gr_sub_cc_sptr_relative_rate", _wrap_gr_sub_cc_sptr_relative_rate, METH_VARARGS, (char *)"gr_sub_cc_sptr_relative_rate(gr_sub_cc_sptr self) -> double"},
	 { (char *)"gr_sub_cc_sptr_start", _wrap_gr_sub_cc_sptr_start, METH_VARARGS, (char *)"gr_sub_cc_sptr_start(gr_sub_cc_sptr self) -> bool"},
	 { (char *)"gr_sub_cc_sptr_stop", _wrap_gr_sub_cc_sptr_stop, METH_VARARGS, (char *)"gr_sub_cc_sptr_stop(gr_sub_cc_sptr self) -> bool"},
	 { (char *)"gr_sub_cc_sptr_nitems_read", (PyCFunction) _wrap_gr_sub_cc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_cc_sptr_nitems_read(gr_sub_cc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sub_cc_sptr_nitems_written", (PyCFunction) _wrap_gr_sub_cc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_cc_sptr_nitems_written(gr_sub_cc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sub_cc_sptr_detail", _wrap_gr_sub_cc_sptr_detail, METH_VARARGS, (char *)"gr_sub_cc_sptr_detail(gr_sub_cc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sub_cc_sptr_set_detail", (PyCFunction) _wrap_gr_sub_cc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_cc_sptr_set_detail(gr_sub_cc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sub_cc_sptr_name", _wrap_gr_sub_cc_sptr_name, METH_VARARGS, (char *)"gr_sub_cc_sptr_name(gr_sub_cc_sptr self) -> string"},
	 { (char *)"gr_sub_cc_sptr_input_signature", _wrap_gr_sub_cc_sptr_input_signature, METH_VARARGS, (char *)"gr_sub_cc_sptr_input_signature(gr_sub_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sub_cc_sptr_output_signature", _wrap_gr_sub_cc_sptr_output_signature, METH_VARARGS, (char *)"gr_sub_cc_sptr_output_signature(gr_sub_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sub_cc_sptr_unique_id", _wrap_gr_sub_cc_sptr_unique_id, METH_VARARGS, (char *)"gr_sub_cc_sptr_unique_id(gr_sub_cc_sptr self) -> long"},
	 { (char *)"gr_sub_cc_sptr_to_basic_block", _wrap_gr_sub_cc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sub_cc_sptr_to_basic_block(gr_sub_cc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sub_cc_sptr_check_topology", (PyCFunction) _wrap_gr_sub_cc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sub_cc_sptr_check_topology(gr_sub_cc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sub_cc_sptr_swigregister", gr_sub_cc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sub_cc", (PyCFunction) _wrap_sub_cc, METH_VARARGS | METH_KEYWORDS, (char *)"sub_cc(size_t vlen = 1) -> gr_sub_cc_sptr"},
	 { (char *)"new_gr_multiply_ss_sptr", _wrap_new_gr_multiply_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_multiply_ss_sptr()\n"
		"new_gr_multiply_ss_sptr( p) -> gr_multiply_ss_sptr\n"
		""},
	 { (char *)"gr_multiply_ss_sptr___deref__", _wrap_gr_multiply_ss_sptr___deref__, METH_VARARGS, (char *)"gr_multiply_ss_sptr___deref__(gr_multiply_ss_sptr self)"},
	 { (char *)"delete_gr_multiply_ss_sptr", _wrap_delete_gr_multiply_ss_sptr, METH_VARARGS, (char *)"delete_gr_multiply_ss_sptr(gr_multiply_ss_sptr self)"},
	 { (char *)"gr_multiply_ss_sptr_history", _wrap_gr_multiply_ss_sptr_history, METH_VARARGS, (char *)"gr_multiply_ss_sptr_history(gr_multiply_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_multiply_ss_sptr_output_multiple", _wrap_gr_multiply_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_multiply_ss_sptr_output_multiple(gr_multiply_ss_sptr self) -> int"},
	 { (char *)"gr_multiply_ss_sptr_relative_rate", _wrap_gr_multiply_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_multiply_ss_sptr_relative_rate(gr_multiply_ss_sptr self) -> double"},
	 { (char *)"gr_multiply_ss_sptr_start", _wrap_gr_multiply_ss_sptr_start, METH_VARARGS, (char *)"gr_multiply_ss_sptr_start(gr_multiply_ss_sptr self) -> bool"},
	 { (char *)"gr_multiply_ss_sptr_stop", _wrap_gr_multiply_ss_sptr_stop, METH_VARARGS, (char *)"gr_multiply_ss_sptr_stop(gr_multiply_ss_sptr self) -> bool"},
	 { (char *)"gr_multiply_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_multiply_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_ss_sptr_nitems_read(gr_multiply_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_multiply_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_multiply_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_ss_sptr_nitems_written(gr_multiply_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_multiply_ss_sptr_detail", _wrap_gr_multiply_ss_sptr_detail, METH_VARARGS, (char *)"gr_multiply_ss_sptr_detail(gr_multiply_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_multiply_ss_sptr_set_detail", (PyCFunction) _wrap_gr_multiply_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_ss_sptr_set_detail(gr_multiply_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_multiply_ss_sptr_name", _wrap_gr_multiply_ss_sptr_name, METH_VARARGS, (char *)"gr_multiply_ss_sptr_name(gr_multiply_ss_sptr self) -> string"},
	 { (char *)"gr_multiply_ss_sptr_input_signature", _wrap_gr_multiply_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_multiply_ss_sptr_input_signature(gr_multiply_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_ss_sptr_output_signature", _wrap_gr_multiply_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_multiply_ss_sptr_output_signature(gr_multiply_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_ss_sptr_unique_id", _wrap_gr_multiply_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_multiply_ss_sptr_unique_id(gr_multiply_ss_sptr self) -> long"},
	 { (char *)"gr_multiply_ss_sptr_to_basic_block", _wrap_gr_multiply_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_multiply_ss_sptr_to_basic_block(gr_multiply_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_multiply_ss_sptr_check_topology", (PyCFunction) _wrap_gr_multiply_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_ss_sptr_check_topology(gr_multiply_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_multiply_ss_sptr_swigregister", gr_multiply_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"multiply_ss", (PyCFunction) _wrap_multiply_ss, METH_VARARGS | METH_KEYWORDS, (char *)"multiply_ss(size_t vlen = 1) -> gr_multiply_ss_sptr"},
	 { (char *)"new_gr_multiply_ii_sptr", _wrap_new_gr_multiply_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_multiply_ii_sptr()\n"
		"new_gr_multiply_ii_sptr( p) -> gr_multiply_ii_sptr\n"
		""},
	 { (char *)"gr_multiply_ii_sptr___deref__", _wrap_gr_multiply_ii_sptr___deref__, METH_VARARGS, (char *)"gr_multiply_ii_sptr___deref__(gr_multiply_ii_sptr self)"},
	 { (char *)"delete_gr_multiply_ii_sptr", _wrap_delete_gr_multiply_ii_sptr, METH_VARARGS, (char *)"delete_gr_multiply_ii_sptr(gr_multiply_ii_sptr self)"},
	 { (char *)"gr_multiply_ii_sptr_history", _wrap_gr_multiply_ii_sptr_history, METH_VARARGS, (char *)"gr_multiply_ii_sptr_history(gr_multiply_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_multiply_ii_sptr_output_multiple", _wrap_gr_multiply_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_multiply_ii_sptr_output_multiple(gr_multiply_ii_sptr self) -> int"},
	 { (char *)"gr_multiply_ii_sptr_relative_rate", _wrap_gr_multiply_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_multiply_ii_sptr_relative_rate(gr_multiply_ii_sptr self) -> double"},
	 { (char *)"gr_multiply_ii_sptr_start", _wrap_gr_multiply_ii_sptr_start, METH_VARARGS, (char *)"gr_multiply_ii_sptr_start(gr_multiply_ii_sptr self) -> bool"},
	 { (char *)"gr_multiply_ii_sptr_stop", _wrap_gr_multiply_ii_sptr_stop, METH_VARARGS, (char *)"gr_multiply_ii_sptr_stop(gr_multiply_ii_sptr self) -> bool"},
	 { (char *)"gr_multiply_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_multiply_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_ii_sptr_nitems_read(gr_multiply_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_multiply_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_multiply_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_ii_sptr_nitems_written(gr_multiply_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_multiply_ii_sptr_detail", _wrap_gr_multiply_ii_sptr_detail, METH_VARARGS, (char *)"gr_multiply_ii_sptr_detail(gr_multiply_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_multiply_ii_sptr_set_detail", (PyCFunction) _wrap_gr_multiply_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_ii_sptr_set_detail(gr_multiply_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_multiply_ii_sptr_name", _wrap_gr_multiply_ii_sptr_name, METH_VARARGS, (char *)"gr_multiply_ii_sptr_name(gr_multiply_ii_sptr self) -> string"},
	 { (char *)"gr_multiply_ii_sptr_input_signature", _wrap_gr_multiply_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_multiply_ii_sptr_input_signature(gr_multiply_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_ii_sptr_output_signature", _wrap_gr_multiply_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_multiply_ii_sptr_output_signature(gr_multiply_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_ii_sptr_unique_id", _wrap_gr_multiply_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_multiply_ii_sptr_unique_id(gr_multiply_ii_sptr self) -> long"},
	 { (char *)"gr_multiply_ii_sptr_to_basic_block", _wrap_gr_multiply_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_multiply_ii_sptr_to_basic_block(gr_multiply_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_multiply_ii_sptr_check_topology", (PyCFunction) _wrap_gr_multiply_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_ii_sptr_check_topology(gr_multiply_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_multiply_ii_sptr_swigregister", gr_multiply_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"multiply_ii", (PyCFunction) _wrap_multiply_ii, METH_VARARGS | METH_KEYWORDS, (char *)"multiply_ii(size_t vlen = 1) -> gr_multiply_ii_sptr"},
	 { (char *)"new_gr_divide_ss_sptr", _wrap_new_gr_divide_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_divide_ss_sptr()\n"
		"new_gr_divide_ss_sptr( p) -> gr_divide_ss_sptr\n"
		""},
	 { (char *)"gr_divide_ss_sptr___deref__", _wrap_gr_divide_ss_sptr___deref__, METH_VARARGS, (char *)"gr_divide_ss_sptr___deref__(gr_divide_ss_sptr self)"},
	 { (char *)"delete_gr_divide_ss_sptr", _wrap_delete_gr_divide_ss_sptr, METH_VARARGS, (char *)"delete_gr_divide_ss_sptr(gr_divide_ss_sptr self)"},
	 { (char *)"gr_divide_ss_sptr_history", _wrap_gr_divide_ss_sptr_history, METH_VARARGS, (char *)"gr_divide_ss_sptr_history(gr_divide_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_divide_ss_sptr_output_multiple", _wrap_gr_divide_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_divide_ss_sptr_output_multiple(gr_divide_ss_sptr self) -> int"},
	 { (char *)"gr_divide_ss_sptr_relative_rate", _wrap_gr_divide_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_divide_ss_sptr_relative_rate(gr_divide_ss_sptr self) -> double"},
	 { (char *)"gr_divide_ss_sptr_start", _wrap_gr_divide_ss_sptr_start, METH_VARARGS, (char *)"gr_divide_ss_sptr_start(gr_divide_ss_sptr self) -> bool"},
	 { (char *)"gr_divide_ss_sptr_stop", _wrap_gr_divide_ss_sptr_stop, METH_VARARGS, (char *)"gr_divide_ss_sptr_stop(gr_divide_ss_sptr self) -> bool"},
	 { (char *)"gr_divide_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_divide_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ss_sptr_nitems_read(gr_divide_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_divide_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_divide_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ss_sptr_nitems_written(gr_divide_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_divide_ss_sptr_detail", _wrap_gr_divide_ss_sptr_detail, METH_VARARGS, (char *)"gr_divide_ss_sptr_detail(gr_divide_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_divide_ss_sptr_set_detail", (PyCFunction) _wrap_gr_divide_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ss_sptr_set_detail(gr_divide_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_divide_ss_sptr_name", _wrap_gr_divide_ss_sptr_name, METH_VARARGS, (char *)"gr_divide_ss_sptr_name(gr_divide_ss_sptr self) -> string"},
	 { (char *)"gr_divide_ss_sptr_input_signature", _wrap_gr_divide_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_divide_ss_sptr_input_signature(gr_divide_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_divide_ss_sptr_output_signature", _wrap_gr_divide_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_divide_ss_sptr_output_signature(gr_divide_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_divide_ss_sptr_unique_id", _wrap_gr_divide_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_divide_ss_sptr_unique_id(gr_divide_ss_sptr self) -> long"},
	 { (char *)"gr_divide_ss_sptr_to_basic_block", _wrap_gr_divide_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_divide_ss_sptr_to_basic_block(gr_divide_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_divide_ss_sptr_check_topology", (PyCFunction) _wrap_gr_divide_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ss_sptr_check_topology(gr_divide_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_divide_ss_sptr_swigregister", gr_divide_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"divide_ss", (PyCFunction) _wrap_divide_ss, METH_VARARGS | METH_KEYWORDS, (char *)"divide_ss(size_t vlen = 1) -> gr_divide_ss_sptr"},
	 { (char *)"new_gr_divide_ii_sptr", _wrap_new_gr_divide_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_divide_ii_sptr()\n"
		"new_gr_divide_ii_sptr( p) -> gr_divide_ii_sptr\n"
		""},
	 { (char *)"gr_divide_ii_sptr___deref__", _wrap_gr_divide_ii_sptr___deref__, METH_VARARGS, (char *)"gr_divide_ii_sptr___deref__(gr_divide_ii_sptr self)"},
	 { (char *)"delete_gr_divide_ii_sptr", _wrap_delete_gr_divide_ii_sptr, METH_VARARGS, (char *)"delete_gr_divide_ii_sptr(gr_divide_ii_sptr self)"},
	 { (char *)"gr_divide_ii_sptr_history", _wrap_gr_divide_ii_sptr_history, METH_VARARGS, (char *)"gr_divide_ii_sptr_history(gr_divide_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_divide_ii_sptr_output_multiple", _wrap_gr_divide_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_divide_ii_sptr_output_multiple(gr_divide_ii_sptr self) -> int"},
	 { (char *)"gr_divide_ii_sptr_relative_rate", _wrap_gr_divide_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_divide_ii_sptr_relative_rate(gr_divide_ii_sptr self) -> double"},
	 { (char *)"gr_divide_ii_sptr_start", _wrap_gr_divide_ii_sptr_start, METH_VARARGS, (char *)"gr_divide_ii_sptr_start(gr_divide_ii_sptr self) -> bool"},
	 { (char *)"gr_divide_ii_sptr_stop", _wrap_gr_divide_ii_sptr_stop, METH_VARARGS, (char *)"gr_divide_ii_sptr_stop(gr_divide_ii_sptr self) -> bool"},
	 { (char *)"gr_divide_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_divide_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ii_sptr_nitems_read(gr_divide_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_divide_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_divide_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ii_sptr_nitems_written(gr_divide_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_divide_ii_sptr_detail", _wrap_gr_divide_ii_sptr_detail, METH_VARARGS, (char *)"gr_divide_ii_sptr_detail(gr_divide_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_divide_ii_sptr_set_detail", (PyCFunction) _wrap_gr_divide_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ii_sptr_set_detail(gr_divide_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_divide_ii_sptr_name", _wrap_gr_divide_ii_sptr_name, METH_VARARGS, (char *)"gr_divide_ii_sptr_name(gr_divide_ii_sptr self) -> string"},
	 { (char *)"gr_divide_ii_sptr_input_signature", _wrap_gr_divide_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_divide_ii_sptr_input_signature(gr_divide_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_divide_ii_sptr_output_signature", _wrap_gr_divide_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_divide_ii_sptr_output_signature(gr_divide_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_divide_ii_sptr_unique_id", _wrap_gr_divide_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_divide_ii_sptr_unique_id(gr_divide_ii_sptr self) -> long"},
	 { (char *)"gr_divide_ii_sptr_to_basic_block", _wrap_gr_divide_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_divide_ii_sptr_to_basic_block(gr_divide_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_divide_ii_sptr_check_topology", (PyCFunction) _wrap_gr_divide_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ii_sptr_check_topology(gr_divide_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_divide_ii_sptr_swigregister", gr_divide_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"divide_ii", (PyCFunction) _wrap_divide_ii, METH_VARARGS | METH_KEYWORDS, (char *)"divide_ii(size_t vlen = 1) -> gr_divide_ii_sptr"},
	 { (char *)"new_gr_divide_ff_sptr", _wrap_new_gr_divide_ff_sptr, METH_VARARGS, (char *)"\n"
		"gr_divide_ff_sptr()\n"
		"new_gr_divide_ff_sptr( p) -> gr_divide_ff_sptr\n"
		""},
	 { (char *)"gr_divide_ff_sptr___deref__", _wrap_gr_divide_ff_sptr___deref__, METH_VARARGS, (char *)"gr_divide_ff_sptr___deref__(gr_divide_ff_sptr self)"},
	 { (char *)"delete_gr_divide_ff_sptr", _wrap_delete_gr_divide_ff_sptr, METH_VARARGS, (char *)"delete_gr_divide_ff_sptr(gr_divide_ff_sptr self)"},
	 { (char *)"gr_divide_ff_sptr_history", _wrap_gr_divide_ff_sptr_history, METH_VARARGS, (char *)"gr_divide_ff_sptr_history(gr_divide_ff_sptr self) -> unsigned int"},
	 { (char *)"gr_divide_ff_sptr_output_multiple", _wrap_gr_divide_ff_sptr_output_multiple, METH_VARARGS, (char *)"gr_divide_ff_sptr_output_multiple(gr_divide_ff_sptr self) -> int"},
	 { (char *)"gr_divide_ff_sptr_relative_rate", _wrap_gr_divide_ff_sptr_relative_rate, METH_VARARGS, (char *)"gr_divide_ff_sptr_relative_rate(gr_divide_ff_sptr self) -> double"},
	 { (char *)"gr_divide_ff_sptr_start", _wrap_gr_divide_ff_sptr_start, METH_VARARGS, (char *)"gr_divide_ff_sptr_start(gr_divide_ff_sptr self) -> bool"},
	 { (char *)"gr_divide_ff_sptr_stop", _wrap_gr_divide_ff_sptr_stop, METH_VARARGS, (char *)"gr_divide_ff_sptr_stop(gr_divide_ff_sptr self) -> bool"},
	 { (char *)"gr_divide_ff_sptr_nitems_read", (PyCFunction) _wrap_gr_divide_ff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ff_sptr_nitems_read(gr_divide_ff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_divide_ff_sptr_nitems_written", (PyCFunction) _wrap_gr_divide_ff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ff_sptr_nitems_written(gr_divide_ff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_divide_ff_sptr_detail", _wrap_gr_divide_ff_sptr_detail, METH_VARARGS, (char *)"gr_divide_ff_sptr_detail(gr_divide_ff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_divide_ff_sptr_set_detail", (PyCFunction) _wrap_gr_divide_ff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ff_sptr_set_detail(gr_divide_ff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_divide_ff_sptr_name", _wrap_gr_divide_ff_sptr_name, METH_VARARGS, (char *)"gr_divide_ff_sptr_name(gr_divide_ff_sptr self) -> string"},
	 { (char *)"gr_divide_ff_sptr_input_signature", _wrap_gr_divide_ff_sptr_input_signature, METH_VARARGS, (char *)"gr_divide_ff_sptr_input_signature(gr_divide_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_divide_ff_sptr_output_signature", _wrap_gr_divide_ff_sptr_output_signature, METH_VARARGS, (char *)"gr_divide_ff_sptr_output_signature(gr_divide_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_divide_ff_sptr_unique_id", _wrap_gr_divide_ff_sptr_unique_id, METH_VARARGS, (char *)"gr_divide_ff_sptr_unique_id(gr_divide_ff_sptr self) -> long"},
	 { (char *)"gr_divide_ff_sptr_to_basic_block", _wrap_gr_divide_ff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_divide_ff_sptr_to_basic_block(gr_divide_ff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_divide_ff_sptr_check_topology", (PyCFunction) _wrap_gr_divide_ff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_ff_sptr_check_topology(gr_divide_ff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_divide_ff_sptr_swigregister", gr_divide_ff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"divide_ff", (PyCFunction) _wrap_divide_ff, METH_VARARGS | METH_KEYWORDS, (char *)"divide_ff(size_t vlen = 1) -> gr_divide_ff_sptr"},
	 { (char *)"new_gr_divide_cc_sptr", _wrap_new_gr_divide_cc_sptr, METH_VARARGS, (char *)"\n"
		"gr_divide_cc_sptr()\n"
		"new_gr_divide_cc_sptr( p) -> gr_divide_cc_sptr\n"
		""},
	 { (char *)"gr_divide_cc_sptr___deref__", _wrap_gr_divide_cc_sptr___deref__, METH_VARARGS, (char *)"gr_divide_cc_sptr___deref__(gr_divide_cc_sptr self)"},
	 { (char *)"delete_gr_divide_cc_sptr", _wrap_delete_gr_divide_cc_sptr, METH_VARARGS, (char *)"delete_gr_divide_cc_sptr(gr_divide_cc_sptr self)"},
	 { (char *)"gr_divide_cc_sptr_history", _wrap_gr_divide_cc_sptr_history, METH_VARARGS, (char *)"gr_divide_cc_sptr_history(gr_divide_cc_sptr self) -> unsigned int"},
	 { (char *)"gr_divide_cc_sptr_output_multiple", _wrap_gr_divide_cc_sptr_output_multiple, METH_VARARGS, (char *)"gr_divide_cc_sptr_output_multiple(gr_divide_cc_sptr self) -> int"},
	 { (char *)"gr_divide_cc_sptr_relative_rate", _wrap_gr_divide_cc_sptr_relative_rate, METH_VARARGS, (char *)"gr_divide_cc_sptr_relative_rate(gr_divide_cc_sptr self) -> double"},
	 { (char *)"gr_divide_cc_sptr_start", _wrap_gr_divide_cc_sptr_start, METH_VARARGS, (char *)"gr_divide_cc_sptr_start(gr_divide_cc_sptr self) -> bool"},
	 { (char *)"gr_divide_cc_sptr_stop", _wrap_gr_divide_cc_sptr_stop, METH_VARARGS, (char *)"gr_divide_cc_sptr_stop(gr_divide_cc_sptr self) -> bool"},
	 { (char *)"gr_divide_cc_sptr_nitems_read", (PyCFunction) _wrap_gr_divide_cc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_cc_sptr_nitems_read(gr_divide_cc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_divide_cc_sptr_nitems_written", (PyCFunction) _wrap_gr_divide_cc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_cc_sptr_nitems_written(gr_divide_cc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_divide_cc_sptr_detail", _wrap_gr_divide_cc_sptr_detail, METH_VARARGS, (char *)"gr_divide_cc_sptr_detail(gr_divide_cc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_divide_cc_sptr_set_detail", (PyCFunction) _wrap_gr_divide_cc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_cc_sptr_set_detail(gr_divide_cc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_divide_cc_sptr_name", _wrap_gr_divide_cc_sptr_name, METH_VARARGS, (char *)"gr_divide_cc_sptr_name(gr_divide_cc_sptr self) -> string"},
	 { (char *)"gr_divide_cc_sptr_input_signature", _wrap_gr_divide_cc_sptr_input_signature, METH_VARARGS, (char *)"gr_divide_cc_sptr_input_signature(gr_divide_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_divide_cc_sptr_output_signature", _wrap_gr_divide_cc_sptr_output_signature, METH_VARARGS, (char *)"gr_divide_cc_sptr_output_signature(gr_divide_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_divide_cc_sptr_unique_id", _wrap_gr_divide_cc_sptr_unique_id, METH_VARARGS, (char *)"gr_divide_cc_sptr_unique_id(gr_divide_cc_sptr self) -> long"},
	 { (char *)"gr_divide_cc_sptr_to_basic_block", _wrap_gr_divide_cc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_divide_cc_sptr_to_basic_block(gr_divide_cc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_divide_cc_sptr_check_topology", (PyCFunction) _wrap_gr_divide_cc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_divide_cc_sptr_check_topology(gr_divide_cc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_divide_cc_sptr_swigregister", gr_divide_cc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"divide_cc", (PyCFunction) _wrap_divide_cc, METH_VARARGS | METH_KEYWORDS, (char *)"divide_cc(size_t vlen = 1) -> gr_divide_cc_sptr"},
	 { (char *)"new_gr_mute_ss_sptr", _wrap_new_gr_mute_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_mute_ss_sptr()\n"
		"new_gr_mute_ss_sptr( p) -> gr_mute_ss_sptr\n"
		""},
	 { (char *)"gr_mute_ss_sptr___deref__", _wrap_gr_mute_ss_sptr___deref__, METH_VARARGS, (char *)"gr_mute_ss_sptr___deref__(gr_mute_ss_sptr self)"},
	 { (char *)"delete_gr_mute_ss_sptr", _wrap_delete_gr_mute_ss_sptr, METH_VARARGS, (char *)"delete_gr_mute_ss_sptr(gr_mute_ss_sptr self)"},
	 { (char *)"gr_mute_ss_sptr_mute", _wrap_gr_mute_ss_sptr_mute, METH_VARARGS, (char *)"gr_mute_ss_sptr_mute(gr_mute_ss_sptr self) -> bool"},
	 { (char *)"gr_mute_ss_sptr_set_mute", (PyCFunction) _wrap_gr_mute_ss_sptr_set_mute, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ss_sptr_set_mute(gr_mute_ss_sptr self, bool mute)"},
	 { (char *)"gr_mute_ss_sptr_history", _wrap_gr_mute_ss_sptr_history, METH_VARARGS, (char *)"gr_mute_ss_sptr_history(gr_mute_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_mute_ss_sptr_output_multiple", _wrap_gr_mute_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_mute_ss_sptr_output_multiple(gr_mute_ss_sptr self) -> int"},
	 { (char *)"gr_mute_ss_sptr_relative_rate", _wrap_gr_mute_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_mute_ss_sptr_relative_rate(gr_mute_ss_sptr self) -> double"},
	 { (char *)"gr_mute_ss_sptr_start", _wrap_gr_mute_ss_sptr_start, METH_VARARGS, (char *)"gr_mute_ss_sptr_start(gr_mute_ss_sptr self) -> bool"},
	 { (char *)"gr_mute_ss_sptr_stop", _wrap_gr_mute_ss_sptr_stop, METH_VARARGS, (char *)"gr_mute_ss_sptr_stop(gr_mute_ss_sptr self) -> bool"},
	 { (char *)"gr_mute_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_mute_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ss_sptr_nitems_read(gr_mute_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_mute_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_mute_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ss_sptr_nitems_written(gr_mute_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_mute_ss_sptr_detail", _wrap_gr_mute_ss_sptr_detail, METH_VARARGS, (char *)"gr_mute_ss_sptr_detail(gr_mute_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_mute_ss_sptr_set_detail", (PyCFunction) _wrap_gr_mute_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ss_sptr_set_detail(gr_mute_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_mute_ss_sptr_name", _wrap_gr_mute_ss_sptr_name, METH_VARARGS, (char *)"gr_mute_ss_sptr_name(gr_mute_ss_sptr self) -> string"},
	 { (char *)"gr_mute_ss_sptr_input_signature", _wrap_gr_mute_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_mute_ss_sptr_input_signature(gr_mute_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_mute_ss_sptr_output_signature", _wrap_gr_mute_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_mute_ss_sptr_output_signature(gr_mute_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_mute_ss_sptr_unique_id", _wrap_gr_mute_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_mute_ss_sptr_unique_id(gr_mute_ss_sptr self) -> long"},
	 { (char *)"gr_mute_ss_sptr_to_basic_block", _wrap_gr_mute_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_mute_ss_sptr_to_basic_block(gr_mute_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_mute_ss_sptr_check_topology", (PyCFunction) _wrap_gr_mute_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ss_sptr_check_topology(gr_mute_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_mute_ss_sptr_swigregister", gr_mute_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"mute_ss", (PyCFunction) _wrap_mute_ss, METH_VARARGS | METH_KEYWORDS, (char *)"mute_ss(bool mute = False) -> gr_mute_ss_sptr"},
	 { (char *)"new_gr_mute_ii_sptr", _wrap_new_gr_mute_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_mute_ii_sptr()\n"
		"new_gr_mute_ii_sptr( p) -> gr_mute_ii_sptr\n"
		""},
	 { (char *)"gr_mute_ii_sptr___deref__", _wrap_gr_mute_ii_sptr___deref__, METH_VARARGS, (char *)"gr_mute_ii_sptr___deref__(gr_mute_ii_sptr self)"},
	 { (char *)"delete_gr_mute_ii_sptr", _wrap_delete_gr_mute_ii_sptr, METH_VARARGS, (char *)"delete_gr_mute_ii_sptr(gr_mute_ii_sptr self)"},
	 { (char *)"gr_mute_ii_sptr_mute", _wrap_gr_mute_ii_sptr_mute, METH_VARARGS, (char *)"gr_mute_ii_sptr_mute(gr_mute_ii_sptr self) -> bool"},
	 { (char *)"gr_mute_ii_sptr_set_mute", (PyCFunction) _wrap_gr_mute_ii_sptr_set_mute, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ii_sptr_set_mute(gr_mute_ii_sptr self, bool mute)"},
	 { (char *)"gr_mute_ii_sptr_history", _wrap_gr_mute_ii_sptr_history, METH_VARARGS, (char *)"gr_mute_ii_sptr_history(gr_mute_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_mute_ii_sptr_output_multiple", _wrap_gr_mute_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_mute_ii_sptr_output_multiple(gr_mute_ii_sptr self) -> int"},
	 { (char *)"gr_mute_ii_sptr_relative_rate", _wrap_gr_mute_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_mute_ii_sptr_relative_rate(gr_mute_ii_sptr self) -> double"},
	 { (char *)"gr_mute_ii_sptr_start", _wrap_gr_mute_ii_sptr_start, METH_VARARGS, (char *)"gr_mute_ii_sptr_start(gr_mute_ii_sptr self) -> bool"},
	 { (char *)"gr_mute_ii_sptr_stop", _wrap_gr_mute_ii_sptr_stop, METH_VARARGS, (char *)"gr_mute_ii_sptr_stop(gr_mute_ii_sptr self) -> bool"},
	 { (char *)"gr_mute_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_mute_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ii_sptr_nitems_read(gr_mute_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_mute_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_mute_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ii_sptr_nitems_written(gr_mute_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_mute_ii_sptr_detail", _wrap_gr_mute_ii_sptr_detail, METH_VARARGS, (char *)"gr_mute_ii_sptr_detail(gr_mute_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_mute_ii_sptr_set_detail", (PyCFunction) _wrap_gr_mute_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ii_sptr_set_detail(gr_mute_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_mute_ii_sptr_name", _wrap_gr_mute_ii_sptr_name, METH_VARARGS, (char *)"gr_mute_ii_sptr_name(gr_mute_ii_sptr self) -> string"},
	 { (char *)"gr_mute_ii_sptr_input_signature", _wrap_gr_mute_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_mute_ii_sptr_input_signature(gr_mute_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_mute_ii_sptr_output_signature", _wrap_gr_mute_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_mute_ii_sptr_output_signature(gr_mute_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_mute_ii_sptr_unique_id", _wrap_gr_mute_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_mute_ii_sptr_unique_id(gr_mute_ii_sptr self) -> long"},
	 { (char *)"gr_mute_ii_sptr_to_basic_block", _wrap_gr_mute_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_mute_ii_sptr_to_basic_block(gr_mute_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_mute_ii_sptr_check_topology", (PyCFunction) _wrap_gr_mute_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ii_sptr_check_topology(gr_mute_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_mute_ii_sptr_swigregister", gr_mute_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"mute_ii", (PyCFunction) _wrap_mute_ii, METH_VARARGS | METH_KEYWORDS, (char *)"mute_ii(bool mute = False) -> gr_mute_ii_sptr"},
	 { (char *)"new_gr_mute_ff_sptr", _wrap_new_gr_mute_ff_sptr, METH_VARARGS, (char *)"\n"
		"gr_mute_ff_sptr()\n"
		"new_gr_mute_ff_sptr( p) -> gr_mute_ff_sptr\n"
		""},
	 { (char *)"gr_mute_ff_sptr___deref__", _wrap_gr_mute_ff_sptr___deref__, METH_VARARGS, (char *)"gr_mute_ff_sptr___deref__(gr_mute_ff_sptr self)"},
	 { (char *)"delete_gr_mute_ff_sptr", _wrap_delete_gr_mute_ff_sptr, METH_VARARGS, (char *)"delete_gr_mute_ff_sptr(gr_mute_ff_sptr self)"},
	 { (char *)"gr_mute_ff_sptr_mute", _wrap_gr_mute_ff_sptr_mute, METH_VARARGS, (char *)"gr_mute_ff_sptr_mute(gr_mute_ff_sptr self) -> bool"},
	 { (char *)"gr_mute_ff_sptr_set_mute", (PyCFunction) _wrap_gr_mute_ff_sptr_set_mute, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ff_sptr_set_mute(gr_mute_ff_sptr self, bool mute)"},
	 { (char *)"gr_mute_ff_sptr_history", _wrap_gr_mute_ff_sptr_history, METH_VARARGS, (char *)"gr_mute_ff_sptr_history(gr_mute_ff_sptr self) -> unsigned int"},
	 { (char *)"gr_mute_ff_sptr_output_multiple", _wrap_gr_mute_ff_sptr_output_multiple, METH_VARARGS, (char *)"gr_mute_ff_sptr_output_multiple(gr_mute_ff_sptr self) -> int"},
	 { (char *)"gr_mute_ff_sptr_relative_rate", _wrap_gr_mute_ff_sptr_relative_rate, METH_VARARGS, (char *)"gr_mute_ff_sptr_relative_rate(gr_mute_ff_sptr self) -> double"},
	 { (char *)"gr_mute_ff_sptr_start", _wrap_gr_mute_ff_sptr_start, METH_VARARGS, (char *)"gr_mute_ff_sptr_start(gr_mute_ff_sptr self) -> bool"},
	 { (char *)"gr_mute_ff_sptr_stop", _wrap_gr_mute_ff_sptr_stop, METH_VARARGS, (char *)"gr_mute_ff_sptr_stop(gr_mute_ff_sptr self) -> bool"},
	 { (char *)"gr_mute_ff_sptr_nitems_read", (PyCFunction) _wrap_gr_mute_ff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ff_sptr_nitems_read(gr_mute_ff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_mute_ff_sptr_nitems_written", (PyCFunction) _wrap_gr_mute_ff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ff_sptr_nitems_written(gr_mute_ff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_mute_ff_sptr_detail", _wrap_gr_mute_ff_sptr_detail, METH_VARARGS, (char *)"gr_mute_ff_sptr_detail(gr_mute_ff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_mute_ff_sptr_set_detail", (PyCFunction) _wrap_gr_mute_ff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ff_sptr_set_detail(gr_mute_ff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_mute_ff_sptr_name", _wrap_gr_mute_ff_sptr_name, METH_VARARGS, (char *)"gr_mute_ff_sptr_name(gr_mute_ff_sptr self) -> string"},
	 { (char *)"gr_mute_ff_sptr_input_signature", _wrap_gr_mute_ff_sptr_input_signature, METH_VARARGS, (char *)"gr_mute_ff_sptr_input_signature(gr_mute_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_mute_ff_sptr_output_signature", _wrap_gr_mute_ff_sptr_output_signature, METH_VARARGS, (char *)"gr_mute_ff_sptr_output_signature(gr_mute_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_mute_ff_sptr_unique_id", _wrap_gr_mute_ff_sptr_unique_id, METH_VARARGS, (char *)"gr_mute_ff_sptr_unique_id(gr_mute_ff_sptr self) -> long"},
	 { (char *)"gr_mute_ff_sptr_to_basic_block", _wrap_gr_mute_ff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_mute_ff_sptr_to_basic_block(gr_mute_ff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_mute_ff_sptr_check_topology", (PyCFunction) _wrap_gr_mute_ff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_ff_sptr_check_topology(gr_mute_ff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_mute_ff_sptr_swigregister", gr_mute_ff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"mute_ff", (PyCFunction) _wrap_mute_ff, METH_VARARGS | METH_KEYWORDS, (char *)"mute_ff(bool mute = False) -> gr_mute_ff_sptr"},
	 { (char *)"new_gr_mute_cc_sptr", _wrap_new_gr_mute_cc_sptr, METH_VARARGS, (char *)"\n"
		"gr_mute_cc_sptr()\n"
		"new_gr_mute_cc_sptr( p) -> gr_mute_cc_sptr\n"
		""},
	 { (char *)"gr_mute_cc_sptr___deref__", _wrap_gr_mute_cc_sptr___deref__, METH_VARARGS, (char *)"gr_mute_cc_sptr___deref__(gr_mute_cc_sptr self)"},
	 { (char *)"delete_gr_mute_cc_sptr", _wrap_delete_gr_mute_cc_sptr, METH_VARARGS, (char *)"delete_gr_mute_cc_sptr(gr_mute_cc_sptr self)"},
	 { (char *)"gr_mute_cc_sptr_mute", _wrap_gr_mute_cc_sptr_mute, METH_VARARGS, (char *)"gr_mute_cc_sptr_mute(gr_mute_cc_sptr self) -> bool"},
	 { (char *)"gr_mute_cc_sptr_set_mute", (PyCFunction) _wrap_gr_mute_cc_sptr_set_mute, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_cc_sptr_set_mute(gr_mute_cc_sptr self, bool mute)"},
	 { (char *)"gr_mute_cc_sptr_history", _wrap_gr_mute_cc_sptr_history, METH_VARARGS, (char *)"gr_mute_cc_sptr_history(gr_mute_cc_sptr self) -> unsigned int"},
	 { (char *)"gr_mute_cc_sptr_output_multiple", _wrap_gr_mute_cc_sptr_output_multiple, METH_VARARGS, (char *)"gr_mute_cc_sptr_output_multiple(gr_mute_cc_sptr self) -> int"},
	 { (char *)"gr_mute_cc_sptr_relative_rate", _wrap_gr_mute_cc_sptr_relative_rate, METH_VARARGS, (char *)"gr_mute_cc_sptr_relative_rate(gr_mute_cc_sptr self) -> double"},
	 { (char *)"gr_mute_cc_sptr_start", _wrap_gr_mute_cc_sptr_start, METH_VARARGS, (char *)"gr_mute_cc_sptr_start(gr_mute_cc_sptr self) -> bool"},
	 { (char *)"gr_mute_cc_sptr_stop", _wrap_gr_mute_cc_sptr_stop, METH_VARARGS, (char *)"gr_mute_cc_sptr_stop(gr_mute_cc_sptr self) -> bool"},
	 { (char *)"gr_mute_cc_sptr_nitems_read", (PyCFunction) _wrap_gr_mute_cc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_cc_sptr_nitems_read(gr_mute_cc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_mute_cc_sptr_nitems_written", (PyCFunction) _wrap_gr_mute_cc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_cc_sptr_nitems_written(gr_mute_cc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_mute_cc_sptr_detail", _wrap_gr_mute_cc_sptr_detail, METH_VARARGS, (char *)"gr_mute_cc_sptr_detail(gr_mute_cc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_mute_cc_sptr_set_detail", (PyCFunction) _wrap_gr_mute_cc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_cc_sptr_set_detail(gr_mute_cc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_mute_cc_sptr_name", _wrap_gr_mute_cc_sptr_name, METH_VARARGS, (char *)"gr_mute_cc_sptr_name(gr_mute_cc_sptr self) -> string"},
	 { (char *)"gr_mute_cc_sptr_input_signature", _wrap_gr_mute_cc_sptr_input_signature, METH_VARARGS, (char *)"gr_mute_cc_sptr_input_signature(gr_mute_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_mute_cc_sptr_output_signature", _wrap_gr_mute_cc_sptr_output_signature, METH_VARARGS, (char *)"gr_mute_cc_sptr_output_signature(gr_mute_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_mute_cc_sptr_unique_id", _wrap_gr_mute_cc_sptr_unique_id, METH_VARARGS, (char *)"gr_mute_cc_sptr_unique_id(gr_mute_cc_sptr self) -> long"},
	 { (char *)"gr_mute_cc_sptr_to_basic_block", _wrap_gr_mute_cc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_mute_cc_sptr_to_basic_block(gr_mute_cc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_mute_cc_sptr_check_topology", (PyCFunction) _wrap_gr_mute_cc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_mute_cc_sptr_check_topology(gr_mute_cc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_mute_cc_sptr_swigregister", gr_mute_cc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"mute_cc", (PyCFunction) _wrap_mute_cc, METH_VARARGS | METH_KEYWORDS, (char *)"mute_cc(bool mute = False) -> gr_mute_cc_sptr"},
	 { (char *)"new_gr_add_const_vss_sptr", _wrap_new_gr_add_const_vss_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_const_vss_sptr()\n"
		"new_gr_add_const_vss_sptr( p) -> gr_add_const_vss_sptr\n"
		""},
	 { (char *)"gr_add_const_vss_sptr___deref__", _wrap_gr_add_const_vss_sptr___deref__, METH_VARARGS, (char *)"gr_add_const_vss_sptr___deref__(gr_add_const_vss_sptr self)"},
	 { (char *)"delete_gr_add_const_vss_sptr", _wrap_delete_gr_add_const_vss_sptr, METH_VARARGS, (char *)"delete_gr_add_const_vss_sptr(gr_add_const_vss_sptr self)"},
	 { (char *)"gr_add_const_vss_sptr_k", _wrap_gr_add_const_vss_sptr_k, METH_VARARGS, (char *)"gr_add_const_vss_sptr_k(gr_add_const_vss_sptr self) -> __dummy_2__"},
	 { (char *)"gr_add_const_vss_sptr_set_k", (PyCFunction) _wrap_gr_add_const_vss_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vss_sptr_set_k(gr_add_const_vss_sptr self, __dummy_2__ k)"},
	 { (char *)"gr_add_const_vss_sptr_history", _wrap_gr_add_const_vss_sptr_history, METH_VARARGS, (char *)"gr_add_const_vss_sptr_history(gr_add_const_vss_sptr self) -> unsigned int"},
	 { (char *)"gr_add_const_vss_sptr_output_multiple", _wrap_gr_add_const_vss_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_const_vss_sptr_output_multiple(gr_add_const_vss_sptr self) -> int"},
	 { (char *)"gr_add_const_vss_sptr_relative_rate", _wrap_gr_add_const_vss_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_const_vss_sptr_relative_rate(gr_add_const_vss_sptr self) -> double"},
	 { (char *)"gr_add_const_vss_sptr_start", _wrap_gr_add_const_vss_sptr_start, METH_VARARGS, (char *)"gr_add_const_vss_sptr_start(gr_add_const_vss_sptr self) -> bool"},
	 { (char *)"gr_add_const_vss_sptr_stop", _wrap_gr_add_const_vss_sptr_stop, METH_VARARGS, (char *)"gr_add_const_vss_sptr_stop(gr_add_const_vss_sptr self) -> bool"},
	 { (char *)"gr_add_const_vss_sptr_nitems_read", (PyCFunction) _wrap_gr_add_const_vss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vss_sptr_nitems_read(gr_add_const_vss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_const_vss_sptr_nitems_written", (PyCFunction) _wrap_gr_add_const_vss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vss_sptr_nitems_written(gr_add_const_vss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_const_vss_sptr_detail", _wrap_gr_add_const_vss_sptr_detail, METH_VARARGS, (char *)"gr_add_const_vss_sptr_detail(gr_add_const_vss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_const_vss_sptr_set_detail", (PyCFunction) _wrap_gr_add_const_vss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vss_sptr_set_detail(gr_add_const_vss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_const_vss_sptr_name", _wrap_gr_add_const_vss_sptr_name, METH_VARARGS, (char *)"gr_add_const_vss_sptr_name(gr_add_const_vss_sptr self) -> string"},
	 { (char *)"gr_add_const_vss_sptr_input_signature", _wrap_gr_add_const_vss_sptr_input_signature, METH_VARARGS, (char *)"gr_add_const_vss_sptr_input_signature(gr_add_const_vss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_vss_sptr_output_signature", _wrap_gr_add_const_vss_sptr_output_signature, METH_VARARGS, (char *)"gr_add_const_vss_sptr_output_signature(gr_add_const_vss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_vss_sptr_unique_id", _wrap_gr_add_const_vss_sptr_unique_id, METH_VARARGS, (char *)"gr_add_const_vss_sptr_unique_id(gr_add_const_vss_sptr self) -> long"},
	 { (char *)"gr_add_const_vss_sptr_to_basic_block", _wrap_gr_add_const_vss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_const_vss_sptr_to_basic_block(gr_add_const_vss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_const_vss_sptr_check_topology", (PyCFunction) _wrap_gr_add_const_vss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vss_sptr_check_topology(gr_add_const_vss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_const_vss_sptr_swigregister", gr_add_const_vss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_const_vss", (PyCFunction) _wrap_add_const_vss, METH_VARARGS | METH_KEYWORDS, (char *)"add_const_vss(__dummy_2__ k) -> gr_add_const_vss_sptr"},
	 { (char *)"new_gr_add_const_vii_sptr", _wrap_new_gr_add_const_vii_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_const_vii_sptr()\n"
		"new_gr_add_const_vii_sptr( p) -> gr_add_const_vii_sptr\n"
		""},
	 { (char *)"gr_add_const_vii_sptr___deref__", _wrap_gr_add_const_vii_sptr___deref__, METH_VARARGS, (char *)"gr_add_const_vii_sptr___deref__(gr_add_const_vii_sptr self)"},
	 { (char *)"delete_gr_add_const_vii_sptr", _wrap_delete_gr_add_const_vii_sptr, METH_VARARGS, (char *)"delete_gr_add_const_vii_sptr(gr_add_const_vii_sptr self)"},
	 { (char *)"gr_add_const_vii_sptr_k", _wrap_gr_add_const_vii_sptr_k, METH_VARARGS, (char *)"gr_add_const_vii_sptr_k(gr_add_const_vii_sptr self) -> __dummy_3__"},
	 { (char *)"gr_add_const_vii_sptr_set_k", (PyCFunction) _wrap_gr_add_const_vii_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vii_sptr_set_k(gr_add_const_vii_sptr self, __dummy_3__ k)"},
	 { (char *)"gr_add_const_vii_sptr_history", _wrap_gr_add_const_vii_sptr_history, METH_VARARGS, (char *)"gr_add_const_vii_sptr_history(gr_add_const_vii_sptr self) -> unsigned int"},
	 { (char *)"gr_add_const_vii_sptr_output_multiple", _wrap_gr_add_const_vii_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_const_vii_sptr_output_multiple(gr_add_const_vii_sptr self) -> int"},
	 { (char *)"gr_add_const_vii_sptr_relative_rate", _wrap_gr_add_const_vii_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_const_vii_sptr_relative_rate(gr_add_const_vii_sptr self) -> double"},
	 { (char *)"gr_add_const_vii_sptr_start", _wrap_gr_add_const_vii_sptr_start, METH_VARARGS, (char *)"gr_add_const_vii_sptr_start(gr_add_const_vii_sptr self) -> bool"},
	 { (char *)"gr_add_const_vii_sptr_stop", _wrap_gr_add_const_vii_sptr_stop, METH_VARARGS, (char *)"gr_add_const_vii_sptr_stop(gr_add_const_vii_sptr self) -> bool"},
	 { (char *)"gr_add_const_vii_sptr_nitems_read", (PyCFunction) _wrap_gr_add_const_vii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vii_sptr_nitems_read(gr_add_const_vii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_const_vii_sptr_nitems_written", (PyCFunction) _wrap_gr_add_const_vii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vii_sptr_nitems_written(gr_add_const_vii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_const_vii_sptr_detail", _wrap_gr_add_const_vii_sptr_detail, METH_VARARGS, (char *)"gr_add_const_vii_sptr_detail(gr_add_const_vii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_const_vii_sptr_set_detail", (PyCFunction) _wrap_gr_add_const_vii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vii_sptr_set_detail(gr_add_const_vii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_const_vii_sptr_name", _wrap_gr_add_const_vii_sptr_name, METH_VARARGS, (char *)"gr_add_const_vii_sptr_name(gr_add_const_vii_sptr self) -> string"},
	 { (char *)"gr_add_const_vii_sptr_input_signature", _wrap_gr_add_const_vii_sptr_input_signature, METH_VARARGS, (char *)"gr_add_const_vii_sptr_input_signature(gr_add_const_vii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_vii_sptr_output_signature", _wrap_gr_add_const_vii_sptr_output_signature, METH_VARARGS, (char *)"gr_add_const_vii_sptr_output_signature(gr_add_const_vii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_vii_sptr_unique_id", _wrap_gr_add_const_vii_sptr_unique_id, METH_VARARGS, (char *)"gr_add_const_vii_sptr_unique_id(gr_add_const_vii_sptr self) -> long"},
	 { (char *)"gr_add_const_vii_sptr_to_basic_block", _wrap_gr_add_const_vii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_const_vii_sptr_to_basic_block(gr_add_const_vii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_const_vii_sptr_check_topology", (PyCFunction) _wrap_gr_add_const_vii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vii_sptr_check_topology(gr_add_const_vii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_const_vii_sptr_swigregister", gr_add_const_vii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_const_vii", (PyCFunction) _wrap_add_const_vii, METH_VARARGS | METH_KEYWORDS, (char *)"add_const_vii(__dummy_3__ k) -> gr_add_const_vii_sptr"},
	 { (char *)"new_gr_add_const_vff_sptr", _wrap_new_gr_add_const_vff_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_const_vff_sptr()\n"
		"new_gr_add_const_vff_sptr( p) -> gr_add_const_vff_sptr\n"
		""},
	 { (char *)"gr_add_const_vff_sptr___deref__", _wrap_gr_add_const_vff_sptr___deref__, METH_VARARGS, (char *)"gr_add_const_vff_sptr___deref__(gr_add_const_vff_sptr self)"},
	 { (char *)"delete_gr_add_const_vff_sptr", _wrap_delete_gr_add_const_vff_sptr, METH_VARARGS, (char *)"delete_gr_add_const_vff_sptr(gr_add_const_vff_sptr self)"},
	 { (char *)"gr_add_const_vff_sptr_k", _wrap_gr_add_const_vff_sptr_k, METH_VARARGS, (char *)"gr_add_const_vff_sptr_k(gr_add_const_vff_sptr self) -> __dummy_4__"},
	 { (char *)"gr_add_const_vff_sptr_set_k", (PyCFunction) _wrap_gr_add_const_vff_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vff_sptr_set_k(gr_add_const_vff_sptr self, __dummy_4__ k)"},
	 { (char *)"gr_add_const_vff_sptr_history", _wrap_gr_add_const_vff_sptr_history, METH_VARARGS, (char *)"gr_add_const_vff_sptr_history(gr_add_const_vff_sptr self) -> unsigned int"},
	 { (char *)"gr_add_const_vff_sptr_output_multiple", _wrap_gr_add_const_vff_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_const_vff_sptr_output_multiple(gr_add_const_vff_sptr self) -> int"},
	 { (char *)"gr_add_const_vff_sptr_relative_rate", _wrap_gr_add_const_vff_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_const_vff_sptr_relative_rate(gr_add_const_vff_sptr self) -> double"},
	 { (char *)"gr_add_const_vff_sptr_start", _wrap_gr_add_const_vff_sptr_start, METH_VARARGS, (char *)"gr_add_const_vff_sptr_start(gr_add_const_vff_sptr self) -> bool"},
	 { (char *)"gr_add_const_vff_sptr_stop", _wrap_gr_add_const_vff_sptr_stop, METH_VARARGS, (char *)"gr_add_const_vff_sptr_stop(gr_add_const_vff_sptr self) -> bool"},
	 { (char *)"gr_add_const_vff_sptr_nitems_read", (PyCFunction) _wrap_gr_add_const_vff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vff_sptr_nitems_read(gr_add_const_vff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_const_vff_sptr_nitems_written", (PyCFunction) _wrap_gr_add_const_vff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vff_sptr_nitems_written(gr_add_const_vff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_const_vff_sptr_detail", _wrap_gr_add_const_vff_sptr_detail, METH_VARARGS, (char *)"gr_add_const_vff_sptr_detail(gr_add_const_vff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_const_vff_sptr_set_detail", (PyCFunction) _wrap_gr_add_const_vff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vff_sptr_set_detail(gr_add_const_vff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_const_vff_sptr_name", _wrap_gr_add_const_vff_sptr_name, METH_VARARGS, (char *)"gr_add_const_vff_sptr_name(gr_add_const_vff_sptr self) -> string"},
	 { (char *)"gr_add_const_vff_sptr_input_signature", _wrap_gr_add_const_vff_sptr_input_signature, METH_VARARGS, (char *)"gr_add_const_vff_sptr_input_signature(gr_add_const_vff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_vff_sptr_output_signature", _wrap_gr_add_const_vff_sptr_output_signature, METH_VARARGS, (char *)"gr_add_const_vff_sptr_output_signature(gr_add_const_vff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_vff_sptr_unique_id", _wrap_gr_add_const_vff_sptr_unique_id, METH_VARARGS, (char *)"gr_add_const_vff_sptr_unique_id(gr_add_const_vff_sptr self) -> long"},
	 { (char *)"gr_add_const_vff_sptr_to_basic_block", _wrap_gr_add_const_vff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_const_vff_sptr_to_basic_block(gr_add_const_vff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_const_vff_sptr_check_topology", (PyCFunction) _wrap_gr_add_const_vff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vff_sptr_check_topology(gr_add_const_vff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_const_vff_sptr_swigregister", gr_add_const_vff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_const_vff", (PyCFunction) _wrap_add_const_vff, METH_VARARGS | METH_KEYWORDS, (char *)"add_const_vff(__dummy_4__ k) -> gr_add_const_vff_sptr"},
	 { (char *)"new_gr_add_const_vcc_sptr", _wrap_new_gr_add_const_vcc_sptr, METH_VARARGS, (char *)"\n"
		"gr_add_const_vcc_sptr()\n"
		"new_gr_add_const_vcc_sptr( p) -> gr_add_const_vcc_sptr\n"
		""},
	 { (char *)"gr_add_const_vcc_sptr___deref__", _wrap_gr_add_const_vcc_sptr___deref__, METH_VARARGS, (char *)"gr_add_const_vcc_sptr___deref__(gr_add_const_vcc_sptr self)"},
	 { (char *)"delete_gr_add_const_vcc_sptr", _wrap_delete_gr_add_const_vcc_sptr, METH_VARARGS, (char *)"delete_gr_add_const_vcc_sptr(gr_add_const_vcc_sptr self)"},
	 { (char *)"gr_add_const_vcc_sptr_k", _wrap_gr_add_const_vcc_sptr_k, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_k(gr_add_const_vcc_sptr self) -> std::vector<(gr_complex,std::allocator<(gr_complex)>)>"},
	 { (char *)"gr_add_const_vcc_sptr_set_k", (PyCFunction) _wrap_gr_add_const_vcc_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vcc_sptr_set_k(gr_add_const_vcc_sptr self, std::vector<(gr_complex,std::allocator<(gr_complex)>)> k)"},
	 { (char *)"gr_add_const_vcc_sptr_history", _wrap_gr_add_const_vcc_sptr_history, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_history(gr_add_const_vcc_sptr self) -> unsigned int"},
	 { (char *)"gr_add_const_vcc_sptr_output_multiple", _wrap_gr_add_const_vcc_sptr_output_multiple, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_output_multiple(gr_add_const_vcc_sptr self) -> int"},
	 { (char *)"gr_add_const_vcc_sptr_relative_rate", _wrap_gr_add_const_vcc_sptr_relative_rate, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_relative_rate(gr_add_const_vcc_sptr self) -> double"},
	 { (char *)"gr_add_const_vcc_sptr_start", _wrap_gr_add_const_vcc_sptr_start, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_start(gr_add_const_vcc_sptr self) -> bool"},
	 { (char *)"gr_add_const_vcc_sptr_stop", _wrap_gr_add_const_vcc_sptr_stop, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_stop(gr_add_const_vcc_sptr self) -> bool"},
	 { (char *)"gr_add_const_vcc_sptr_nitems_read", (PyCFunction) _wrap_gr_add_const_vcc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vcc_sptr_nitems_read(gr_add_const_vcc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_add_const_vcc_sptr_nitems_written", (PyCFunction) _wrap_gr_add_const_vcc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vcc_sptr_nitems_written(gr_add_const_vcc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_add_const_vcc_sptr_detail", _wrap_gr_add_const_vcc_sptr_detail, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_detail(gr_add_const_vcc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_add_const_vcc_sptr_set_detail", (PyCFunction) _wrap_gr_add_const_vcc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vcc_sptr_set_detail(gr_add_const_vcc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_add_const_vcc_sptr_name", _wrap_gr_add_const_vcc_sptr_name, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_name(gr_add_const_vcc_sptr self) -> string"},
	 { (char *)"gr_add_const_vcc_sptr_input_signature", _wrap_gr_add_const_vcc_sptr_input_signature, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_input_signature(gr_add_const_vcc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_vcc_sptr_output_signature", _wrap_gr_add_const_vcc_sptr_output_signature, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_output_signature(gr_add_const_vcc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_add_const_vcc_sptr_unique_id", _wrap_gr_add_const_vcc_sptr_unique_id, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_unique_id(gr_add_const_vcc_sptr self) -> long"},
	 { (char *)"gr_add_const_vcc_sptr_to_basic_block", _wrap_gr_add_const_vcc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_add_const_vcc_sptr_to_basic_block(gr_add_const_vcc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_add_const_vcc_sptr_check_topology", (PyCFunction) _wrap_gr_add_const_vcc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_add_const_vcc_sptr_check_topology(gr_add_const_vcc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_add_const_vcc_sptr_swigregister", gr_add_const_vcc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"add_const_vcc", (PyCFunction) _wrap_add_const_vcc, METH_VARARGS | METH_KEYWORDS, (char *)"add_const_vcc(std::vector<(gr_complex,std::allocator<(gr_complex)>)> k) -> gr_add_const_vcc_sptr"},
	 { (char *)"new_gr_multiply_const_vss_sptr", _wrap_new_gr_multiply_const_vss_sptr, METH_VARARGS, (char *)"\n"
		"gr_multiply_const_vss_sptr()\n"
		"new_gr_multiply_const_vss_sptr( p) -> gr_multiply_const_vss_sptr\n"
		""},
	 { (char *)"gr_multiply_const_vss_sptr___deref__", _wrap_gr_multiply_const_vss_sptr___deref__, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr___deref__(gr_multiply_const_vss_sptr self)"},
	 { (char *)"delete_gr_multiply_const_vss_sptr", _wrap_delete_gr_multiply_const_vss_sptr, METH_VARARGS, (char *)"delete_gr_multiply_const_vss_sptr(gr_multiply_const_vss_sptr self)"},
	 { (char *)"gr_multiply_const_vss_sptr_k", _wrap_gr_multiply_const_vss_sptr_k, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_k(gr_multiply_const_vss_sptr self) -> __dummy_2__"},
	 { (char *)"gr_multiply_const_vss_sptr_set_k", (PyCFunction) _wrap_gr_multiply_const_vss_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vss_sptr_set_k(gr_multiply_const_vss_sptr self, __dummy_2__ k)"},
	 { (char *)"gr_multiply_const_vss_sptr_history", _wrap_gr_multiply_const_vss_sptr_history, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_history(gr_multiply_const_vss_sptr self) -> unsigned int"},
	 { (char *)"gr_multiply_const_vss_sptr_output_multiple", _wrap_gr_multiply_const_vss_sptr_output_multiple, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_output_multiple(gr_multiply_const_vss_sptr self) -> int"},
	 { (char *)"gr_multiply_const_vss_sptr_relative_rate", _wrap_gr_multiply_const_vss_sptr_relative_rate, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_relative_rate(gr_multiply_const_vss_sptr self) -> double"},
	 { (char *)"gr_multiply_const_vss_sptr_start", _wrap_gr_multiply_const_vss_sptr_start, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_start(gr_multiply_const_vss_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_vss_sptr_stop", _wrap_gr_multiply_const_vss_sptr_stop, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_stop(gr_multiply_const_vss_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_vss_sptr_nitems_read", (PyCFunction) _wrap_gr_multiply_const_vss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vss_sptr_nitems_read(gr_multiply_const_vss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_multiply_const_vss_sptr_nitems_written", (PyCFunction) _wrap_gr_multiply_const_vss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vss_sptr_nitems_written(gr_multiply_const_vss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_multiply_const_vss_sptr_detail", _wrap_gr_multiply_const_vss_sptr_detail, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_detail(gr_multiply_const_vss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_multiply_const_vss_sptr_set_detail", (PyCFunction) _wrap_gr_multiply_const_vss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vss_sptr_set_detail(gr_multiply_const_vss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_multiply_const_vss_sptr_name", _wrap_gr_multiply_const_vss_sptr_name, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_name(gr_multiply_const_vss_sptr self) -> string"},
	 { (char *)"gr_multiply_const_vss_sptr_input_signature", _wrap_gr_multiply_const_vss_sptr_input_signature, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_input_signature(gr_multiply_const_vss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_vss_sptr_output_signature", _wrap_gr_multiply_const_vss_sptr_output_signature, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_output_signature(gr_multiply_const_vss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_vss_sptr_unique_id", _wrap_gr_multiply_const_vss_sptr_unique_id, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_unique_id(gr_multiply_const_vss_sptr self) -> long"},
	 { (char *)"gr_multiply_const_vss_sptr_to_basic_block", _wrap_gr_multiply_const_vss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_multiply_const_vss_sptr_to_basic_block(gr_multiply_const_vss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_multiply_const_vss_sptr_check_topology", (PyCFunction) _wrap_gr_multiply_const_vss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vss_sptr_check_topology(gr_multiply_const_vss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_multiply_const_vss_sptr_swigregister", gr_multiply_const_vss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"multiply_const_vss", (PyCFunction) _wrap_multiply_const_vss, METH_VARARGS | METH_KEYWORDS, (char *)"multiply_const_vss(__dummy_2__ k) -> gr_multiply_const_vss_sptr"},
	 { (char *)"new_gr_multiply_const_vii_sptr", _wrap_new_gr_multiply_const_vii_sptr, METH_VARARGS, (char *)"\n"
		"gr_multiply_const_vii_sptr()\n"
		"new_gr_multiply_const_vii_sptr( p) -> gr_multiply_const_vii_sptr\n"
		""},
	 { (char *)"gr_multiply_const_vii_sptr___deref__", _wrap_gr_multiply_const_vii_sptr___deref__, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr___deref__(gr_multiply_const_vii_sptr self)"},
	 { (char *)"delete_gr_multiply_const_vii_sptr", _wrap_delete_gr_multiply_const_vii_sptr, METH_VARARGS, (char *)"delete_gr_multiply_const_vii_sptr(gr_multiply_const_vii_sptr self)"},
	 { (char *)"gr_multiply_const_vii_sptr_k", _wrap_gr_multiply_const_vii_sptr_k, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_k(gr_multiply_const_vii_sptr self) -> __dummy_3__"},
	 { (char *)"gr_multiply_const_vii_sptr_set_k", (PyCFunction) _wrap_gr_multiply_const_vii_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vii_sptr_set_k(gr_multiply_const_vii_sptr self, __dummy_3__ k)"},
	 { (char *)"gr_multiply_const_vii_sptr_history", _wrap_gr_multiply_const_vii_sptr_history, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_history(gr_multiply_const_vii_sptr self) -> unsigned int"},
	 { (char *)"gr_multiply_const_vii_sptr_output_multiple", _wrap_gr_multiply_const_vii_sptr_output_multiple, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_output_multiple(gr_multiply_const_vii_sptr self) -> int"},
	 { (char *)"gr_multiply_const_vii_sptr_relative_rate", _wrap_gr_multiply_const_vii_sptr_relative_rate, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_relative_rate(gr_multiply_const_vii_sptr self) -> double"},
	 { (char *)"gr_multiply_const_vii_sptr_start", _wrap_gr_multiply_const_vii_sptr_start, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_start(gr_multiply_const_vii_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_vii_sptr_stop", _wrap_gr_multiply_const_vii_sptr_stop, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_stop(gr_multiply_const_vii_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_vii_sptr_nitems_read", (PyCFunction) _wrap_gr_multiply_const_vii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vii_sptr_nitems_read(gr_multiply_const_vii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_multiply_const_vii_sptr_nitems_written", (PyCFunction) _wrap_gr_multiply_const_vii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vii_sptr_nitems_written(gr_multiply_const_vii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_multiply_const_vii_sptr_detail", _wrap_gr_multiply_const_vii_sptr_detail, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_detail(gr_multiply_const_vii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_multiply_const_vii_sptr_set_detail", (PyCFunction) _wrap_gr_multiply_const_vii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vii_sptr_set_detail(gr_multiply_const_vii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_multiply_const_vii_sptr_name", _wrap_gr_multiply_const_vii_sptr_name, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_name(gr_multiply_const_vii_sptr self) -> string"},
	 { (char *)"gr_multiply_const_vii_sptr_input_signature", _wrap_gr_multiply_const_vii_sptr_input_signature, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_input_signature(gr_multiply_const_vii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_vii_sptr_output_signature", _wrap_gr_multiply_const_vii_sptr_output_signature, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_output_signature(gr_multiply_const_vii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_vii_sptr_unique_id", _wrap_gr_multiply_const_vii_sptr_unique_id, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_unique_id(gr_multiply_const_vii_sptr self) -> long"},
	 { (char *)"gr_multiply_const_vii_sptr_to_basic_block", _wrap_gr_multiply_const_vii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_multiply_const_vii_sptr_to_basic_block(gr_multiply_const_vii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_multiply_const_vii_sptr_check_topology", (PyCFunction) _wrap_gr_multiply_const_vii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vii_sptr_check_topology(gr_multiply_const_vii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_multiply_const_vii_sptr_swigregister", gr_multiply_const_vii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"multiply_const_vii", (PyCFunction) _wrap_multiply_const_vii, METH_VARARGS | METH_KEYWORDS, (char *)"multiply_const_vii(__dummy_3__ k) -> gr_multiply_const_vii_sptr"},
	 { (char *)"new_gr_multiply_const_vff_sptr", _wrap_new_gr_multiply_const_vff_sptr, METH_VARARGS, (char *)"\n"
		"gr_multiply_const_vff_sptr()\n"
		"new_gr_multiply_const_vff_sptr( p) -> gr_multiply_const_vff_sptr\n"
		""},
	 { (char *)"gr_multiply_const_vff_sptr___deref__", _wrap_gr_multiply_const_vff_sptr___deref__, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr___deref__(gr_multiply_const_vff_sptr self)"},
	 { (char *)"delete_gr_multiply_const_vff_sptr", _wrap_delete_gr_multiply_const_vff_sptr, METH_VARARGS, (char *)"delete_gr_multiply_const_vff_sptr(gr_multiply_const_vff_sptr self)"},
	 { (char *)"gr_multiply_const_vff_sptr_k", _wrap_gr_multiply_const_vff_sptr_k, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_k(gr_multiply_const_vff_sptr self) -> __dummy_4__"},
	 { (char *)"gr_multiply_const_vff_sptr_set_k", (PyCFunction) _wrap_gr_multiply_const_vff_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vff_sptr_set_k(gr_multiply_const_vff_sptr self, __dummy_4__ k)"},
	 { (char *)"gr_multiply_const_vff_sptr_history", _wrap_gr_multiply_const_vff_sptr_history, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_history(gr_multiply_const_vff_sptr self) -> unsigned int"},
	 { (char *)"gr_multiply_const_vff_sptr_output_multiple", _wrap_gr_multiply_const_vff_sptr_output_multiple, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_output_multiple(gr_multiply_const_vff_sptr self) -> int"},
	 { (char *)"gr_multiply_const_vff_sptr_relative_rate", _wrap_gr_multiply_const_vff_sptr_relative_rate, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_relative_rate(gr_multiply_const_vff_sptr self) -> double"},
	 { (char *)"gr_multiply_const_vff_sptr_start", _wrap_gr_multiply_const_vff_sptr_start, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_start(gr_multiply_const_vff_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_vff_sptr_stop", _wrap_gr_multiply_const_vff_sptr_stop, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_stop(gr_multiply_const_vff_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_vff_sptr_nitems_read", (PyCFunction) _wrap_gr_multiply_const_vff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vff_sptr_nitems_read(gr_multiply_const_vff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_multiply_const_vff_sptr_nitems_written", (PyCFunction) _wrap_gr_multiply_const_vff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vff_sptr_nitems_written(gr_multiply_const_vff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_multiply_const_vff_sptr_detail", _wrap_gr_multiply_const_vff_sptr_detail, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_detail(gr_multiply_const_vff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_multiply_const_vff_sptr_set_detail", (PyCFunction) _wrap_gr_multiply_const_vff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vff_sptr_set_detail(gr_multiply_const_vff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_multiply_const_vff_sptr_name", _wrap_gr_multiply_const_vff_sptr_name, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_name(gr_multiply_const_vff_sptr self) -> string"},
	 { (char *)"gr_multiply_const_vff_sptr_input_signature", _wrap_gr_multiply_const_vff_sptr_input_signature, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_input_signature(gr_multiply_const_vff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_vff_sptr_output_signature", _wrap_gr_multiply_const_vff_sptr_output_signature, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_output_signature(gr_multiply_const_vff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_vff_sptr_unique_id", _wrap_gr_multiply_const_vff_sptr_unique_id, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_unique_id(gr_multiply_const_vff_sptr self) -> long"},
	 { (char *)"gr_multiply_const_vff_sptr_to_basic_block", _wrap_gr_multiply_const_vff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_multiply_const_vff_sptr_to_basic_block(gr_multiply_const_vff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_multiply_const_vff_sptr_check_topology", (PyCFunction) _wrap_gr_multiply_const_vff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vff_sptr_check_topology(gr_multiply_const_vff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_multiply_const_vff_sptr_swigregister", gr_multiply_const_vff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"multiply_const_vff", (PyCFunction) _wrap_multiply_const_vff, METH_VARARGS | METH_KEYWORDS, (char *)"multiply_const_vff(__dummy_4__ k) -> gr_multiply_const_vff_sptr"},
	 { (char *)"new_gr_multiply_const_vcc_sptr", _wrap_new_gr_multiply_const_vcc_sptr, METH_VARARGS, (char *)"\n"
		"gr_multiply_const_vcc_sptr()\n"
		"new_gr_multiply_const_vcc_sptr( p) -> gr_multiply_const_vcc_sptr\n"
		""},
	 { (char *)"gr_multiply_const_vcc_sptr___deref__", _wrap_gr_multiply_const_vcc_sptr___deref__, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr___deref__(gr_multiply_const_vcc_sptr self)"},
	 { (char *)"delete_gr_multiply_const_vcc_sptr", _wrap_delete_gr_multiply_const_vcc_sptr, METH_VARARGS, (char *)"delete_gr_multiply_const_vcc_sptr(gr_multiply_const_vcc_sptr self)"},
	 { (char *)"gr_multiply_const_vcc_sptr_k", _wrap_gr_multiply_const_vcc_sptr_k, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_k(gr_multiply_const_vcc_sptr self) -> std::vector<(gr_complex,std::allocator<(gr_complex)>)>"},
	 { (char *)"gr_multiply_const_vcc_sptr_set_k", (PyCFunction) _wrap_gr_multiply_const_vcc_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vcc_sptr_set_k(gr_multiply_const_vcc_sptr self, std::vector<(gr_complex,std::allocator<(gr_complex)>)> k)"},
	 { (char *)"gr_multiply_const_vcc_sptr_history", _wrap_gr_multiply_const_vcc_sptr_history, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_history(gr_multiply_const_vcc_sptr self) -> unsigned int"},
	 { (char *)"gr_multiply_const_vcc_sptr_output_multiple", _wrap_gr_multiply_const_vcc_sptr_output_multiple, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_output_multiple(gr_multiply_const_vcc_sptr self) -> int"},
	 { (char *)"gr_multiply_const_vcc_sptr_relative_rate", _wrap_gr_multiply_const_vcc_sptr_relative_rate, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_relative_rate(gr_multiply_const_vcc_sptr self) -> double"},
	 { (char *)"gr_multiply_const_vcc_sptr_start", _wrap_gr_multiply_const_vcc_sptr_start, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_start(gr_multiply_const_vcc_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_vcc_sptr_stop", _wrap_gr_multiply_const_vcc_sptr_stop, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_stop(gr_multiply_const_vcc_sptr self) -> bool"},
	 { (char *)"gr_multiply_const_vcc_sptr_nitems_read", (PyCFunction) _wrap_gr_multiply_const_vcc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vcc_sptr_nitems_read(gr_multiply_const_vcc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_multiply_const_vcc_sptr_nitems_written", (PyCFunction) _wrap_gr_multiply_const_vcc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vcc_sptr_nitems_written(gr_multiply_const_vcc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_multiply_const_vcc_sptr_detail", _wrap_gr_multiply_const_vcc_sptr_detail, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_detail(gr_multiply_const_vcc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_multiply_const_vcc_sptr_set_detail", (PyCFunction) _wrap_gr_multiply_const_vcc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vcc_sptr_set_detail(gr_multiply_const_vcc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_multiply_const_vcc_sptr_name", _wrap_gr_multiply_const_vcc_sptr_name, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_name(gr_multiply_const_vcc_sptr self) -> string"},
	 { (char *)"gr_multiply_const_vcc_sptr_input_signature", _wrap_gr_multiply_const_vcc_sptr_input_signature, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_input_signature(gr_multiply_const_vcc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_vcc_sptr_output_signature", _wrap_gr_multiply_const_vcc_sptr_output_signature, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_output_signature(gr_multiply_const_vcc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_multiply_const_vcc_sptr_unique_id", _wrap_gr_multiply_const_vcc_sptr_unique_id, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_unique_id(gr_multiply_const_vcc_sptr self) -> long"},
	 { (char *)"gr_multiply_const_vcc_sptr_to_basic_block", _wrap_gr_multiply_const_vcc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_multiply_const_vcc_sptr_to_basic_block(gr_multiply_const_vcc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_multiply_const_vcc_sptr_check_topology", (PyCFunction) _wrap_gr_multiply_const_vcc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_multiply_const_vcc_sptr_check_topology(gr_multiply_const_vcc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_multiply_const_vcc_sptr_swigregister", gr_multiply_const_vcc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"multiply_const_vcc", (PyCFunction) _wrap_multiply_const_vcc, METH_VARARGS | METH_KEYWORDS, (char *)"multiply_const_vcc(std::vector<(gr_complex,std::allocator<(gr_complex)>)> k) -> gr_multiply_const_vcc_sptr"},
	 { (char *)"new_gr_integrate_ss_sptr", _wrap_new_gr_integrate_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_integrate_ss_sptr()\n"
		"new_gr_integrate_ss_sptr( p) -> gr_integrate_ss_sptr\n"
		""},
	 { (char *)"gr_integrate_ss_sptr___deref__", _wrap_gr_integrate_ss_sptr___deref__, METH_VARARGS, (char *)"gr_integrate_ss_sptr___deref__(gr_integrate_ss_sptr self)"},
	 { (char *)"delete_gr_integrate_ss_sptr", _wrap_delete_gr_integrate_ss_sptr, METH_VARARGS, (char *)"delete_gr_integrate_ss_sptr(gr_integrate_ss_sptr self)"},
	 { (char *)"gr_integrate_ss_sptr_history", _wrap_gr_integrate_ss_sptr_history, METH_VARARGS, (char *)"gr_integrate_ss_sptr_history(gr_integrate_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_integrate_ss_sptr_output_multiple", _wrap_gr_integrate_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_integrate_ss_sptr_output_multiple(gr_integrate_ss_sptr self) -> int"},
	 { (char *)"gr_integrate_ss_sptr_relative_rate", _wrap_gr_integrate_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_integrate_ss_sptr_relative_rate(gr_integrate_ss_sptr self) -> double"},
	 { (char *)"gr_integrate_ss_sptr_start", _wrap_gr_integrate_ss_sptr_start, METH_VARARGS, (char *)"gr_integrate_ss_sptr_start(gr_integrate_ss_sptr self) -> bool"},
	 { (char *)"gr_integrate_ss_sptr_stop", _wrap_gr_integrate_ss_sptr_stop, METH_VARARGS, (char *)"gr_integrate_ss_sptr_stop(gr_integrate_ss_sptr self) -> bool"},
	 { (char *)"gr_integrate_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_integrate_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ss_sptr_nitems_read(gr_integrate_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_integrate_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_integrate_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ss_sptr_nitems_written(gr_integrate_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_integrate_ss_sptr_detail", _wrap_gr_integrate_ss_sptr_detail, METH_VARARGS, (char *)"gr_integrate_ss_sptr_detail(gr_integrate_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_integrate_ss_sptr_set_detail", (PyCFunction) _wrap_gr_integrate_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ss_sptr_set_detail(gr_integrate_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_integrate_ss_sptr_name", _wrap_gr_integrate_ss_sptr_name, METH_VARARGS, (char *)"gr_integrate_ss_sptr_name(gr_integrate_ss_sptr self) -> string"},
	 { (char *)"gr_integrate_ss_sptr_input_signature", _wrap_gr_integrate_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_integrate_ss_sptr_input_signature(gr_integrate_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_integrate_ss_sptr_output_signature", _wrap_gr_integrate_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_integrate_ss_sptr_output_signature(gr_integrate_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_integrate_ss_sptr_unique_id", _wrap_gr_integrate_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_integrate_ss_sptr_unique_id(gr_integrate_ss_sptr self) -> long"},
	 { (char *)"gr_integrate_ss_sptr_to_basic_block", _wrap_gr_integrate_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_integrate_ss_sptr_to_basic_block(gr_integrate_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_integrate_ss_sptr_check_topology", (PyCFunction) _wrap_gr_integrate_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ss_sptr_check_topology(gr_integrate_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_integrate_ss_sptr_swigregister", gr_integrate_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"integrate_ss", (PyCFunction) _wrap_integrate_ss, METH_VARARGS | METH_KEYWORDS, (char *)"integrate_ss(int decim) -> gr_integrate_ss_sptr"},
	 { (char *)"new_gr_integrate_ii_sptr", _wrap_new_gr_integrate_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_integrate_ii_sptr()\n"
		"new_gr_integrate_ii_sptr( p) -> gr_integrate_ii_sptr\n"
		""},
	 { (char *)"gr_integrate_ii_sptr___deref__", _wrap_gr_integrate_ii_sptr___deref__, METH_VARARGS, (char *)"gr_integrate_ii_sptr___deref__(gr_integrate_ii_sptr self)"},
	 { (char *)"delete_gr_integrate_ii_sptr", _wrap_delete_gr_integrate_ii_sptr, METH_VARARGS, (char *)"delete_gr_integrate_ii_sptr(gr_integrate_ii_sptr self)"},
	 { (char *)"gr_integrate_ii_sptr_history", _wrap_gr_integrate_ii_sptr_history, METH_VARARGS, (char *)"gr_integrate_ii_sptr_history(gr_integrate_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_integrate_ii_sptr_output_multiple", _wrap_gr_integrate_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_integrate_ii_sptr_output_multiple(gr_integrate_ii_sptr self) -> int"},
	 { (char *)"gr_integrate_ii_sptr_relative_rate", _wrap_gr_integrate_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_integrate_ii_sptr_relative_rate(gr_integrate_ii_sptr self) -> double"},
	 { (char *)"gr_integrate_ii_sptr_start", _wrap_gr_integrate_ii_sptr_start, METH_VARARGS, (char *)"gr_integrate_ii_sptr_start(gr_integrate_ii_sptr self) -> bool"},
	 { (char *)"gr_integrate_ii_sptr_stop", _wrap_gr_integrate_ii_sptr_stop, METH_VARARGS, (char *)"gr_integrate_ii_sptr_stop(gr_integrate_ii_sptr self) -> bool"},
	 { (char *)"gr_integrate_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_integrate_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ii_sptr_nitems_read(gr_integrate_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_integrate_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_integrate_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ii_sptr_nitems_written(gr_integrate_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_integrate_ii_sptr_detail", _wrap_gr_integrate_ii_sptr_detail, METH_VARARGS, (char *)"gr_integrate_ii_sptr_detail(gr_integrate_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_integrate_ii_sptr_set_detail", (PyCFunction) _wrap_gr_integrate_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ii_sptr_set_detail(gr_integrate_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_integrate_ii_sptr_name", _wrap_gr_integrate_ii_sptr_name, METH_VARARGS, (char *)"gr_integrate_ii_sptr_name(gr_integrate_ii_sptr self) -> string"},
	 { (char *)"gr_integrate_ii_sptr_input_signature", _wrap_gr_integrate_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_integrate_ii_sptr_input_signature(gr_integrate_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_integrate_ii_sptr_output_signature", _wrap_gr_integrate_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_integrate_ii_sptr_output_signature(gr_integrate_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_integrate_ii_sptr_unique_id", _wrap_gr_integrate_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_integrate_ii_sptr_unique_id(gr_integrate_ii_sptr self) -> long"},
	 { (char *)"gr_integrate_ii_sptr_to_basic_block", _wrap_gr_integrate_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_integrate_ii_sptr_to_basic_block(gr_integrate_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_integrate_ii_sptr_check_topology", (PyCFunction) _wrap_gr_integrate_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ii_sptr_check_topology(gr_integrate_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_integrate_ii_sptr_swigregister", gr_integrate_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"integrate_ii", (PyCFunction) _wrap_integrate_ii, METH_VARARGS | METH_KEYWORDS, (char *)"integrate_ii(int decim) -> gr_integrate_ii_sptr"},
	 { (char *)"new_gr_integrate_ff_sptr", _wrap_new_gr_integrate_ff_sptr, METH_VARARGS, (char *)"\n"
		"gr_integrate_ff_sptr()\n"
		"new_gr_integrate_ff_sptr( p) -> gr_integrate_ff_sptr\n"
		""},
	 { (char *)"gr_integrate_ff_sptr___deref__", _wrap_gr_integrate_ff_sptr___deref__, METH_VARARGS, (char *)"gr_integrate_ff_sptr___deref__(gr_integrate_ff_sptr self)"},
	 { (char *)"delete_gr_integrate_ff_sptr", _wrap_delete_gr_integrate_ff_sptr, METH_VARARGS, (char *)"delete_gr_integrate_ff_sptr(gr_integrate_ff_sptr self)"},
	 { (char *)"gr_integrate_ff_sptr_history", _wrap_gr_integrate_ff_sptr_history, METH_VARARGS, (char *)"gr_integrate_ff_sptr_history(gr_integrate_ff_sptr self) -> unsigned int"},
	 { (char *)"gr_integrate_ff_sptr_output_multiple", _wrap_gr_integrate_ff_sptr_output_multiple, METH_VARARGS, (char *)"gr_integrate_ff_sptr_output_multiple(gr_integrate_ff_sptr self) -> int"},
	 { (char *)"gr_integrate_ff_sptr_relative_rate", _wrap_gr_integrate_ff_sptr_relative_rate, METH_VARARGS, (char *)"gr_integrate_ff_sptr_relative_rate(gr_integrate_ff_sptr self) -> double"},
	 { (char *)"gr_integrate_ff_sptr_start", _wrap_gr_integrate_ff_sptr_start, METH_VARARGS, (char *)"gr_integrate_ff_sptr_start(gr_integrate_ff_sptr self) -> bool"},
	 { (char *)"gr_integrate_ff_sptr_stop", _wrap_gr_integrate_ff_sptr_stop, METH_VARARGS, (char *)"gr_integrate_ff_sptr_stop(gr_integrate_ff_sptr self) -> bool"},
	 { (char *)"gr_integrate_ff_sptr_nitems_read", (PyCFunction) _wrap_gr_integrate_ff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ff_sptr_nitems_read(gr_integrate_ff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_integrate_ff_sptr_nitems_written", (PyCFunction) _wrap_gr_integrate_ff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ff_sptr_nitems_written(gr_integrate_ff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_integrate_ff_sptr_detail", _wrap_gr_integrate_ff_sptr_detail, METH_VARARGS, (char *)"gr_integrate_ff_sptr_detail(gr_integrate_ff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_integrate_ff_sptr_set_detail", (PyCFunction) _wrap_gr_integrate_ff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ff_sptr_set_detail(gr_integrate_ff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_integrate_ff_sptr_name", _wrap_gr_integrate_ff_sptr_name, METH_VARARGS, (char *)"gr_integrate_ff_sptr_name(gr_integrate_ff_sptr self) -> string"},
	 { (char *)"gr_integrate_ff_sptr_input_signature", _wrap_gr_integrate_ff_sptr_input_signature, METH_VARARGS, (char *)"gr_integrate_ff_sptr_input_signature(gr_integrate_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_integrate_ff_sptr_output_signature", _wrap_gr_integrate_ff_sptr_output_signature, METH_VARARGS, (char *)"gr_integrate_ff_sptr_output_signature(gr_integrate_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_integrate_ff_sptr_unique_id", _wrap_gr_integrate_ff_sptr_unique_id, METH_VARARGS, (char *)"gr_integrate_ff_sptr_unique_id(gr_integrate_ff_sptr self) -> long"},
	 { (char *)"gr_integrate_ff_sptr_to_basic_block", _wrap_gr_integrate_ff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_integrate_ff_sptr_to_basic_block(gr_integrate_ff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_integrate_ff_sptr_check_topology", (PyCFunction) _wrap_gr_integrate_ff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_ff_sptr_check_topology(gr_integrate_ff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_integrate_ff_sptr_swigregister", gr_integrate_ff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"integrate_ff", (PyCFunction) _wrap_integrate_ff, METH_VARARGS | METH_KEYWORDS, (char *)"integrate_ff(int decim) -> gr_integrate_ff_sptr"},
	 { (char *)"new_gr_integrate_cc_sptr", _wrap_new_gr_integrate_cc_sptr, METH_VARARGS, (char *)"\n"
		"gr_integrate_cc_sptr()\n"
		"new_gr_integrate_cc_sptr( p) -> gr_integrate_cc_sptr\n"
		""},
	 { (char *)"gr_integrate_cc_sptr___deref__", _wrap_gr_integrate_cc_sptr___deref__, METH_VARARGS, (char *)"gr_integrate_cc_sptr___deref__(gr_integrate_cc_sptr self)"},
	 { (char *)"delete_gr_integrate_cc_sptr", _wrap_delete_gr_integrate_cc_sptr, METH_VARARGS, (char *)"delete_gr_integrate_cc_sptr(gr_integrate_cc_sptr self)"},
	 { (char *)"gr_integrate_cc_sptr_history", _wrap_gr_integrate_cc_sptr_history, METH_VARARGS, (char *)"gr_integrate_cc_sptr_history(gr_integrate_cc_sptr self) -> unsigned int"},
	 { (char *)"gr_integrate_cc_sptr_output_multiple", _wrap_gr_integrate_cc_sptr_output_multiple, METH_VARARGS, (char *)"gr_integrate_cc_sptr_output_multiple(gr_integrate_cc_sptr self) -> int"},
	 { (char *)"gr_integrate_cc_sptr_relative_rate", _wrap_gr_integrate_cc_sptr_relative_rate, METH_VARARGS, (char *)"gr_integrate_cc_sptr_relative_rate(gr_integrate_cc_sptr self) -> double"},
	 { (char *)"gr_integrate_cc_sptr_start", _wrap_gr_integrate_cc_sptr_start, METH_VARARGS, (char *)"gr_integrate_cc_sptr_start(gr_integrate_cc_sptr self) -> bool"},
	 { (char *)"gr_integrate_cc_sptr_stop", _wrap_gr_integrate_cc_sptr_stop, METH_VARARGS, (char *)"gr_integrate_cc_sptr_stop(gr_integrate_cc_sptr self) -> bool"},
	 { (char *)"gr_integrate_cc_sptr_nitems_read", (PyCFunction) _wrap_gr_integrate_cc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_cc_sptr_nitems_read(gr_integrate_cc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_integrate_cc_sptr_nitems_written", (PyCFunction) _wrap_gr_integrate_cc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_cc_sptr_nitems_written(gr_integrate_cc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_integrate_cc_sptr_detail", _wrap_gr_integrate_cc_sptr_detail, METH_VARARGS, (char *)"gr_integrate_cc_sptr_detail(gr_integrate_cc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_integrate_cc_sptr_set_detail", (PyCFunction) _wrap_gr_integrate_cc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_cc_sptr_set_detail(gr_integrate_cc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_integrate_cc_sptr_name", _wrap_gr_integrate_cc_sptr_name, METH_VARARGS, (char *)"gr_integrate_cc_sptr_name(gr_integrate_cc_sptr self) -> string"},
	 { (char *)"gr_integrate_cc_sptr_input_signature", _wrap_gr_integrate_cc_sptr_input_signature, METH_VARARGS, (char *)"gr_integrate_cc_sptr_input_signature(gr_integrate_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_integrate_cc_sptr_output_signature", _wrap_gr_integrate_cc_sptr_output_signature, METH_VARARGS, (char *)"gr_integrate_cc_sptr_output_signature(gr_integrate_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_integrate_cc_sptr_unique_id", _wrap_gr_integrate_cc_sptr_unique_id, METH_VARARGS, (char *)"gr_integrate_cc_sptr_unique_id(gr_integrate_cc_sptr self) -> long"},
	 { (char *)"gr_integrate_cc_sptr_to_basic_block", _wrap_gr_integrate_cc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_integrate_cc_sptr_to_basic_block(gr_integrate_cc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_integrate_cc_sptr_check_topology", (PyCFunction) _wrap_gr_integrate_cc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_integrate_cc_sptr_check_topology(gr_integrate_cc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_integrate_cc_sptr_swigregister", gr_integrate_cc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"integrate_cc", (PyCFunction) _wrap_integrate_cc, METH_VARARGS | METH_KEYWORDS, (char *)"integrate_cc(int decim) -> gr_integrate_cc_sptr"},
	 { (char *)"new_gr_moving_average_ss_sptr", _wrap_new_gr_moving_average_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_moving_average_ss_sptr()\n"
		"new_gr_moving_average_ss_sptr( p) -> gr_moving_average_ss_sptr\n"
		""},
	 { (char *)"gr_moving_average_ss_sptr___deref__", _wrap_gr_moving_average_ss_sptr___deref__, METH_VARARGS, (char *)"gr_moving_average_ss_sptr___deref__(gr_moving_average_ss_sptr self)"},
	 { (char *)"delete_gr_moving_average_ss_sptr", _wrap_delete_gr_moving_average_ss_sptr, METH_VARARGS, (char *)"delete_gr_moving_average_ss_sptr(gr_moving_average_ss_sptr self)"},
	 { (char *)"gr_moving_average_ss_sptr_length", _wrap_gr_moving_average_ss_sptr_length, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_length(gr_moving_average_ss_sptr self) -> int"},
	 { (char *)"gr_moving_average_ss_sptr_scale", _wrap_gr_moving_average_ss_sptr_scale, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_scale(gr_moving_average_ss_sptr self) -> short"},
	 { (char *)"gr_moving_average_ss_sptr_set_length_and_scale", (PyCFunction) _wrap_gr_moving_average_ss_sptr_set_length_and_scale, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ss_sptr_set_length_and_scale(gr_moving_average_ss_sptr self, int length, short scale)"},
	 { (char *)"gr_moving_average_ss_sptr_history", _wrap_gr_moving_average_ss_sptr_history, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_history(gr_moving_average_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_moving_average_ss_sptr_output_multiple", _wrap_gr_moving_average_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_output_multiple(gr_moving_average_ss_sptr self) -> int"},
	 { (char *)"gr_moving_average_ss_sptr_relative_rate", _wrap_gr_moving_average_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_relative_rate(gr_moving_average_ss_sptr self) -> double"},
	 { (char *)"gr_moving_average_ss_sptr_start", _wrap_gr_moving_average_ss_sptr_start, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_start(gr_moving_average_ss_sptr self) -> bool"},
	 { (char *)"gr_moving_average_ss_sptr_stop", _wrap_gr_moving_average_ss_sptr_stop, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_stop(gr_moving_average_ss_sptr self) -> bool"},
	 { (char *)"gr_moving_average_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_moving_average_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ss_sptr_nitems_read(gr_moving_average_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_moving_average_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_moving_average_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ss_sptr_nitems_written(gr_moving_average_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_moving_average_ss_sptr_detail", _wrap_gr_moving_average_ss_sptr_detail, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_detail(gr_moving_average_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_moving_average_ss_sptr_set_detail", (PyCFunction) _wrap_gr_moving_average_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ss_sptr_set_detail(gr_moving_average_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_moving_average_ss_sptr_name", _wrap_gr_moving_average_ss_sptr_name, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_name(gr_moving_average_ss_sptr self) -> string"},
	 { (char *)"gr_moving_average_ss_sptr_input_signature", _wrap_gr_moving_average_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_input_signature(gr_moving_average_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_moving_average_ss_sptr_output_signature", _wrap_gr_moving_average_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_output_signature(gr_moving_average_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_moving_average_ss_sptr_unique_id", _wrap_gr_moving_average_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_unique_id(gr_moving_average_ss_sptr self) -> long"},
	 { (char *)"gr_moving_average_ss_sptr_to_basic_block", _wrap_gr_moving_average_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_moving_average_ss_sptr_to_basic_block(gr_moving_average_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_moving_average_ss_sptr_check_topology", (PyCFunction) _wrap_gr_moving_average_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ss_sptr_check_topology(gr_moving_average_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_moving_average_ss_sptr_swigregister", gr_moving_average_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"moving_average_ss", (PyCFunction) _wrap_moving_average_ss, METH_VARARGS | METH_KEYWORDS, (char *)"moving_average_ss(int length, short scale, int max_iter = 4096) -> gr_moving_average_ss_sptr"},
	 { (char *)"new_gr_moving_average_ii_sptr", _wrap_new_gr_moving_average_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_moving_average_ii_sptr()\n"
		"new_gr_moving_average_ii_sptr( p) -> gr_moving_average_ii_sptr\n"
		""},
	 { (char *)"gr_moving_average_ii_sptr___deref__", _wrap_gr_moving_average_ii_sptr___deref__, METH_VARARGS, (char *)"gr_moving_average_ii_sptr___deref__(gr_moving_average_ii_sptr self)"},
	 { (char *)"delete_gr_moving_average_ii_sptr", _wrap_delete_gr_moving_average_ii_sptr, METH_VARARGS, (char *)"delete_gr_moving_average_ii_sptr(gr_moving_average_ii_sptr self)"},
	 { (char *)"gr_moving_average_ii_sptr_length", _wrap_gr_moving_average_ii_sptr_length, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_length(gr_moving_average_ii_sptr self) -> int"},
	 { (char *)"gr_moving_average_ii_sptr_scale", _wrap_gr_moving_average_ii_sptr_scale, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_scale(gr_moving_average_ii_sptr self) -> int"},
	 { (char *)"gr_moving_average_ii_sptr_set_length_and_scale", (PyCFunction) _wrap_gr_moving_average_ii_sptr_set_length_and_scale, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ii_sptr_set_length_and_scale(gr_moving_average_ii_sptr self, int length, int scale)"},
	 { (char *)"gr_moving_average_ii_sptr_history", _wrap_gr_moving_average_ii_sptr_history, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_history(gr_moving_average_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_moving_average_ii_sptr_output_multiple", _wrap_gr_moving_average_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_output_multiple(gr_moving_average_ii_sptr self) -> int"},
	 { (char *)"gr_moving_average_ii_sptr_relative_rate", _wrap_gr_moving_average_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_relative_rate(gr_moving_average_ii_sptr self) -> double"},
	 { (char *)"gr_moving_average_ii_sptr_start", _wrap_gr_moving_average_ii_sptr_start, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_start(gr_moving_average_ii_sptr self) -> bool"},
	 { (char *)"gr_moving_average_ii_sptr_stop", _wrap_gr_moving_average_ii_sptr_stop, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_stop(gr_moving_average_ii_sptr self) -> bool"},
	 { (char *)"gr_moving_average_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_moving_average_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ii_sptr_nitems_read(gr_moving_average_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_moving_average_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_moving_average_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ii_sptr_nitems_written(gr_moving_average_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_moving_average_ii_sptr_detail", _wrap_gr_moving_average_ii_sptr_detail, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_detail(gr_moving_average_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_moving_average_ii_sptr_set_detail", (PyCFunction) _wrap_gr_moving_average_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ii_sptr_set_detail(gr_moving_average_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_moving_average_ii_sptr_name", _wrap_gr_moving_average_ii_sptr_name, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_name(gr_moving_average_ii_sptr self) -> string"},
	 { (char *)"gr_moving_average_ii_sptr_input_signature", _wrap_gr_moving_average_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_input_signature(gr_moving_average_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_moving_average_ii_sptr_output_signature", _wrap_gr_moving_average_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_output_signature(gr_moving_average_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_moving_average_ii_sptr_unique_id", _wrap_gr_moving_average_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_unique_id(gr_moving_average_ii_sptr self) -> long"},
	 { (char *)"gr_moving_average_ii_sptr_to_basic_block", _wrap_gr_moving_average_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_moving_average_ii_sptr_to_basic_block(gr_moving_average_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_moving_average_ii_sptr_check_topology", (PyCFunction) _wrap_gr_moving_average_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ii_sptr_check_topology(gr_moving_average_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_moving_average_ii_sptr_swigregister", gr_moving_average_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"moving_average_ii", (PyCFunction) _wrap_moving_average_ii, METH_VARARGS | METH_KEYWORDS, (char *)"moving_average_ii(int length, int scale, int max_iter = 4096) -> gr_moving_average_ii_sptr"},
	 { (char *)"new_gr_moving_average_ff_sptr", _wrap_new_gr_moving_average_ff_sptr, METH_VARARGS, (char *)"\n"
		"gr_moving_average_ff_sptr()\n"
		"new_gr_moving_average_ff_sptr( p) -> gr_moving_average_ff_sptr\n"
		""},
	 { (char *)"gr_moving_average_ff_sptr___deref__", _wrap_gr_moving_average_ff_sptr___deref__, METH_VARARGS, (char *)"gr_moving_average_ff_sptr___deref__(gr_moving_average_ff_sptr self)"},
	 { (char *)"delete_gr_moving_average_ff_sptr", _wrap_delete_gr_moving_average_ff_sptr, METH_VARARGS, (char *)"delete_gr_moving_average_ff_sptr(gr_moving_average_ff_sptr self)"},
	 { (char *)"gr_moving_average_ff_sptr_length", _wrap_gr_moving_average_ff_sptr_length, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_length(gr_moving_average_ff_sptr self) -> int"},
	 { (char *)"gr_moving_average_ff_sptr_scale", _wrap_gr_moving_average_ff_sptr_scale, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_scale(gr_moving_average_ff_sptr self) -> float"},
	 { (char *)"gr_moving_average_ff_sptr_set_length_and_scale", (PyCFunction) _wrap_gr_moving_average_ff_sptr_set_length_and_scale, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ff_sptr_set_length_and_scale(gr_moving_average_ff_sptr self, int length, float scale)"},
	 { (char *)"gr_moving_average_ff_sptr_history", _wrap_gr_moving_average_ff_sptr_history, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_history(gr_moving_average_ff_sptr self) -> unsigned int"},
	 { (char *)"gr_moving_average_ff_sptr_output_multiple", _wrap_gr_moving_average_ff_sptr_output_multiple, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_output_multiple(gr_moving_average_ff_sptr self) -> int"},
	 { (char *)"gr_moving_average_ff_sptr_relative_rate", _wrap_gr_moving_average_ff_sptr_relative_rate, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_relative_rate(gr_moving_average_ff_sptr self) -> double"},
	 { (char *)"gr_moving_average_ff_sptr_start", _wrap_gr_moving_average_ff_sptr_start, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_start(gr_moving_average_ff_sptr self) -> bool"},
	 { (char *)"gr_moving_average_ff_sptr_stop", _wrap_gr_moving_average_ff_sptr_stop, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_stop(gr_moving_average_ff_sptr self) -> bool"},
	 { (char *)"gr_moving_average_ff_sptr_nitems_read", (PyCFunction) _wrap_gr_moving_average_ff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ff_sptr_nitems_read(gr_moving_average_ff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_moving_average_ff_sptr_nitems_written", (PyCFunction) _wrap_gr_moving_average_ff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ff_sptr_nitems_written(gr_moving_average_ff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_moving_average_ff_sptr_detail", _wrap_gr_moving_average_ff_sptr_detail, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_detail(gr_moving_average_ff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_moving_average_ff_sptr_set_detail", (PyCFunction) _wrap_gr_moving_average_ff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ff_sptr_set_detail(gr_moving_average_ff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_moving_average_ff_sptr_name", _wrap_gr_moving_average_ff_sptr_name, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_name(gr_moving_average_ff_sptr self) -> string"},
	 { (char *)"gr_moving_average_ff_sptr_input_signature", _wrap_gr_moving_average_ff_sptr_input_signature, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_input_signature(gr_moving_average_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_moving_average_ff_sptr_output_signature", _wrap_gr_moving_average_ff_sptr_output_signature, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_output_signature(gr_moving_average_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_moving_average_ff_sptr_unique_id", _wrap_gr_moving_average_ff_sptr_unique_id, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_unique_id(gr_moving_average_ff_sptr self) -> long"},
	 { (char *)"gr_moving_average_ff_sptr_to_basic_block", _wrap_gr_moving_average_ff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_moving_average_ff_sptr_to_basic_block(gr_moving_average_ff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_moving_average_ff_sptr_check_topology", (PyCFunction) _wrap_gr_moving_average_ff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_ff_sptr_check_topology(gr_moving_average_ff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_moving_average_ff_sptr_swigregister", gr_moving_average_ff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"moving_average_ff", (PyCFunction) _wrap_moving_average_ff, METH_VARARGS | METH_KEYWORDS, (char *)"moving_average_ff(int length, float scale, int max_iter = 4096) -> gr_moving_average_ff_sptr"},
	 { (char *)"new_gr_moving_average_cc_sptr", _wrap_new_gr_moving_average_cc_sptr, METH_VARARGS, (char *)"\n"
		"gr_moving_average_cc_sptr()\n"
		"new_gr_moving_average_cc_sptr( p) -> gr_moving_average_cc_sptr\n"
		""},
	 { (char *)"gr_moving_average_cc_sptr___deref__", _wrap_gr_moving_average_cc_sptr___deref__, METH_VARARGS, (char *)"gr_moving_average_cc_sptr___deref__(gr_moving_average_cc_sptr self)"},
	 { (char *)"delete_gr_moving_average_cc_sptr", _wrap_delete_gr_moving_average_cc_sptr, METH_VARARGS, (char *)"delete_gr_moving_average_cc_sptr(gr_moving_average_cc_sptr self)"},
	 { (char *)"gr_moving_average_cc_sptr_length", _wrap_gr_moving_average_cc_sptr_length, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_length(gr_moving_average_cc_sptr self) -> int"},
	 { (char *)"gr_moving_average_cc_sptr_scale", _wrap_gr_moving_average_cc_sptr_scale, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_scale(gr_moving_average_cc_sptr self) -> gr_complex"},
	 { (char *)"gr_moving_average_cc_sptr_set_length_and_scale", (PyCFunction) _wrap_gr_moving_average_cc_sptr_set_length_and_scale, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_cc_sptr_set_length_and_scale(gr_moving_average_cc_sptr self, int length, gr_complex scale)"},
	 { (char *)"gr_moving_average_cc_sptr_history", _wrap_gr_moving_average_cc_sptr_history, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_history(gr_moving_average_cc_sptr self) -> unsigned int"},
	 { (char *)"gr_moving_average_cc_sptr_output_multiple", _wrap_gr_moving_average_cc_sptr_output_multiple, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_output_multiple(gr_moving_average_cc_sptr self) -> int"},
	 { (char *)"gr_moving_average_cc_sptr_relative_rate", _wrap_gr_moving_average_cc_sptr_relative_rate, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_relative_rate(gr_moving_average_cc_sptr self) -> double"},
	 { (char *)"gr_moving_average_cc_sptr_start", _wrap_gr_moving_average_cc_sptr_start, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_start(gr_moving_average_cc_sptr self) -> bool"},
	 { (char *)"gr_moving_average_cc_sptr_stop", _wrap_gr_moving_average_cc_sptr_stop, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_stop(gr_moving_average_cc_sptr self) -> bool"},
	 { (char *)"gr_moving_average_cc_sptr_nitems_read", (PyCFunction) _wrap_gr_moving_average_cc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_cc_sptr_nitems_read(gr_moving_average_cc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_moving_average_cc_sptr_nitems_written", (PyCFunction) _wrap_gr_moving_average_cc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_cc_sptr_nitems_written(gr_moving_average_cc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_moving_average_cc_sptr_detail", _wrap_gr_moving_average_cc_sptr_detail, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_detail(gr_moving_average_cc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_moving_average_cc_sptr_set_detail", (PyCFunction) _wrap_gr_moving_average_cc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_cc_sptr_set_detail(gr_moving_average_cc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_moving_average_cc_sptr_name", _wrap_gr_moving_average_cc_sptr_name, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_name(gr_moving_average_cc_sptr self) -> string"},
	 { (char *)"gr_moving_average_cc_sptr_input_signature", _wrap_gr_moving_average_cc_sptr_input_signature, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_input_signature(gr_moving_average_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_moving_average_cc_sptr_output_signature", _wrap_gr_moving_average_cc_sptr_output_signature, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_output_signature(gr_moving_average_cc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_moving_average_cc_sptr_unique_id", _wrap_gr_moving_average_cc_sptr_unique_id, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_unique_id(gr_moving_average_cc_sptr self) -> long"},
	 { (char *)"gr_moving_average_cc_sptr_to_basic_block", _wrap_gr_moving_average_cc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_moving_average_cc_sptr_to_basic_block(gr_moving_average_cc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_moving_average_cc_sptr_check_topology", (PyCFunction) _wrap_gr_moving_average_cc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_moving_average_cc_sptr_check_topology(gr_moving_average_cc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_moving_average_cc_sptr_swigregister", gr_moving_average_cc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"moving_average_cc", (PyCFunction) _wrap_moving_average_cc, METH_VARARGS | METH_KEYWORDS, (char *)"moving_average_cc(int length, gr_complex scale, int max_iter = 4096) -> gr_moving_average_cc_sptr"},
	 { (char *)"new_gr_chunks_to_symbols_bf_sptr", _wrap_new_gr_chunks_to_symbols_bf_sptr, METH_VARARGS, (char *)"\n"
		"gr_chunks_to_symbols_bf_sptr()\n"
		"new_gr_chunks_to_symbols_bf_sptr( p) -> gr_chunks_to_symbols_bf_sptr\n"
		""},
	 { (char *)"gr_chunks_to_symbols_bf_sptr___deref__", _wrap_gr_chunks_to_symbols_bf_sptr___deref__, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr___deref__(gr_chunks_to_symbols_bf_sptr self)"},
	 { (char *)"delete_gr_chunks_to_symbols_bf_sptr", _wrap_delete_gr_chunks_to_symbols_bf_sptr, METH_VARARGS, (char *)"delete_gr_chunks_to_symbols_bf_sptr(gr_chunks_to_symbols_bf_sptr self)"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_D", _wrap_gr_chunks_to_symbols_bf_sptr_D, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_D(gr_chunks_to_symbols_bf_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_symbol_table", _wrap_gr_chunks_to_symbols_bf_sptr_symbol_table, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_symbol_table(gr_chunks_to_symbols_bf_sptr self) -> __dummy_4__"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_history", _wrap_gr_chunks_to_symbols_bf_sptr_history, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_history(gr_chunks_to_symbols_bf_sptr self) -> unsigned int"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_output_multiple", _wrap_gr_chunks_to_symbols_bf_sptr_output_multiple, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_output_multiple(gr_chunks_to_symbols_bf_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_relative_rate", _wrap_gr_chunks_to_symbols_bf_sptr_relative_rate, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_relative_rate(gr_chunks_to_symbols_bf_sptr self) -> double"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_start", _wrap_gr_chunks_to_symbols_bf_sptr_start, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_start(gr_chunks_to_symbols_bf_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_stop", _wrap_gr_chunks_to_symbols_bf_sptr_stop, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_stop(gr_chunks_to_symbols_bf_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_nitems_read", (PyCFunction) _wrap_gr_chunks_to_symbols_bf_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_bf_sptr_nitems_read(gr_chunks_to_symbols_bf_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_nitems_written", (PyCFunction) _wrap_gr_chunks_to_symbols_bf_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_bf_sptr_nitems_written(gr_chunks_to_symbols_bf_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_detail", _wrap_gr_chunks_to_symbols_bf_sptr_detail, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_detail(gr_chunks_to_symbols_bf_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_set_detail", (PyCFunction) _wrap_gr_chunks_to_symbols_bf_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_bf_sptr_set_detail(gr_chunks_to_symbols_bf_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_name", _wrap_gr_chunks_to_symbols_bf_sptr_name, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_name(gr_chunks_to_symbols_bf_sptr self) -> string"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_input_signature", _wrap_gr_chunks_to_symbols_bf_sptr_input_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_input_signature(gr_chunks_to_symbols_bf_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_output_signature", _wrap_gr_chunks_to_symbols_bf_sptr_output_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_output_signature(gr_chunks_to_symbols_bf_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_unique_id", _wrap_gr_chunks_to_symbols_bf_sptr_unique_id, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_unique_id(gr_chunks_to_symbols_bf_sptr self) -> long"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_to_basic_block", _wrap_gr_chunks_to_symbols_bf_sptr_to_basic_block, METH_VARARGS, (char *)"gr_chunks_to_symbols_bf_sptr_to_basic_block(gr_chunks_to_symbols_bf_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_check_topology", (PyCFunction) _wrap_gr_chunks_to_symbols_bf_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_bf_sptr_check_topology(gr_chunks_to_symbols_bf_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_chunks_to_symbols_bf_sptr_swigregister", gr_chunks_to_symbols_bf_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"chunks_to_symbols_bf", (PyCFunction) _wrap_chunks_to_symbols_bf, METH_VARARGS | METH_KEYWORDS, (char *)"chunks_to_symbols_bf(__dummy_4__ symbol_table, int D = 1) -> gr_chunks_to_symbols_bf_sptr"},
	 { (char *)"new_gr_chunks_to_symbols_bc_sptr", _wrap_new_gr_chunks_to_symbols_bc_sptr, METH_VARARGS, (char *)"\n"
		"gr_chunks_to_symbols_bc_sptr()\n"
		"new_gr_chunks_to_symbols_bc_sptr( p) -> gr_chunks_to_symbols_bc_sptr\n"
		""},
	 { (char *)"gr_chunks_to_symbols_bc_sptr___deref__", _wrap_gr_chunks_to_symbols_bc_sptr___deref__, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr___deref__(gr_chunks_to_symbols_bc_sptr self)"},
	 { (char *)"delete_gr_chunks_to_symbols_bc_sptr", _wrap_delete_gr_chunks_to_symbols_bc_sptr, METH_VARARGS, (char *)"delete_gr_chunks_to_symbols_bc_sptr(gr_chunks_to_symbols_bc_sptr self)"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_D", _wrap_gr_chunks_to_symbols_bc_sptr_D, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_D(gr_chunks_to_symbols_bc_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_symbol_table", _wrap_gr_chunks_to_symbols_bc_sptr_symbol_table, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_symbol_table(gr_chunks_to_symbols_bc_sptr self) -> std::vector<(gr_complex,std::allocator<(gr_complex)>)>"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_history", _wrap_gr_chunks_to_symbols_bc_sptr_history, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_history(gr_chunks_to_symbols_bc_sptr self) -> unsigned int"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_output_multiple", _wrap_gr_chunks_to_symbols_bc_sptr_output_multiple, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_output_multiple(gr_chunks_to_symbols_bc_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_relative_rate", _wrap_gr_chunks_to_symbols_bc_sptr_relative_rate, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_relative_rate(gr_chunks_to_symbols_bc_sptr self) -> double"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_start", _wrap_gr_chunks_to_symbols_bc_sptr_start, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_start(gr_chunks_to_symbols_bc_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_stop", _wrap_gr_chunks_to_symbols_bc_sptr_stop, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_stop(gr_chunks_to_symbols_bc_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_nitems_read", (PyCFunction) _wrap_gr_chunks_to_symbols_bc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_bc_sptr_nitems_read(gr_chunks_to_symbols_bc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_nitems_written", (PyCFunction) _wrap_gr_chunks_to_symbols_bc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_bc_sptr_nitems_written(gr_chunks_to_symbols_bc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_detail", _wrap_gr_chunks_to_symbols_bc_sptr_detail, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_detail(gr_chunks_to_symbols_bc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_set_detail", (PyCFunction) _wrap_gr_chunks_to_symbols_bc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_bc_sptr_set_detail(gr_chunks_to_symbols_bc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_name", _wrap_gr_chunks_to_symbols_bc_sptr_name, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_name(gr_chunks_to_symbols_bc_sptr self) -> string"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_input_signature", _wrap_gr_chunks_to_symbols_bc_sptr_input_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_input_signature(gr_chunks_to_symbols_bc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_output_signature", _wrap_gr_chunks_to_symbols_bc_sptr_output_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_output_signature(gr_chunks_to_symbols_bc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_unique_id", _wrap_gr_chunks_to_symbols_bc_sptr_unique_id, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_unique_id(gr_chunks_to_symbols_bc_sptr self) -> long"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_to_basic_block", _wrap_gr_chunks_to_symbols_bc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_chunks_to_symbols_bc_sptr_to_basic_block(gr_chunks_to_symbols_bc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_check_topology", (PyCFunction) _wrap_gr_chunks_to_symbols_bc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_bc_sptr_check_topology(gr_chunks_to_symbols_bc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_chunks_to_symbols_bc_sptr_swigregister", gr_chunks_to_symbols_bc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"chunks_to_symbols_bc", (PyCFunction) _wrap_chunks_to_symbols_bc, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"chunks_to_symbols_bc(std::vector<(gr_complex,std::allocator<(gr_complex)>)> symbol_table, \n"
		"    int D = 1) -> gr_chunks_to_symbols_bc_sptr\n"
		""},
	 { (char *)"new_gr_chunks_to_symbols_sf_sptr", _wrap_new_gr_chunks_to_symbols_sf_sptr, METH_VARARGS, (char *)"\n"
		"gr_chunks_to_symbols_sf_sptr()\n"
		"new_gr_chunks_to_symbols_sf_sptr( p) -> gr_chunks_to_symbols_sf_sptr\n"
		""},
	 { (char *)"gr_chunks_to_symbols_sf_sptr___deref__", _wrap_gr_chunks_to_symbols_sf_sptr___deref__, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr___deref__(gr_chunks_to_symbols_sf_sptr self)"},
	 { (char *)"delete_gr_chunks_to_symbols_sf_sptr", _wrap_delete_gr_chunks_to_symbols_sf_sptr, METH_VARARGS, (char *)"delete_gr_chunks_to_symbols_sf_sptr(gr_chunks_to_symbols_sf_sptr self)"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_D", _wrap_gr_chunks_to_symbols_sf_sptr_D, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_D(gr_chunks_to_symbols_sf_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_symbol_table", _wrap_gr_chunks_to_symbols_sf_sptr_symbol_table, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_symbol_table(gr_chunks_to_symbols_sf_sptr self) -> __dummy_4__"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_history", _wrap_gr_chunks_to_symbols_sf_sptr_history, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_history(gr_chunks_to_symbols_sf_sptr self) -> unsigned int"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_output_multiple", _wrap_gr_chunks_to_symbols_sf_sptr_output_multiple, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_output_multiple(gr_chunks_to_symbols_sf_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_relative_rate", _wrap_gr_chunks_to_symbols_sf_sptr_relative_rate, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_relative_rate(gr_chunks_to_symbols_sf_sptr self) -> double"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_start", _wrap_gr_chunks_to_symbols_sf_sptr_start, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_start(gr_chunks_to_symbols_sf_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_stop", _wrap_gr_chunks_to_symbols_sf_sptr_stop, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_stop(gr_chunks_to_symbols_sf_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_nitems_read", (PyCFunction) _wrap_gr_chunks_to_symbols_sf_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_sf_sptr_nitems_read(gr_chunks_to_symbols_sf_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_nitems_written", (PyCFunction) _wrap_gr_chunks_to_symbols_sf_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_sf_sptr_nitems_written(gr_chunks_to_symbols_sf_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_detail", _wrap_gr_chunks_to_symbols_sf_sptr_detail, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_detail(gr_chunks_to_symbols_sf_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_set_detail", (PyCFunction) _wrap_gr_chunks_to_symbols_sf_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_sf_sptr_set_detail(gr_chunks_to_symbols_sf_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_name", _wrap_gr_chunks_to_symbols_sf_sptr_name, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_name(gr_chunks_to_symbols_sf_sptr self) -> string"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_input_signature", _wrap_gr_chunks_to_symbols_sf_sptr_input_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_input_signature(gr_chunks_to_symbols_sf_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_output_signature", _wrap_gr_chunks_to_symbols_sf_sptr_output_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_output_signature(gr_chunks_to_symbols_sf_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_unique_id", _wrap_gr_chunks_to_symbols_sf_sptr_unique_id, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_unique_id(gr_chunks_to_symbols_sf_sptr self) -> long"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_to_basic_block", _wrap_gr_chunks_to_symbols_sf_sptr_to_basic_block, METH_VARARGS, (char *)"gr_chunks_to_symbols_sf_sptr_to_basic_block(gr_chunks_to_symbols_sf_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_check_topology", (PyCFunction) _wrap_gr_chunks_to_symbols_sf_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_sf_sptr_check_topology(gr_chunks_to_symbols_sf_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_chunks_to_symbols_sf_sptr_swigregister", gr_chunks_to_symbols_sf_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"chunks_to_symbols_sf", (PyCFunction) _wrap_chunks_to_symbols_sf, METH_VARARGS | METH_KEYWORDS, (char *)"chunks_to_symbols_sf(__dummy_4__ symbol_table, int D = 1) -> gr_chunks_to_symbols_sf_sptr"},
	 { (char *)"new_gr_chunks_to_symbols_sc_sptr", _wrap_new_gr_chunks_to_symbols_sc_sptr, METH_VARARGS, (char *)"\n"
		"gr_chunks_to_symbols_sc_sptr()\n"
		"new_gr_chunks_to_symbols_sc_sptr( p) -> gr_chunks_to_symbols_sc_sptr\n"
		""},
	 { (char *)"gr_chunks_to_symbols_sc_sptr___deref__", _wrap_gr_chunks_to_symbols_sc_sptr___deref__, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr___deref__(gr_chunks_to_symbols_sc_sptr self)"},
	 { (char *)"delete_gr_chunks_to_symbols_sc_sptr", _wrap_delete_gr_chunks_to_symbols_sc_sptr, METH_VARARGS, (char *)"delete_gr_chunks_to_symbols_sc_sptr(gr_chunks_to_symbols_sc_sptr self)"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_D", _wrap_gr_chunks_to_symbols_sc_sptr_D, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_D(gr_chunks_to_symbols_sc_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_symbol_table", _wrap_gr_chunks_to_symbols_sc_sptr_symbol_table, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_symbol_table(gr_chunks_to_symbols_sc_sptr self) -> std::vector<(gr_complex,std::allocator<(gr_complex)>)>"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_history", _wrap_gr_chunks_to_symbols_sc_sptr_history, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_history(gr_chunks_to_symbols_sc_sptr self) -> unsigned int"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_output_multiple", _wrap_gr_chunks_to_symbols_sc_sptr_output_multiple, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_output_multiple(gr_chunks_to_symbols_sc_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_relative_rate", _wrap_gr_chunks_to_symbols_sc_sptr_relative_rate, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_relative_rate(gr_chunks_to_symbols_sc_sptr self) -> double"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_start", _wrap_gr_chunks_to_symbols_sc_sptr_start, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_start(gr_chunks_to_symbols_sc_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_stop", _wrap_gr_chunks_to_symbols_sc_sptr_stop, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_stop(gr_chunks_to_symbols_sc_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_nitems_read", (PyCFunction) _wrap_gr_chunks_to_symbols_sc_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_sc_sptr_nitems_read(gr_chunks_to_symbols_sc_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_nitems_written", (PyCFunction) _wrap_gr_chunks_to_symbols_sc_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_sc_sptr_nitems_written(gr_chunks_to_symbols_sc_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_detail", _wrap_gr_chunks_to_symbols_sc_sptr_detail, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_detail(gr_chunks_to_symbols_sc_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_set_detail", (PyCFunction) _wrap_gr_chunks_to_symbols_sc_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_sc_sptr_set_detail(gr_chunks_to_symbols_sc_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_name", _wrap_gr_chunks_to_symbols_sc_sptr_name, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_name(gr_chunks_to_symbols_sc_sptr self) -> string"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_input_signature", _wrap_gr_chunks_to_symbols_sc_sptr_input_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_input_signature(gr_chunks_to_symbols_sc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_output_signature", _wrap_gr_chunks_to_symbols_sc_sptr_output_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_output_signature(gr_chunks_to_symbols_sc_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_unique_id", _wrap_gr_chunks_to_symbols_sc_sptr_unique_id, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_unique_id(gr_chunks_to_symbols_sc_sptr self) -> long"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_to_basic_block", _wrap_gr_chunks_to_symbols_sc_sptr_to_basic_block, METH_VARARGS, (char *)"gr_chunks_to_symbols_sc_sptr_to_basic_block(gr_chunks_to_symbols_sc_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_check_topology", (PyCFunction) _wrap_gr_chunks_to_symbols_sc_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_sc_sptr_check_topology(gr_chunks_to_symbols_sc_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_chunks_to_symbols_sc_sptr_swigregister", gr_chunks_to_symbols_sc_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"chunks_to_symbols_sc", (PyCFunction) _wrap_chunks_to_symbols_sc, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"chunks_to_symbols_sc(std::vector<(gr_complex,std::allocator<(gr_complex)>)> symbol_table, \n"
		"    int D = 1) -> gr_chunks_to_symbols_sc_sptr\n"
		""},
	 { (char *)"new_gr_chunks_to_symbols_if_sptr", _wrap_new_gr_chunks_to_symbols_if_sptr, METH_VARARGS, (char *)"\n"
		"gr_chunks_to_symbols_if_sptr()\n"
		"new_gr_chunks_to_symbols_if_sptr( p) -> gr_chunks_to_symbols_if_sptr\n"
		""},
	 { (char *)"gr_chunks_to_symbols_if_sptr___deref__", _wrap_gr_chunks_to_symbols_if_sptr___deref__, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr___deref__(gr_chunks_to_symbols_if_sptr self)"},
	 { (char *)"delete_gr_chunks_to_symbols_if_sptr", _wrap_delete_gr_chunks_to_symbols_if_sptr, METH_VARARGS, (char *)"delete_gr_chunks_to_symbols_if_sptr(gr_chunks_to_symbols_if_sptr self)"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_D", _wrap_gr_chunks_to_symbols_if_sptr_D, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_D(gr_chunks_to_symbols_if_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_symbol_table", _wrap_gr_chunks_to_symbols_if_sptr_symbol_table, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_symbol_table(gr_chunks_to_symbols_if_sptr self) -> __dummy_4__"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_history", _wrap_gr_chunks_to_symbols_if_sptr_history, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_history(gr_chunks_to_symbols_if_sptr self) -> unsigned int"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_output_multiple", _wrap_gr_chunks_to_symbols_if_sptr_output_multiple, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_output_multiple(gr_chunks_to_symbols_if_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_relative_rate", _wrap_gr_chunks_to_symbols_if_sptr_relative_rate, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_relative_rate(gr_chunks_to_symbols_if_sptr self) -> double"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_start", _wrap_gr_chunks_to_symbols_if_sptr_start, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_start(gr_chunks_to_symbols_if_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_stop", _wrap_gr_chunks_to_symbols_if_sptr_stop, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_stop(gr_chunks_to_symbols_if_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_nitems_read", (PyCFunction) _wrap_gr_chunks_to_symbols_if_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_if_sptr_nitems_read(gr_chunks_to_symbols_if_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_nitems_written", (PyCFunction) _wrap_gr_chunks_to_symbols_if_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_if_sptr_nitems_written(gr_chunks_to_symbols_if_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_detail", _wrap_gr_chunks_to_symbols_if_sptr_detail, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_detail(gr_chunks_to_symbols_if_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_set_detail", (PyCFunction) _wrap_gr_chunks_to_symbols_if_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_if_sptr_set_detail(gr_chunks_to_symbols_if_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_name", _wrap_gr_chunks_to_symbols_if_sptr_name, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_name(gr_chunks_to_symbols_if_sptr self) -> string"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_input_signature", _wrap_gr_chunks_to_symbols_if_sptr_input_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_input_signature(gr_chunks_to_symbols_if_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_output_signature", _wrap_gr_chunks_to_symbols_if_sptr_output_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_output_signature(gr_chunks_to_symbols_if_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_unique_id", _wrap_gr_chunks_to_symbols_if_sptr_unique_id, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_unique_id(gr_chunks_to_symbols_if_sptr self) -> long"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_to_basic_block", _wrap_gr_chunks_to_symbols_if_sptr_to_basic_block, METH_VARARGS, (char *)"gr_chunks_to_symbols_if_sptr_to_basic_block(gr_chunks_to_symbols_if_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_check_topology", (PyCFunction) _wrap_gr_chunks_to_symbols_if_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_if_sptr_check_topology(gr_chunks_to_symbols_if_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_chunks_to_symbols_if_sptr_swigregister", gr_chunks_to_symbols_if_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"chunks_to_symbols_if", (PyCFunction) _wrap_chunks_to_symbols_if, METH_VARARGS | METH_KEYWORDS, (char *)"chunks_to_symbols_if(__dummy_4__ symbol_table, int D = 1) -> gr_chunks_to_symbols_if_sptr"},
	 { (char *)"new_gr_chunks_to_symbols_ic_sptr", _wrap_new_gr_chunks_to_symbols_ic_sptr, METH_VARARGS, (char *)"\n"
		"gr_chunks_to_symbols_ic_sptr()\n"
		"new_gr_chunks_to_symbols_ic_sptr( p) -> gr_chunks_to_symbols_ic_sptr\n"
		""},
	 { (char *)"gr_chunks_to_symbols_ic_sptr___deref__", _wrap_gr_chunks_to_symbols_ic_sptr___deref__, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr___deref__(gr_chunks_to_symbols_ic_sptr self)"},
	 { (char *)"delete_gr_chunks_to_symbols_ic_sptr", _wrap_delete_gr_chunks_to_symbols_ic_sptr, METH_VARARGS, (char *)"delete_gr_chunks_to_symbols_ic_sptr(gr_chunks_to_symbols_ic_sptr self)"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_D", _wrap_gr_chunks_to_symbols_ic_sptr_D, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_D(gr_chunks_to_symbols_ic_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_symbol_table", _wrap_gr_chunks_to_symbols_ic_sptr_symbol_table, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_symbol_table(gr_chunks_to_symbols_ic_sptr self) -> std::vector<(gr_complex,std::allocator<(gr_complex)>)>"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_history", _wrap_gr_chunks_to_symbols_ic_sptr_history, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_history(gr_chunks_to_symbols_ic_sptr self) -> unsigned int"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_output_multiple", _wrap_gr_chunks_to_symbols_ic_sptr_output_multiple, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_output_multiple(gr_chunks_to_symbols_ic_sptr self) -> int"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_relative_rate", _wrap_gr_chunks_to_symbols_ic_sptr_relative_rate, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_relative_rate(gr_chunks_to_symbols_ic_sptr self) -> double"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_start", _wrap_gr_chunks_to_symbols_ic_sptr_start, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_start(gr_chunks_to_symbols_ic_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_stop", _wrap_gr_chunks_to_symbols_ic_sptr_stop, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_stop(gr_chunks_to_symbols_ic_sptr self) -> bool"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_nitems_read", (PyCFunction) _wrap_gr_chunks_to_symbols_ic_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_ic_sptr_nitems_read(gr_chunks_to_symbols_ic_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_nitems_written", (PyCFunction) _wrap_gr_chunks_to_symbols_ic_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_ic_sptr_nitems_written(gr_chunks_to_symbols_ic_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_detail", _wrap_gr_chunks_to_symbols_ic_sptr_detail, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_detail(gr_chunks_to_symbols_ic_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_set_detail", (PyCFunction) _wrap_gr_chunks_to_symbols_ic_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_ic_sptr_set_detail(gr_chunks_to_symbols_ic_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_name", _wrap_gr_chunks_to_symbols_ic_sptr_name, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_name(gr_chunks_to_symbols_ic_sptr self) -> string"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_input_signature", _wrap_gr_chunks_to_symbols_ic_sptr_input_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_input_signature(gr_chunks_to_symbols_ic_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_output_signature", _wrap_gr_chunks_to_symbols_ic_sptr_output_signature, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_output_signature(gr_chunks_to_symbols_ic_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_unique_id", _wrap_gr_chunks_to_symbols_ic_sptr_unique_id, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_unique_id(gr_chunks_to_symbols_ic_sptr self) -> long"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_to_basic_block", _wrap_gr_chunks_to_symbols_ic_sptr_to_basic_block, METH_VARARGS, (char *)"gr_chunks_to_symbols_ic_sptr_to_basic_block(gr_chunks_to_symbols_ic_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_check_topology", (PyCFunction) _wrap_gr_chunks_to_symbols_ic_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_chunks_to_symbols_ic_sptr_check_topology(gr_chunks_to_symbols_ic_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_chunks_to_symbols_ic_sptr_swigregister", gr_chunks_to_symbols_ic_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"chunks_to_symbols_ic", (PyCFunction) _wrap_chunks_to_symbols_ic, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"chunks_to_symbols_ic(std::vector<(gr_complex,std::allocator<(gr_complex)>)> symbol_table, \n"
		"    int D = 1) -> gr_chunks_to_symbols_ic_sptr\n"
		""},
	 { (char *)"new_gr_unpacked_to_packed_bb_sptr", _wrap_new_gr_unpacked_to_packed_bb_sptr, METH_VARARGS, (char *)"\n"
		"gr_unpacked_to_packed_bb_sptr()\n"
		"new_gr_unpacked_to_packed_bb_sptr( p) -> gr_unpacked_to_packed_bb_sptr\n"
		""},
	 { (char *)"gr_unpacked_to_packed_bb_sptr___deref__", _wrap_gr_unpacked_to_packed_bb_sptr___deref__, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr___deref__(gr_unpacked_to_packed_bb_sptr self)"},
	 { (char *)"delete_gr_unpacked_to_packed_bb_sptr", _wrap_delete_gr_unpacked_to_packed_bb_sptr, METH_VARARGS, (char *)"delete_gr_unpacked_to_packed_bb_sptr(gr_unpacked_to_packed_bb_sptr self)"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_history", _wrap_gr_unpacked_to_packed_bb_sptr_history, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_history(gr_unpacked_to_packed_bb_sptr self) -> unsigned int"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_output_multiple", _wrap_gr_unpacked_to_packed_bb_sptr_output_multiple, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_output_multiple(gr_unpacked_to_packed_bb_sptr self) -> int"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_relative_rate", _wrap_gr_unpacked_to_packed_bb_sptr_relative_rate, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_relative_rate(gr_unpacked_to_packed_bb_sptr self) -> double"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_start", _wrap_gr_unpacked_to_packed_bb_sptr_start, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_start(gr_unpacked_to_packed_bb_sptr self) -> bool"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_stop", _wrap_gr_unpacked_to_packed_bb_sptr_stop, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_stop(gr_unpacked_to_packed_bb_sptr self) -> bool"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_nitems_read", (PyCFunction) _wrap_gr_unpacked_to_packed_bb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_bb_sptr_nitems_read(gr_unpacked_to_packed_bb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_nitems_written", (PyCFunction) _wrap_gr_unpacked_to_packed_bb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_bb_sptr_nitems_written(gr_unpacked_to_packed_bb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_detail", _wrap_gr_unpacked_to_packed_bb_sptr_detail, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_detail(gr_unpacked_to_packed_bb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_set_detail", (PyCFunction) _wrap_gr_unpacked_to_packed_bb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_bb_sptr_set_detail(gr_unpacked_to_packed_bb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_name", _wrap_gr_unpacked_to_packed_bb_sptr_name, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_name(gr_unpacked_to_packed_bb_sptr self) -> string"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_input_signature", _wrap_gr_unpacked_to_packed_bb_sptr_input_signature, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_input_signature(gr_unpacked_to_packed_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_output_signature", _wrap_gr_unpacked_to_packed_bb_sptr_output_signature, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_output_signature(gr_unpacked_to_packed_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_unique_id", _wrap_gr_unpacked_to_packed_bb_sptr_unique_id, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_unique_id(gr_unpacked_to_packed_bb_sptr self) -> long"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_to_basic_block", _wrap_gr_unpacked_to_packed_bb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_unpacked_to_packed_bb_sptr_to_basic_block(gr_unpacked_to_packed_bb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_check_topology", (PyCFunction) _wrap_gr_unpacked_to_packed_bb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_bb_sptr_check_topology(gr_unpacked_to_packed_bb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_unpacked_to_packed_bb_sptr_swigregister", gr_unpacked_to_packed_bb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"unpacked_to_packed_bb", (PyCFunction) _wrap_unpacked_to_packed_bb, METH_VARARGS | METH_KEYWORDS, (char *)"unpacked_to_packed_bb(unsigned int bits_per_chunk, gr_endianness_t endianness) -> gr_unpacked_to_packed_bb_sptr"},
	 { (char *)"new_gr_unpacked_to_packed_ss_sptr", _wrap_new_gr_unpacked_to_packed_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_unpacked_to_packed_ss_sptr()\n"
		"new_gr_unpacked_to_packed_ss_sptr( p) -> gr_unpacked_to_packed_ss_sptr\n"
		""},
	 { (char *)"gr_unpacked_to_packed_ss_sptr___deref__", _wrap_gr_unpacked_to_packed_ss_sptr___deref__, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr___deref__(gr_unpacked_to_packed_ss_sptr self)"},
	 { (char *)"delete_gr_unpacked_to_packed_ss_sptr", _wrap_delete_gr_unpacked_to_packed_ss_sptr, METH_VARARGS, (char *)"delete_gr_unpacked_to_packed_ss_sptr(gr_unpacked_to_packed_ss_sptr self)"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_history", _wrap_gr_unpacked_to_packed_ss_sptr_history, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_history(gr_unpacked_to_packed_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_output_multiple", _wrap_gr_unpacked_to_packed_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_output_multiple(gr_unpacked_to_packed_ss_sptr self) -> int"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_relative_rate", _wrap_gr_unpacked_to_packed_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_relative_rate(gr_unpacked_to_packed_ss_sptr self) -> double"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_start", _wrap_gr_unpacked_to_packed_ss_sptr_start, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_start(gr_unpacked_to_packed_ss_sptr self) -> bool"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_stop", _wrap_gr_unpacked_to_packed_ss_sptr_stop, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_stop(gr_unpacked_to_packed_ss_sptr self) -> bool"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_unpacked_to_packed_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_ss_sptr_nitems_read(gr_unpacked_to_packed_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_unpacked_to_packed_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_ss_sptr_nitems_written(gr_unpacked_to_packed_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_detail", _wrap_gr_unpacked_to_packed_ss_sptr_detail, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_detail(gr_unpacked_to_packed_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_set_detail", (PyCFunction) _wrap_gr_unpacked_to_packed_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_ss_sptr_set_detail(gr_unpacked_to_packed_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_name", _wrap_gr_unpacked_to_packed_ss_sptr_name, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_name(gr_unpacked_to_packed_ss_sptr self) -> string"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_input_signature", _wrap_gr_unpacked_to_packed_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_input_signature(gr_unpacked_to_packed_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_output_signature", _wrap_gr_unpacked_to_packed_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_output_signature(gr_unpacked_to_packed_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_unique_id", _wrap_gr_unpacked_to_packed_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_unique_id(gr_unpacked_to_packed_ss_sptr self) -> long"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_to_basic_block", _wrap_gr_unpacked_to_packed_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_unpacked_to_packed_ss_sptr_to_basic_block(gr_unpacked_to_packed_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_check_topology", (PyCFunction) _wrap_gr_unpacked_to_packed_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_ss_sptr_check_topology(gr_unpacked_to_packed_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_unpacked_to_packed_ss_sptr_swigregister", gr_unpacked_to_packed_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"unpacked_to_packed_ss", (PyCFunction) _wrap_unpacked_to_packed_ss, METH_VARARGS | METH_KEYWORDS, (char *)"unpacked_to_packed_ss(unsigned int bits_per_chunk, gr_endianness_t endianness) -> gr_unpacked_to_packed_ss_sptr"},
	 { (char *)"new_gr_unpacked_to_packed_ii_sptr", _wrap_new_gr_unpacked_to_packed_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_unpacked_to_packed_ii_sptr()\n"
		"new_gr_unpacked_to_packed_ii_sptr( p) -> gr_unpacked_to_packed_ii_sptr\n"
		""},
	 { (char *)"gr_unpacked_to_packed_ii_sptr___deref__", _wrap_gr_unpacked_to_packed_ii_sptr___deref__, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr___deref__(gr_unpacked_to_packed_ii_sptr self)"},
	 { (char *)"delete_gr_unpacked_to_packed_ii_sptr", _wrap_delete_gr_unpacked_to_packed_ii_sptr, METH_VARARGS, (char *)"delete_gr_unpacked_to_packed_ii_sptr(gr_unpacked_to_packed_ii_sptr self)"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_history", _wrap_gr_unpacked_to_packed_ii_sptr_history, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_history(gr_unpacked_to_packed_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_output_multiple", _wrap_gr_unpacked_to_packed_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_output_multiple(gr_unpacked_to_packed_ii_sptr self) -> int"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_relative_rate", _wrap_gr_unpacked_to_packed_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_relative_rate(gr_unpacked_to_packed_ii_sptr self) -> double"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_start", _wrap_gr_unpacked_to_packed_ii_sptr_start, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_start(gr_unpacked_to_packed_ii_sptr self) -> bool"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_stop", _wrap_gr_unpacked_to_packed_ii_sptr_stop, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_stop(gr_unpacked_to_packed_ii_sptr self) -> bool"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_unpacked_to_packed_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_ii_sptr_nitems_read(gr_unpacked_to_packed_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_unpacked_to_packed_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_ii_sptr_nitems_written(gr_unpacked_to_packed_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_detail", _wrap_gr_unpacked_to_packed_ii_sptr_detail, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_detail(gr_unpacked_to_packed_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_set_detail", (PyCFunction) _wrap_gr_unpacked_to_packed_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_ii_sptr_set_detail(gr_unpacked_to_packed_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_name", _wrap_gr_unpacked_to_packed_ii_sptr_name, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_name(gr_unpacked_to_packed_ii_sptr self) -> string"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_input_signature", _wrap_gr_unpacked_to_packed_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_input_signature(gr_unpacked_to_packed_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_output_signature", _wrap_gr_unpacked_to_packed_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_output_signature(gr_unpacked_to_packed_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_unique_id", _wrap_gr_unpacked_to_packed_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_unique_id(gr_unpacked_to_packed_ii_sptr self) -> long"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_to_basic_block", _wrap_gr_unpacked_to_packed_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_unpacked_to_packed_ii_sptr_to_basic_block(gr_unpacked_to_packed_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_check_topology", (PyCFunction) _wrap_gr_unpacked_to_packed_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_unpacked_to_packed_ii_sptr_check_topology(gr_unpacked_to_packed_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_unpacked_to_packed_ii_sptr_swigregister", gr_unpacked_to_packed_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"unpacked_to_packed_ii", (PyCFunction) _wrap_unpacked_to_packed_ii, METH_VARARGS | METH_KEYWORDS, (char *)"unpacked_to_packed_ii(unsigned int bits_per_chunk, gr_endianness_t endianness) -> gr_unpacked_to_packed_ii_sptr"},
	 { (char *)"new_gr_packed_to_unpacked_bb_sptr", _wrap_new_gr_packed_to_unpacked_bb_sptr, METH_VARARGS, (char *)"\n"
		"gr_packed_to_unpacked_bb_sptr()\n"
		"new_gr_packed_to_unpacked_bb_sptr( p) -> gr_packed_to_unpacked_bb_sptr\n"
		""},
	 { (char *)"gr_packed_to_unpacked_bb_sptr___deref__", _wrap_gr_packed_to_unpacked_bb_sptr___deref__, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr___deref__(gr_packed_to_unpacked_bb_sptr self)"},
	 { (char *)"delete_gr_packed_to_unpacked_bb_sptr", _wrap_delete_gr_packed_to_unpacked_bb_sptr, METH_VARARGS, (char *)"delete_gr_packed_to_unpacked_bb_sptr(gr_packed_to_unpacked_bb_sptr self)"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_history", _wrap_gr_packed_to_unpacked_bb_sptr_history, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_history(gr_packed_to_unpacked_bb_sptr self) -> unsigned int"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_output_multiple", _wrap_gr_packed_to_unpacked_bb_sptr_output_multiple, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_output_multiple(gr_packed_to_unpacked_bb_sptr self) -> int"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_relative_rate", _wrap_gr_packed_to_unpacked_bb_sptr_relative_rate, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_relative_rate(gr_packed_to_unpacked_bb_sptr self) -> double"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_start", _wrap_gr_packed_to_unpacked_bb_sptr_start, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_start(gr_packed_to_unpacked_bb_sptr self) -> bool"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_stop", _wrap_gr_packed_to_unpacked_bb_sptr_stop, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_stop(gr_packed_to_unpacked_bb_sptr self) -> bool"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_nitems_read", (PyCFunction) _wrap_gr_packed_to_unpacked_bb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_bb_sptr_nitems_read(gr_packed_to_unpacked_bb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_nitems_written", (PyCFunction) _wrap_gr_packed_to_unpacked_bb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_bb_sptr_nitems_written(gr_packed_to_unpacked_bb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_detail", _wrap_gr_packed_to_unpacked_bb_sptr_detail, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_detail(gr_packed_to_unpacked_bb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_set_detail", (PyCFunction) _wrap_gr_packed_to_unpacked_bb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_bb_sptr_set_detail(gr_packed_to_unpacked_bb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_name", _wrap_gr_packed_to_unpacked_bb_sptr_name, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_name(gr_packed_to_unpacked_bb_sptr self) -> string"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_input_signature", _wrap_gr_packed_to_unpacked_bb_sptr_input_signature, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_input_signature(gr_packed_to_unpacked_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_output_signature", _wrap_gr_packed_to_unpacked_bb_sptr_output_signature, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_output_signature(gr_packed_to_unpacked_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_unique_id", _wrap_gr_packed_to_unpacked_bb_sptr_unique_id, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_unique_id(gr_packed_to_unpacked_bb_sptr self) -> long"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_to_basic_block", _wrap_gr_packed_to_unpacked_bb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_packed_to_unpacked_bb_sptr_to_basic_block(gr_packed_to_unpacked_bb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_check_topology", (PyCFunction) _wrap_gr_packed_to_unpacked_bb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_bb_sptr_check_topology(gr_packed_to_unpacked_bb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_packed_to_unpacked_bb_sptr_swigregister", gr_packed_to_unpacked_bb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"packed_to_unpacked_bb", (PyCFunction) _wrap_packed_to_unpacked_bb, METH_VARARGS | METH_KEYWORDS, (char *)"packed_to_unpacked_bb(unsigned int bits_per_chunk, gr_endianness_t endianness) -> gr_packed_to_unpacked_bb_sptr"},
	 { (char *)"new_gr_packed_to_unpacked_ss_sptr", _wrap_new_gr_packed_to_unpacked_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_packed_to_unpacked_ss_sptr()\n"
		"new_gr_packed_to_unpacked_ss_sptr( p) -> gr_packed_to_unpacked_ss_sptr\n"
		""},
	 { (char *)"gr_packed_to_unpacked_ss_sptr___deref__", _wrap_gr_packed_to_unpacked_ss_sptr___deref__, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr___deref__(gr_packed_to_unpacked_ss_sptr self)"},
	 { (char *)"delete_gr_packed_to_unpacked_ss_sptr", _wrap_delete_gr_packed_to_unpacked_ss_sptr, METH_VARARGS, (char *)"delete_gr_packed_to_unpacked_ss_sptr(gr_packed_to_unpacked_ss_sptr self)"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_history", _wrap_gr_packed_to_unpacked_ss_sptr_history, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_history(gr_packed_to_unpacked_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_output_multiple", _wrap_gr_packed_to_unpacked_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_output_multiple(gr_packed_to_unpacked_ss_sptr self) -> int"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_relative_rate", _wrap_gr_packed_to_unpacked_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_relative_rate(gr_packed_to_unpacked_ss_sptr self) -> double"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_start", _wrap_gr_packed_to_unpacked_ss_sptr_start, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_start(gr_packed_to_unpacked_ss_sptr self) -> bool"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_stop", _wrap_gr_packed_to_unpacked_ss_sptr_stop, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_stop(gr_packed_to_unpacked_ss_sptr self) -> bool"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_packed_to_unpacked_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_ss_sptr_nitems_read(gr_packed_to_unpacked_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_packed_to_unpacked_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_ss_sptr_nitems_written(gr_packed_to_unpacked_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_detail", _wrap_gr_packed_to_unpacked_ss_sptr_detail, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_detail(gr_packed_to_unpacked_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_set_detail", (PyCFunction) _wrap_gr_packed_to_unpacked_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_ss_sptr_set_detail(gr_packed_to_unpacked_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_name", _wrap_gr_packed_to_unpacked_ss_sptr_name, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_name(gr_packed_to_unpacked_ss_sptr self) -> string"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_input_signature", _wrap_gr_packed_to_unpacked_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_input_signature(gr_packed_to_unpacked_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_output_signature", _wrap_gr_packed_to_unpacked_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_output_signature(gr_packed_to_unpacked_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_unique_id", _wrap_gr_packed_to_unpacked_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_unique_id(gr_packed_to_unpacked_ss_sptr self) -> long"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_to_basic_block", _wrap_gr_packed_to_unpacked_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_packed_to_unpacked_ss_sptr_to_basic_block(gr_packed_to_unpacked_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_check_topology", (PyCFunction) _wrap_gr_packed_to_unpacked_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_ss_sptr_check_topology(gr_packed_to_unpacked_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_packed_to_unpacked_ss_sptr_swigregister", gr_packed_to_unpacked_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"packed_to_unpacked_ss", (PyCFunction) _wrap_packed_to_unpacked_ss, METH_VARARGS | METH_KEYWORDS, (char *)"packed_to_unpacked_ss(unsigned int bits_per_chunk, gr_endianness_t endianness) -> gr_packed_to_unpacked_ss_sptr"},
	 { (char *)"new_gr_packed_to_unpacked_ii_sptr", _wrap_new_gr_packed_to_unpacked_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_packed_to_unpacked_ii_sptr()\n"
		"new_gr_packed_to_unpacked_ii_sptr( p) -> gr_packed_to_unpacked_ii_sptr\n"
		""},
	 { (char *)"gr_packed_to_unpacked_ii_sptr___deref__", _wrap_gr_packed_to_unpacked_ii_sptr___deref__, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr___deref__(gr_packed_to_unpacked_ii_sptr self)"},
	 { (char *)"delete_gr_packed_to_unpacked_ii_sptr", _wrap_delete_gr_packed_to_unpacked_ii_sptr, METH_VARARGS, (char *)"delete_gr_packed_to_unpacked_ii_sptr(gr_packed_to_unpacked_ii_sptr self)"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_history", _wrap_gr_packed_to_unpacked_ii_sptr_history, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_history(gr_packed_to_unpacked_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_output_multiple", _wrap_gr_packed_to_unpacked_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_output_multiple(gr_packed_to_unpacked_ii_sptr self) -> int"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_relative_rate", _wrap_gr_packed_to_unpacked_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_relative_rate(gr_packed_to_unpacked_ii_sptr self) -> double"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_start", _wrap_gr_packed_to_unpacked_ii_sptr_start, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_start(gr_packed_to_unpacked_ii_sptr self) -> bool"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_stop", _wrap_gr_packed_to_unpacked_ii_sptr_stop, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_stop(gr_packed_to_unpacked_ii_sptr self) -> bool"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_packed_to_unpacked_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_ii_sptr_nitems_read(gr_packed_to_unpacked_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_packed_to_unpacked_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_ii_sptr_nitems_written(gr_packed_to_unpacked_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_detail", _wrap_gr_packed_to_unpacked_ii_sptr_detail, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_detail(gr_packed_to_unpacked_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_set_detail", (PyCFunction) _wrap_gr_packed_to_unpacked_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_ii_sptr_set_detail(gr_packed_to_unpacked_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_name", _wrap_gr_packed_to_unpacked_ii_sptr_name, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_name(gr_packed_to_unpacked_ii_sptr self) -> string"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_input_signature", _wrap_gr_packed_to_unpacked_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_input_signature(gr_packed_to_unpacked_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_output_signature", _wrap_gr_packed_to_unpacked_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_output_signature(gr_packed_to_unpacked_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_unique_id", _wrap_gr_packed_to_unpacked_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_unique_id(gr_packed_to_unpacked_ii_sptr self) -> long"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_to_basic_block", _wrap_gr_packed_to_unpacked_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_packed_to_unpacked_ii_sptr_to_basic_block(gr_packed_to_unpacked_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_check_topology", (PyCFunction) _wrap_gr_packed_to_unpacked_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_packed_to_unpacked_ii_sptr_check_topology(gr_packed_to_unpacked_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_packed_to_unpacked_ii_sptr_swigregister", gr_packed_to_unpacked_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"packed_to_unpacked_ii", (PyCFunction) _wrap_packed_to_unpacked_ii, METH_VARARGS | METH_KEYWORDS, (char *)"packed_to_unpacked_ii(unsigned int bits_per_chunk, gr_endianness_t endianness) -> gr_packed_to_unpacked_ii_sptr"},
	 { (char *)"new_gr_xor_bb_sptr", _wrap_new_gr_xor_bb_sptr, METH_VARARGS, (char *)"\n"
		"gr_xor_bb_sptr()\n"
		"new_gr_xor_bb_sptr( p) -> gr_xor_bb_sptr\n"
		""},
	 { (char *)"gr_xor_bb_sptr___deref__", _wrap_gr_xor_bb_sptr___deref__, METH_VARARGS, (char *)"gr_xor_bb_sptr___deref__(gr_xor_bb_sptr self)"},
	 { (char *)"delete_gr_xor_bb_sptr", _wrap_delete_gr_xor_bb_sptr, METH_VARARGS, (char *)"delete_gr_xor_bb_sptr(gr_xor_bb_sptr self)"},
	 { (char *)"gr_xor_bb_sptr_history", _wrap_gr_xor_bb_sptr_history, METH_VARARGS, (char *)"gr_xor_bb_sptr_history(gr_xor_bb_sptr self) -> unsigned int"},
	 { (char *)"gr_xor_bb_sptr_output_multiple", _wrap_gr_xor_bb_sptr_output_multiple, METH_VARARGS, (char *)"gr_xor_bb_sptr_output_multiple(gr_xor_bb_sptr self) -> int"},
	 { (char *)"gr_xor_bb_sptr_relative_rate", _wrap_gr_xor_bb_sptr_relative_rate, METH_VARARGS, (char *)"gr_xor_bb_sptr_relative_rate(gr_xor_bb_sptr self) -> double"},
	 { (char *)"gr_xor_bb_sptr_start", _wrap_gr_xor_bb_sptr_start, METH_VARARGS, (char *)"gr_xor_bb_sptr_start(gr_xor_bb_sptr self) -> bool"},
	 { (char *)"gr_xor_bb_sptr_stop", _wrap_gr_xor_bb_sptr_stop, METH_VARARGS, (char *)"gr_xor_bb_sptr_stop(gr_xor_bb_sptr self) -> bool"},
	 { (char *)"gr_xor_bb_sptr_nitems_read", (PyCFunction) _wrap_gr_xor_bb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_bb_sptr_nitems_read(gr_xor_bb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_xor_bb_sptr_nitems_written", (PyCFunction) _wrap_gr_xor_bb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_bb_sptr_nitems_written(gr_xor_bb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_xor_bb_sptr_detail", _wrap_gr_xor_bb_sptr_detail, METH_VARARGS, (char *)"gr_xor_bb_sptr_detail(gr_xor_bb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_xor_bb_sptr_set_detail", (PyCFunction) _wrap_gr_xor_bb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_bb_sptr_set_detail(gr_xor_bb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_xor_bb_sptr_name", _wrap_gr_xor_bb_sptr_name, METH_VARARGS, (char *)"gr_xor_bb_sptr_name(gr_xor_bb_sptr self) -> string"},
	 { (char *)"gr_xor_bb_sptr_input_signature", _wrap_gr_xor_bb_sptr_input_signature, METH_VARARGS, (char *)"gr_xor_bb_sptr_input_signature(gr_xor_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_xor_bb_sptr_output_signature", _wrap_gr_xor_bb_sptr_output_signature, METH_VARARGS, (char *)"gr_xor_bb_sptr_output_signature(gr_xor_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_xor_bb_sptr_unique_id", _wrap_gr_xor_bb_sptr_unique_id, METH_VARARGS, (char *)"gr_xor_bb_sptr_unique_id(gr_xor_bb_sptr self) -> long"},
	 { (char *)"gr_xor_bb_sptr_to_basic_block", _wrap_gr_xor_bb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_xor_bb_sptr_to_basic_block(gr_xor_bb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_xor_bb_sptr_check_topology", (PyCFunction) _wrap_gr_xor_bb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_bb_sptr_check_topology(gr_xor_bb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_xor_bb_sptr_swigregister", gr_xor_bb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"xor_bb", _wrap_xor_bb, METH_VARARGS, (char *)"xor_bb() -> gr_xor_bb_sptr"},
	 { (char *)"new_gr_xor_ss_sptr", _wrap_new_gr_xor_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_xor_ss_sptr()\n"
		"new_gr_xor_ss_sptr( p) -> gr_xor_ss_sptr\n"
		""},
	 { (char *)"gr_xor_ss_sptr___deref__", _wrap_gr_xor_ss_sptr___deref__, METH_VARARGS, (char *)"gr_xor_ss_sptr___deref__(gr_xor_ss_sptr self)"},
	 { (char *)"delete_gr_xor_ss_sptr", _wrap_delete_gr_xor_ss_sptr, METH_VARARGS, (char *)"delete_gr_xor_ss_sptr(gr_xor_ss_sptr self)"},
	 { (char *)"gr_xor_ss_sptr_history", _wrap_gr_xor_ss_sptr_history, METH_VARARGS, (char *)"gr_xor_ss_sptr_history(gr_xor_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_xor_ss_sptr_output_multiple", _wrap_gr_xor_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_xor_ss_sptr_output_multiple(gr_xor_ss_sptr self) -> int"},
	 { (char *)"gr_xor_ss_sptr_relative_rate", _wrap_gr_xor_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_xor_ss_sptr_relative_rate(gr_xor_ss_sptr self) -> double"},
	 { (char *)"gr_xor_ss_sptr_start", _wrap_gr_xor_ss_sptr_start, METH_VARARGS, (char *)"gr_xor_ss_sptr_start(gr_xor_ss_sptr self) -> bool"},
	 { (char *)"gr_xor_ss_sptr_stop", _wrap_gr_xor_ss_sptr_stop, METH_VARARGS, (char *)"gr_xor_ss_sptr_stop(gr_xor_ss_sptr self) -> bool"},
	 { (char *)"gr_xor_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_xor_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_ss_sptr_nitems_read(gr_xor_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_xor_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_xor_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_ss_sptr_nitems_written(gr_xor_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_xor_ss_sptr_detail", _wrap_gr_xor_ss_sptr_detail, METH_VARARGS, (char *)"gr_xor_ss_sptr_detail(gr_xor_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_xor_ss_sptr_set_detail", (PyCFunction) _wrap_gr_xor_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_ss_sptr_set_detail(gr_xor_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_xor_ss_sptr_name", _wrap_gr_xor_ss_sptr_name, METH_VARARGS, (char *)"gr_xor_ss_sptr_name(gr_xor_ss_sptr self) -> string"},
	 { (char *)"gr_xor_ss_sptr_input_signature", _wrap_gr_xor_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_xor_ss_sptr_input_signature(gr_xor_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_xor_ss_sptr_output_signature", _wrap_gr_xor_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_xor_ss_sptr_output_signature(gr_xor_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_xor_ss_sptr_unique_id", _wrap_gr_xor_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_xor_ss_sptr_unique_id(gr_xor_ss_sptr self) -> long"},
	 { (char *)"gr_xor_ss_sptr_to_basic_block", _wrap_gr_xor_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_xor_ss_sptr_to_basic_block(gr_xor_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_xor_ss_sptr_check_topology", (PyCFunction) _wrap_gr_xor_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_ss_sptr_check_topology(gr_xor_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_xor_ss_sptr_swigregister", gr_xor_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"xor_ss", _wrap_xor_ss, METH_VARARGS, (char *)"xor_ss() -> gr_xor_ss_sptr"},
	 { (char *)"new_gr_xor_ii_sptr", _wrap_new_gr_xor_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_xor_ii_sptr()\n"
		"new_gr_xor_ii_sptr( p) -> gr_xor_ii_sptr\n"
		""},
	 { (char *)"gr_xor_ii_sptr___deref__", _wrap_gr_xor_ii_sptr___deref__, METH_VARARGS, (char *)"gr_xor_ii_sptr___deref__(gr_xor_ii_sptr self)"},
	 { (char *)"delete_gr_xor_ii_sptr", _wrap_delete_gr_xor_ii_sptr, METH_VARARGS, (char *)"delete_gr_xor_ii_sptr(gr_xor_ii_sptr self)"},
	 { (char *)"gr_xor_ii_sptr_history", _wrap_gr_xor_ii_sptr_history, METH_VARARGS, (char *)"gr_xor_ii_sptr_history(gr_xor_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_xor_ii_sptr_output_multiple", _wrap_gr_xor_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_xor_ii_sptr_output_multiple(gr_xor_ii_sptr self) -> int"},
	 { (char *)"gr_xor_ii_sptr_relative_rate", _wrap_gr_xor_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_xor_ii_sptr_relative_rate(gr_xor_ii_sptr self) -> double"},
	 { (char *)"gr_xor_ii_sptr_start", _wrap_gr_xor_ii_sptr_start, METH_VARARGS, (char *)"gr_xor_ii_sptr_start(gr_xor_ii_sptr self) -> bool"},
	 { (char *)"gr_xor_ii_sptr_stop", _wrap_gr_xor_ii_sptr_stop, METH_VARARGS, (char *)"gr_xor_ii_sptr_stop(gr_xor_ii_sptr self) -> bool"},
	 { (char *)"gr_xor_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_xor_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_ii_sptr_nitems_read(gr_xor_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_xor_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_xor_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_ii_sptr_nitems_written(gr_xor_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_xor_ii_sptr_detail", _wrap_gr_xor_ii_sptr_detail, METH_VARARGS, (char *)"gr_xor_ii_sptr_detail(gr_xor_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_xor_ii_sptr_set_detail", (PyCFunction) _wrap_gr_xor_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_ii_sptr_set_detail(gr_xor_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_xor_ii_sptr_name", _wrap_gr_xor_ii_sptr_name, METH_VARARGS, (char *)"gr_xor_ii_sptr_name(gr_xor_ii_sptr self) -> string"},
	 { (char *)"gr_xor_ii_sptr_input_signature", _wrap_gr_xor_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_xor_ii_sptr_input_signature(gr_xor_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_xor_ii_sptr_output_signature", _wrap_gr_xor_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_xor_ii_sptr_output_signature(gr_xor_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_xor_ii_sptr_unique_id", _wrap_gr_xor_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_xor_ii_sptr_unique_id(gr_xor_ii_sptr self) -> long"},
	 { (char *)"gr_xor_ii_sptr_to_basic_block", _wrap_gr_xor_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_xor_ii_sptr_to_basic_block(gr_xor_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_xor_ii_sptr_check_topology", (PyCFunction) _wrap_gr_xor_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_xor_ii_sptr_check_topology(gr_xor_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_xor_ii_sptr_swigregister", gr_xor_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"xor_ii", _wrap_xor_ii, METH_VARARGS, (char *)"xor_ii() -> gr_xor_ii_sptr"},
	 { (char *)"new_gr_and_bb_sptr", _wrap_new_gr_and_bb_sptr, METH_VARARGS, (char *)"\n"
		"gr_and_bb_sptr()\n"
		"new_gr_and_bb_sptr( p) -> gr_and_bb_sptr\n"
		""},
	 { (char *)"gr_and_bb_sptr___deref__", _wrap_gr_and_bb_sptr___deref__, METH_VARARGS, (char *)"gr_and_bb_sptr___deref__(gr_and_bb_sptr self)"},
	 { (char *)"delete_gr_and_bb_sptr", _wrap_delete_gr_and_bb_sptr, METH_VARARGS, (char *)"delete_gr_and_bb_sptr(gr_and_bb_sptr self)"},
	 { (char *)"gr_and_bb_sptr_history", _wrap_gr_and_bb_sptr_history, METH_VARARGS, (char *)"gr_and_bb_sptr_history(gr_and_bb_sptr self) -> unsigned int"},
	 { (char *)"gr_and_bb_sptr_output_multiple", _wrap_gr_and_bb_sptr_output_multiple, METH_VARARGS, (char *)"gr_and_bb_sptr_output_multiple(gr_and_bb_sptr self) -> int"},
	 { (char *)"gr_and_bb_sptr_relative_rate", _wrap_gr_and_bb_sptr_relative_rate, METH_VARARGS, (char *)"gr_and_bb_sptr_relative_rate(gr_and_bb_sptr self) -> double"},
	 { (char *)"gr_and_bb_sptr_start", _wrap_gr_and_bb_sptr_start, METH_VARARGS, (char *)"gr_and_bb_sptr_start(gr_and_bb_sptr self) -> bool"},
	 { (char *)"gr_and_bb_sptr_stop", _wrap_gr_and_bb_sptr_stop, METH_VARARGS, (char *)"gr_and_bb_sptr_stop(gr_and_bb_sptr self) -> bool"},
	 { (char *)"gr_and_bb_sptr_nitems_read", (PyCFunction) _wrap_gr_and_bb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_bb_sptr_nitems_read(gr_and_bb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_and_bb_sptr_nitems_written", (PyCFunction) _wrap_gr_and_bb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_bb_sptr_nitems_written(gr_and_bb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_and_bb_sptr_detail", _wrap_gr_and_bb_sptr_detail, METH_VARARGS, (char *)"gr_and_bb_sptr_detail(gr_and_bb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_and_bb_sptr_set_detail", (PyCFunction) _wrap_gr_and_bb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_bb_sptr_set_detail(gr_and_bb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_and_bb_sptr_name", _wrap_gr_and_bb_sptr_name, METH_VARARGS, (char *)"gr_and_bb_sptr_name(gr_and_bb_sptr self) -> string"},
	 { (char *)"gr_and_bb_sptr_input_signature", _wrap_gr_and_bb_sptr_input_signature, METH_VARARGS, (char *)"gr_and_bb_sptr_input_signature(gr_and_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_bb_sptr_output_signature", _wrap_gr_and_bb_sptr_output_signature, METH_VARARGS, (char *)"gr_and_bb_sptr_output_signature(gr_and_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_bb_sptr_unique_id", _wrap_gr_and_bb_sptr_unique_id, METH_VARARGS, (char *)"gr_and_bb_sptr_unique_id(gr_and_bb_sptr self) -> long"},
	 { (char *)"gr_and_bb_sptr_to_basic_block", _wrap_gr_and_bb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_and_bb_sptr_to_basic_block(gr_and_bb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_and_bb_sptr_check_topology", (PyCFunction) _wrap_gr_and_bb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_bb_sptr_check_topology(gr_and_bb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_and_bb_sptr_swigregister", gr_and_bb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"and_bb", _wrap_and_bb, METH_VARARGS, (char *)"and_bb() -> gr_and_bb_sptr"},
	 { (char *)"new_gr_and_ss_sptr", _wrap_new_gr_and_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_and_ss_sptr()\n"
		"new_gr_and_ss_sptr( p) -> gr_and_ss_sptr\n"
		""},
	 { (char *)"gr_and_ss_sptr___deref__", _wrap_gr_and_ss_sptr___deref__, METH_VARARGS, (char *)"gr_and_ss_sptr___deref__(gr_and_ss_sptr self)"},
	 { (char *)"delete_gr_and_ss_sptr", _wrap_delete_gr_and_ss_sptr, METH_VARARGS, (char *)"delete_gr_and_ss_sptr(gr_and_ss_sptr self)"},
	 { (char *)"gr_and_ss_sptr_history", _wrap_gr_and_ss_sptr_history, METH_VARARGS, (char *)"gr_and_ss_sptr_history(gr_and_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_and_ss_sptr_output_multiple", _wrap_gr_and_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_and_ss_sptr_output_multiple(gr_and_ss_sptr self) -> int"},
	 { (char *)"gr_and_ss_sptr_relative_rate", _wrap_gr_and_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_and_ss_sptr_relative_rate(gr_and_ss_sptr self) -> double"},
	 { (char *)"gr_and_ss_sptr_start", _wrap_gr_and_ss_sptr_start, METH_VARARGS, (char *)"gr_and_ss_sptr_start(gr_and_ss_sptr self) -> bool"},
	 { (char *)"gr_and_ss_sptr_stop", _wrap_gr_and_ss_sptr_stop, METH_VARARGS, (char *)"gr_and_ss_sptr_stop(gr_and_ss_sptr self) -> bool"},
	 { (char *)"gr_and_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_and_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_ss_sptr_nitems_read(gr_and_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_and_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_and_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_ss_sptr_nitems_written(gr_and_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_and_ss_sptr_detail", _wrap_gr_and_ss_sptr_detail, METH_VARARGS, (char *)"gr_and_ss_sptr_detail(gr_and_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_and_ss_sptr_set_detail", (PyCFunction) _wrap_gr_and_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_ss_sptr_set_detail(gr_and_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_and_ss_sptr_name", _wrap_gr_and_ss_sptr_name, METH_VARARGS, (char *)"gr_and_ss_sptr_name(gr_and_ss_sptr self) -> string"},
	 { (char *)"gr_and_ss_sptr_input_signature", _wrap_gr_and_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_and_ss_sptr_input_signature(gr_and_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_ss_sptr_output_signature", _wrap_gr_and_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_and_ss_sptr_output_signature(gr_and_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_ss_sptr_unique_id", _wrap_gr_and_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_and_ss_sptr_unique_id(gr_and_ss_sptr self) -> long"},
	 { (char *)"gr_and_ss_sptr_to_basic_block", _wrap_gr_and_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_and_ss_sptr_to_basic_block(gr_and_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_and_ss_sptr_check_topology", (PyCFunction) _wrap_gr_and_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_ss_sptr_check_topology(gr_and_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_and_ss_sptr_swigregister", gr_and_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"and_ss", _wrap_and_ss, METH_VARARGS, (char *)"and_ss() -> gr_and_ss_sptr"},
	 { (char *)"new_gr_and_ii_sptr", _wrap_new_gr_and_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_and_ii_sptr()\n"
		"new_gr_and_ii_sptr( p) -> gr_and_ii_sptr\n"
		""},
	 { (char *)"gr_and_ii_sptr___deref__", _wrap_gr_and_ii_sptr___deref__, METH_VARARGS, (char *)"gr_and_ii_sptr___deref__(gr_and_ii_sptr self)"},
	 { (char *)"delete_gr_and_ii_sptr", _wrap_delete_gr_and_ii_sptr, METH_VARARGS, (char *)"delete_gr_and_ii_sptr(gr_and_ii_sptr self)"},
	 { (char *)"gr_and_ii_sptr_history", _wrap_gr_and_ii_sptr_history, METH_VARARGS, (char *)"gr_and_ii_sptr_history(gr_and_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_and_ii_sptr_output_multiple", _wrap_gr_and_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_and_ii_sptr_output_multiple(gr_and_ii_sptr self) -> int"},
	 { (char *)"gr_and_ii_sptr_relative_rate", _wrap_gr_and_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_and_ii_sptr_relative_rate(gr_and_ii_sptr self) -> double"},
	 { (char *)"gr_and_ii_sptr_start", _wrap_gr_and_ii_sptr_start, METH_VARARGS, (char *)"gr_and_ii_sptr_start(gr_and_ii_sptr self) -> bool"},
	 { (char *)"gr_and_ii_sptr_stop", _wrap_gr_and_ii_sptr_stop, METH_VARARGS, (char *)"gr_and_ii_sptr_stop(gr_and_ii_sptr self) -> bool"},
	 { (char *)"gr_and_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_and_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_ii_sptr_nitems_read(gr_and_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_and_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_and_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_ii_sptr_nitems_written(gr_and_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_and_ii_sptr_detail", _wrap_gr_and_ii_sptr_detail, METH_VARARGS, (char *)"gr_and_ii_sptr_detail(gr_and_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_and_ii_sptr_set_detail", (PyCFunction) _wrap_gr_and_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_ii_sptr_set_detail(gr_and_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_and_ii_sptr_name", _wrap_gr_and_ii_sptr_name, METH_VARARGS, (char *)"gr_and_ii_sptr_name(gr_and_ii_sptr self) -> string"},
	 { (char *)"gr_and_ii_sptr_input_signature", _wrap_gr_and_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_and_ii_sptr_input_signature(gr_and_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_ii_sptr_output_signature", _wrap_gr_and_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_and_ii_sptr_output_signature(gr_and_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_ii_sptr_unique_id", _wrap_gr_and_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_and_ii_sptr_unique_id(gr_and_ii_sptr self) -> long"},
	 { (char *)"gr_and_ii_sptr_to_basic_block", _wrap_gr_and_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_and_ii_sptr_to_basic_block(gr_and_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_and_ii_sptr_check_topology", (PyCFunction) _wrap_gr_and_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_ii_sptr_check_topology(gr_and_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_and_ii_sptr_swigregister", gr_and_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"and_ii", _wrap_and_ii, METH_VARARGS, (char *)"and_ii() -> gr_and_ii_sptr"},
	 { (char *)"new_gr_and_const_bb_sptr", _wrap_new_gr_and_const_bb_sptr, METH_VARARGS, (char *)"\n"
		"gr_and_const_bb_sptr()\n"
		"new_gr_and_const_bb_sptr( p) -> gr_and_const_bb_sptr\n"
		""},
	 { (char *)"gr_and_const_bb_sptr___deref__", _wrap_gr_and_const_bb_sptr___deref__, METH_VARARGS, (char *)"gr_and_const_bb_sptr___deref__(gr_and_const_bb_sptr self)"},
	 { (char *)"delete_gr_and_const_bb_sptr", _wrap_delete_gr_and_const_bb_sptr, METH_VARARGS, (char *)"delete_gr_and_const_bb_sptr(gr_and_const_bb_sptr self)"},
	 { (char *)"gr_and_const_bb_sptr_k", _wrap_gr_and_const_bb_sptr_k, METH_VARARGS, (char *)"gr_and_const_bb_sptr_k(gr_and_const_bb_sptr self) -> unsigned char"},
	 { (char *)"gr_and_const_bb_sptr_set_k", (PyCFunction) _wrap_gr_and_const_bb_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_bb_sptr_set_k(gr_and_const_bb_sptr self, unsigned char k)"},
	 { (char *)"gr_and_const_bb_sptr_history", _wrap_gr_and_const_bb_sptr_history, METH_VARARGS, (char *)"gr_and_const_bb_sptr_history(gr_and_const_bb_sptr self) -> unsigned int"},
	 { (char *)"gr_and_const_bb_sptr_output_multiple", _wrap_gr_and_const_bb_sptr_output_multiple, METH_VARARGS, (char *)"gr_and_const_bb_sptr_output_multiple(gr_and_const_bb_sptr self) -> int"},
	 { (char *)"gr_and_const_bb_sptr_relative_rate", _wrap_gr_and_const_bb_sptr_relative_rate, METH_VARARGS, (char *)"gr_and_const_bb_sptr_relative_rate(gr_and_const_bb_sptr self) -> double"},
	 { (char *)"gr_and_const_bb_sptr_start", _wrap_gr_and_const_bb_sptr_start, METH_VARARGS, (char *)"gr_and_const_bb_sptr_start(gr_and_const_bb_sptr self) -> bool"},
	 { (char *)"gr_and_const_bb_sptr_stop", _wrap_gr_and_const_bb_sptr_stop, METH_VARARGS, (char *)"gr_and_const_bb_sptr_stop(gr_and_const_bb_sptr self) -> bool"},
	 { (char *)"gr_and_const_bb_sptr_nitems_read", (PyCFunction) _wrap_gr_and_const_bb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_bb_sptr_nitems_read(gr_and_const_bb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_and_const_bb_sptr_nitems_written", (PyCFunction) _wrap_gr_and_const_bb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_bb_sptr_nitems_written(gr_and_const_bb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_and_const_bb_sptr_detail", _wrap_gr_and_const_bb_sptr_detail, METH_VARARGS, (char *)"gr_and_const_bb_sptr_detail(gr_and_const_bb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_and_const_bb_sptr_set_detail", (PyCFunction) _wrap_gr_and_const_bb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_bb_sptr_set_detail(gr_and_const_bb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_and_const_bb_sptr_name", _wrap_gr_and_const_bb_sptr_name, METH_VARARGS, (char *)"gr_and_const_bb_sptr_name(gr_and_const_bb_sptr self) -> string"},
	 { (char *)"gr_and_const_bb_sptr_input_signature", _wrap_gr_and_const_bb_sptr_input_signature, METH_VARARGS, (char *)"gr_and_const_bb_sptr_input_signature(gr_and_const_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_const_bb_sptr_output_signature", _wrap_gr_and_const_bb_sptr_output_signature, METH_VARARGS, (char *)"gr_and_const_bb_sptr_output_signature(gr_and_const_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_const_bb_sptr_unique_id", _wrap_gr_and_const_bb_sptr_unique_id, METH_VARARGS, (char *)"gr_and_const_bb_sptr_unique_id(gr_and_const_bb_sptr self) -> long"},
	 { (char *)"gr_and_const_bb_sptr_to_basic_block", _wrap_gr_and_const_bb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_and_const_bb_sptr_to_basic_block(gr_and_const_bb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_and_const_bb_sptr_check_topology", (PyCFunction) _wrap_gr_and_const_bb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_bb_sptr_check_topology(gr_and_const_bb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_and_const_bb_sptr_swigregister", gr_and_const_bb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"and_const_bb", (PyCFunction) _wrap_and_const_bb, METH_VARARGS | METH_KEYWORDS, (char *)"and_const_bb(unsigned char k) -> gr_and_const_bb_sptr"},
	 { (char *)"new_gr_and_const_ss_sptr", _wrap_new_gr_and_const_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_and_const_ss_sptr()\n"
		"new_gr_and_const_ss_sptr( p) -> gr_and_const_ss_sptr\n"
		""},
	 { (char *)"gr_and_const_ss_sptr___deref__", _wrap_gr_and_const_ss_sptr___deref__, METH_VARARGS, (char *)"gr_and_const_ss_sptr___deref__(gr_and_const_ss_sptr self)"},
	 { (char *)"delete_gr_and_const_ss_sptr", _wrap_delete_gr_and_const_ss_sptr, METH_VARARGS, (char *)"delete_gr_and_const_ss_sptr(gr_and_const_ss_sptr self)"},
	 { (char *)"gr_and_const_ss_sptr_k", _wrap_gr_and_const_ss_sptr_k, METH_VARARGS, (char *)"gr_and_const_ss_sptr_k(gr_and_const_ss_sptr self) -> short"},
	 { (char *)"gr_and_const_ss_sptr_set_k", (PyCFunction) _wrap_gr_and_const_ss_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ss_sptr_set_k(gr_and_const_ss_sptr self, short k)"},
	 { (char *)"gr_and_const_ss_sptr_history", _wrap_gr_and_const_ss_sptr_history, METH_VARARGS, (char *)"gr_and_const_ss_sptr_history(gr_and_const_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_and_const_ss_sptr_output_multiple", _wrap_gr_and_const_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_and_const_ss_sptr_output_multiple(gr_and_const_ss_sptr self) -> int"},
	 { (char *)"gr_and_const_ss_sptr_relative_rate", _wrap_gr_and_const_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_and_const_ss_sptr_relative_rate(gr_and_const_ss_sptr self) -> double"},
	 { (char *)"gr_and_const_ss_sptr_start", _wrap_gr_and_const_ss_sptr_start, METH_VARARGS, (char *)"gr_and_const_ss_sptr_start(gr_and_const_ss_sptr self) -> bool"},
	 { (char *)"gr_and_const_ss_sptr_stop", _wrap_gr_and_const_ss_sptr_stop, METH_VARARGS, (char *)"gr_and_const_ss_sptr_stop(gr_and_const_ss_sptr self) -> bool"},
	 { (char *)"gr_and_const_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_and_const_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ss_sptr_nitems_read(gr_and_const_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_and_const_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_and_const_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ss_sptr_nitems_written(gr_and_const_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_and_const_ss_sptr_detail", _wrap_gr_and_const_ss_sptr_detail, METH_VARARGS, (char *)"gr_and_const_ss_sptr_detail(gr_and_const_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_and_const_ss_sptr_set_detail", (PyCFunction) _wrap_gr_and_const_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ss_sptr_set_detail(gr_and_const_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_and_const_ss_sptr_name", _wrap_gr_and_const_ss_sptr_name, METH_VARARGS, (char *)"gr_and_const_ss_sptr_name(gr_and_const_ss_sptr self) -> string"},
	 { (char *)"gr_and_const_ss_sptr_input_signature", _wrap_gr_and_const_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_and_const_ss_sptr_input_signature(gr_and_const_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_const_ss_sptr_output_signature", _wrap_gr_and_const_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_and_const_ss_sptr_output_signature(gr_and_const_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_const_ss_sptr_unique_id", _wrap_gr_and_const_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_and_const_ss_sptr_unique_id(gr_and_const_ss_sptr self) -> long"},
	 { (char *)"gr_and_const_ss_sptr_to_basic_block", _wrap_gr_and_const_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_and_const_ss_sptr_to_basic_block(gr_and_const_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_and_const_ss_sptr_check_topology", (PyCFunction) _wrap_gr_and_const_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ss_sptr_check_topology(gr_and_const_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_and_const_ss_sptr_swigregister", gr_and_const_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"and_const_ss", (PyCFunction) _wrap_and_const_ss, METH_VARARGS | METH_KEYWORDS, (char *)"and_const_ss(short k) -> gr_and_const_ss_sptr"},
	 { (char *)"new_gr_and_const_ii_sptr", _wrap_new_gr_and_const_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_and_const_ii_sptr()\n"
		"new_gr_and_const_ii_sptr( p) -> gr_and_const_ii_sptr\n"
		""},
	 { (char *)"gr_and_const_ii_sptr___deref__", _wrap_gr_and_const_ii_sptr___deref__, METH_VARARGS, (char *)"gr_and_const_ii_sptr___deref__(gr_and_const_ii_sptr self)"},
	 { (char *)"delete_gr_and_const_ii_sptr", _wrap_delete_gr_and_const_ii_sptr, METH_VARARGS, (char *)"delete_gr_and_const_ii_sptr(gr_and_const_ii_sptr self)"},
	 { (char *)"gr_and_const_ii_sptr_k", _wrap_gr_and_const_ii_sptr_k, METH_VARARGS, (char *)"gr_and_const_ii_sptr_k(gr_and_const_ii_sptr self) -> int"},
	 { (char *)"gr_and_const_ii_sptr_set_k", (PyCFunction) _wrap_gr_and_const_ii_sptr_set_k, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ii_sptr_set_k(gr_and_const_ii_sptr self, int k)"},
	 { (char *)"gr_and_const_ii_sptr_history", _wrap_gr_and_const_ii_sptr_history, METH_VARARGS, (char *)"gr_and_const_ii_sptr_history(gr_and_const_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_and_const_ii_sptr_output_multiple", _wrap_gr_and_const_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_and_const_ii_sptr_output_multiple(gr_and_const_ii_sptr self) -> int"},
	 { (char *)"gr_and_const_ii_sptr_relative_rate", _wrap_gr_and_const_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_and_const_ii_sptr_relative_rate(gr_and_const_ii_sptr self) -> double"},
	 { (char *)"gr_and_const_ii_sptr_start", _wrap_gr_and_const_ii_sptr_start, METH_VARARGS, (char *)"gr_and_const_ii_sptr_start(gr_and_const_ii_sptr self) -> bool"},
	 { (char *)"gr_and_const_ii_sptr_stop", _wrap_gr_and_const_ii_sptr_stop, METH_VARARGS, (char *)"gr_and_const_ii_sptr_stop(gr_and_const_ii_sptr self) -> bool"},
	 { (char *)"gr_and_const_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_and_const_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ii_sptr_nitems_read(gr_and_const_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_and_const_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_and_const_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ii_sptr_nitems_written(gr_and_const_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_and_const_ii_sptr_detail", _wrap_gr_and_const_ii_sptr_detail, METH_VARARGS, (char *)"gr_and_const_ii_sptr_detail(gr_and_const_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_and_const_ii_sptr_set_detail", (PyCFunction) _wrap_gr_and_const_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ii_sptr_set_detail(gr_and_const_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_and_const_ii_sptr_name", _wrap_gr_and_const_ii_sptr_name, METH_VARARGS, (char *)"gr_and_const_ii_sptr_name(gr_and_const_ii_sptr self) -> string"},
	 { (char *)"gr_and_const_ii_sptr_input_signature", _wrap_gr_and_const_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_and_const_ii_sptr_input_signature(gr_and_const_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_const_ii_sptr_output_signature", _wrap_gr_and_const_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_and_const_ii_sptr_output_signature(gr_and_const_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_and_const_ii_sptr_unique_id", _wrap_gr_and_const_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_and_const_ii_sptr_unique_id(gr_and_const_ii_sptr self) -> long"},
	 { (char *)"gr_and_const_ii_sptr_to_basic_block", _wrap_gr_and_const_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_and_const_ii_sptr_to_basic_block(gr_and_const_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_and_const_ii_sptr_check_topology", (PyCFunction) _wrap_gr_and_const_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_and_const_ii_sptr_check_topology(gr_and_const_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_and_const_ii_sptr_swigregister", gr_and_const_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"and_const_ii", (PyCFunction) _wrap_and_const_ii, METH_VARARGS | METH_KEYWORDS, (char *)"and_const_ii(int k) -> gr_and_const_ii_sptr"},
	 { (char *)"new_gr_or_bb_sptr", _wrap_new_gr_or_bb_sptr, METH_VARARGS, (char *)"\n"
		"gr_or_bb_sptr()\n"
		"new_gr_or_bb_sptr( p) -> gr_or_bb_sptr\n"
		""},
	 { (char *)"gr_or_bb_sptr___deref__", _wrap_gr_or_bb_sptr___deref__, METH_VARARGS, (char *)"gr_or_bb_sptr___deref__(gr_or_bb_sptr self)"},
	 { (char *)"delete_gr_or_bb_sptr", _wrap_delete_gr_or_bb_sptr, METH_VARARGS, (char *)"delete_gr_or_bb_sptr(gr_or_bb_sptr self)"},
	 { (char *)"gr_or_bb_sptr_history", _wrap_gr_or_bb_sptr_history, METH_VARARGS, (char *)"gr_or_bb_sptr_history(gr_or_bb_sptr self) -> unsigned int"},
	 { (char *)"gr_or_bb_sptr_output_multiple", _wrap_gr_or_bb_sptr_output_multiple, METH_VARARGS, (char *)"gr_or_bb_sptr_output_multiple(gr_or_bb_sptr self) -> int"},
	 { (char *)"gr_or_bb_sptr_relative_rate", _wrap_gr_or_bb_sptr_relative_rate, METH_VARARGS, (char *)"gr_or_bb_sptr_relative_rate(gr_or_bb_sptr self) -> double"},
	 { (char *)"gr_or_bb_sptr_start", _wrap_gr_or_bb_sptr_start, METH_VARARGS, (char *)"gr_or_bb_sptr_start(gr_or_bb_sptr self) -> bool"},
	 { (char *)"gr_or_bb_sptr_stop", _wrap_gr_or_bb_sptr_stop, METH_VARARGS, (char *)"gr_or_bb_sptr_stop(gr_or_bb_sptr self) -> bool"},
	 { (char *)"gr_or_bb_sptr_nitems_read", (PyCFunction) _wrap_gr_or_bb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_bb_sptr_nitems_read(gr_or_bb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_or_bb_sptr_nitems_written", (PyCFunction) _wrap_gr_or_bb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_bb_sptr_nitems_written(gr_or_bb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_or_bb_sptr_detail", _wrap_gr_or_bb_sptr_detail, METH_VARARGS, (char *)"gr_or_bb_sptr_detail(gr_or_bb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_or_bb_sptr_set_detail", (PyCFunction) _wrap_gr_or_bb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_bb_sptr_set_detail(gr_or_bb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_or_bb_sptr_name", _wrap_gr_or_bb_sptr_name, METH_VARARGS, (char *)"gr_or_bb_sptr_name(gr_or_bb_sptr self) -> string"},
	 { (char *)"gr_or_bb_sptr_input_signature", _wrap_gr_or_bb_sptr_input_signature, METH_VARARGS, (char *)"gr_or_bb_sptr_input_signature(gr_or_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_or_bb_sptr_output_signature", _wrap_gr_or_bb_sptr_output_signature, METH_VARARGS, (char *)"gr_or_bb_sptr_output_signature(gr_or_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_or_bb_sptr_unique_id", _wrap_gr_or_bb_sptr_unique_id, METH_VARARGS, (char *)"gr_or_bb_sptr_unique_id(gr_or_bb_sptr self) -> long"},
	 { (char *)"gr_or_bb_sptr_to_basic_block", _wrap_gr_or_bb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_or_bb_sptr_to_basic_block(gr_or_bb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_or_bb_sptr_check_topology", (PyCFunction) _wrap_gr_or_bb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_bb_sptr_check_topology(gr_or_bb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_or_bb_sptr_swigregister", gr_or_bb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"or_bb", _wrap_or_bb, METH_VARARGS, (char *)"or_bb() -> gr_or_bb_sptr"},
	 { (char *)"new_gr_or_ss_sptr", _wrap_new_gr_or_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_or_ss_sptr()\n"
		"new_gr_or_ss_sptr( p) -> gr_or_ss_sptr\n"
		""},
	 { (char *)"gr_or_ss_sptr___deref__", _wrap_gr_or_ss_sptr___deref__, METH_VARARGS, (char *)"gr_or_ss_sptr___deref__(gr_or_ss_sptr self)"},
	 { (char *)"delete_gr_or_ss_sptr", _wrap_delete_gr_or_ss_sptr, METH_VARARGS, (char *)"delete_gr_or_ss_sptr(gr_or_ss_sptr self)"},
	 { (char *)"gr_or_ss_sptr_history", _wrap_gr_or_ss_sptr_history, METH_VARARGS, (char *)"gr_or_ss_sptr_history(gr_or_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_or_ss_sptr_output_multiple", _wrap_gr_or_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_or_ss_sptr_output_multiple(gr_or_ss_sptr self) -> int"},
	 { (char *)"gr_or_ss_sptr_relative_rate", _wrap_gr_or_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_or_ss_sptr_relative_rate(gr_or_ss_sptr self) -> double"},
	 { (char *)"gr_or_ss_sptr_start", _wrap_gr_or_ss_sptr_start, METH_VARARGS, (char *)"gr_or_ss_sptr_start(gr_or_ss_sptr self) -> bool"},
	 { (char *)"gr_or_ss_sptr_stop", _wrap_gr_or_ss_sptr_stop, METH_VARARGS, (char *)"gr_or_ss_sptr_stop(gr_or_ss_sptr self) -> bool"},
	 { (char *)"gr_or_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_or_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_ss_sptr_nitems_read(gr_or_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_or_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_or_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_ss_sptr_nitems_written(gr_or_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_or_ss_sptr_detail", _wrap_gr_or_ss_sptr_detail, METH_VARARGS, (char *)"gr_or_ss_sptr_detail(gr_or_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_or_ss_sptr_set_detail", (PyCFunction) _wrap_gr_or_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_ss_sptr_set_detail(gr_or_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_or_ss_sptr_name", _wrap_gr_or_ss_sptr_name, METH_VARARGS, (char *)"gr_or_ss_sptr_name(gr_or_ss_sptr self) -> string"},
	 { (char *)"gr_or_ss_sptr_input_signature", _wrap_gr_or_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_or_ss_sptr_input_signature(gr_or_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_or_ss_sptr_output_signature", _wrap_gr_or_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_or_ss_sptr_output_signature(gr_or_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_or_ss_sptr_unique_id", _wrap_gr_or_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_or_ss_sptr_unique_id(gr_or_ss_sptr self) -> long"},
	 { (char *)"gr_or_ss_sptr_to_basic_block", _wrap_gr_or_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_or_ss_sptr_to_basic_block(gr_or_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_or_ss_sptr_check_topology", (PyCFunction) _wrap_gr_or_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_ss_sptr_check_topology(gr_or_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_or_ss_sptr_swigregister", gr_or_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"or_ss", _wrap_or_ss, METH_VARARGS, (char *)"or_ss() -> gr_or_ss_sptr"},
	 { (char *)"new_gr_or_ii_sptr", _wrap_new_gr_or_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_or_ii_sptr()\n"
		"new_gr_or_ii_sptr( p) -> gr_or_ii_sptr\n"
		""},
	 { (char *)"gr_or_ii_sptr___deref__", _wrap_gr_or_ii_sptr___deref__, METH_VARARGS, (char *)"gr_or_ii_sptr___deref__(gr_or_ii_sptr self)"},
	 { (char *)"delete_gr_or_ii_sptr", _wrap_delete_gr_or_ii_sptr, METH_VARARGS, (char *)"delete_gr_or_ii_sptr(gr_or_ii_sptr self)"},
	 { (char *)"gr_or_ii_sptr_history", _wrap_gr_or_ii_sptr_history, METH_VARARGS, (char *)"gr_or_ii_sptr_history(gr_or_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_or_ii_sptr_output_multiple", _wrap_gr_or_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_or_ii_sptr_output_multiple(gr_or_ii_sptr self) -> int"},
	 { (char *)"gr_or_ii_sptr_relative_rate", _wrap_gr_or_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_or_ii_sptr_relative_rate(gr_or_ii_sptr self) -> double"},
	 { (char *)"gr_or_ii_sptr_start", _wrap_gr_or_ii_sptr_start, METH_VARARGS, (char *)"gr_or_ii_sptr_start(gr_or_ii_sptr self) -> bool"},
	 { (char *)"gr_or_ii_sptr_stop", _wrap_gr_or_ii_sptr_stop, METH_VARARGS, (char *)"gr_or_ii_sptr_stop(gr_or_ii_sptr self) -> bool"},
	 { (char *)"gr_or_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_or_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_ii_sptr_nitems_read(gr_or_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_or_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_or_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_ii_sptr_nitems_written(gr_or_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_or_ii_sptr_detail", _wrap_gr_or_ii_sptr_detail, METH_VARARGS, (char *)"gr_or_ii_sptr_detail(gr_or_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_or_ii_sptr_set_detail", (PyCFunction) _wrap_gr_or_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_ii_sptr_set_detail(gr_or_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_or_ii_sptr_name", _wrap_gr_or_ii_sptr_name, METH_VARARGS, (char *)"gr_or_ii_sptr_name(gr_or_ii_sptr self) -> string"},
	 { (char *)"gr_or_ii_sptr_input_signature", _wrap_gr_or_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_or_ii_sptr_input_signature(gr_or_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_or_ii_sptr_output_signature", _wrap_gr_or_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_or_ii_sptr_output_signature(gr_or_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_or_ii_sptr_unique_id", _wrap_gr_or_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_or_ii_sptr_unique_id(gr_or_ii_sptr self) -> long"},
	 { (char *)"gr_or_ii_sptr_to_basic_block", _wrap_gr_or_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_or_ii_sptr_to_basic_block(gr_or_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_or_ii_sptr_check_topology", (PyCFunction) _wrap_gr_or_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_or_ii_sptr_check_topology(gr_or_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_or_ii_sptr_swigregister", gr_or_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"or_ii", _wrap_or_ii, METH_VARARGS, (char *)"or_ii() -> gr_or_ii_sptr"},
	 { (char *)"new_gr_not_bb_sptr", _wrap_new_gr_not_bb_sptr, METH_VARARGS, (char *)"\n"
		"gr_not_bb_sptr()\n"
		"new_gr_not_bb_sptr( p) -> gr_not_bb_sptr\n"
		""},
	 { (char *)"gr_not_bb_sptr___deref__", _wrap_gr_not_bb_sptr___deref__, METH_VARARGS, (char *)"gr_not_bb_sptr___deref__(gr_not_bb_sptr self)"},
	 { (char *)"delete_gr_not_bb_sptr", _wrap_delete_gr_not_bb_sptr, METH_VARARGS, (char *)"delete_gr_not_bb_sptr(gr_not_bb_sptr self)"},
	 { (char *)"gr_not_bb_sptr_history", _wrap_gr_not_bb_sptr_history, METH_VARARGS, (char *)"gr_not_bb_sptr_history(gr_not_bb_sptr self) -> unsigned int"},
	 { (char *)"gr_not_bb_sptr_output_multiple", _wrap_gr_not_bb_sptr_output_multiple, METH_VARARGS, (char *)"gr_not_bb_sptr_output_multiple(gr_not_bb_sptr self) -> int"},
	 { (char *)"gr_not_bb_sptr_relative_rate", _wrap_gr_not_bb_sptr_relative_rate, METH_VARARGS, (char *)"gr_not_bb_sptr_relative_rate(gr_not_bb_sptr self) -> double"},
	 { (char *)"gr_not_bb_sptr_start", _wrap_gr_not_bb_sptr_start, METH_VARARGS, (char *)"gr_not_bb_sptr_start(gr_not_bb_sptr self) -> bool"},
	 { (char *)"gr_not_bb_sptr_stop", _wrap_gr_not_bb_sptr_stop, METH_VARARGS, (char *)"gr_not_bb_sptr_stop(gr_not_bb_sptr self) -> bool"},
	 { (char *)"gr_not_bb_sptr_nitems_read", (PyCFunction) _wrap_gr_not_bb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_bb_sptr_nitems_read(gr_not_bb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_not_bb_sptr_nitems_written", (PyCFunction) _wrap_gr_not_bb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_bb_sptr_nitems_written(gr_not_bb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_not_bb_sptr_detail", _wrap_gr_not_bb_sptr_detail, METH_VARARGS, (char *)"gr_not_bb_sptr_detail(gr_not_bb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_not_bb_sptr_set_detail", (PyCFunction) _wrap_gr_not_bb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_bb_sptr_set_detail(gr_not_bb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_not_bb_sptr_name", _wrap_gr_not_bb_sptr_name, METH_VARARGS, (char *)"gr_not_bb_sptr_name(gr_not_bb_sptr self) -> string"},
	 { (char *)"gr_not_bb_sptr_input_signature", _wrap_gr_not_bb_sptr_input_signature, METH_VARARGS, (char *)"gr_not_bb_sptr_input_signature(gr_not_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_not_bb_sptr_output_signature", _wrap_gr_not_bb_sptr_output_signature, METH_VARARGS, (char *)"gr_not_bb_sptr_output_signature(gr_not_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_not_bb_sptr_unique_id", _wrap_gr_not_bb_sptr_unique_id, METH_VARARGS, (char *)"gr_not_bb_sptr_unique_id(gr_not_bb_sptr self) -> long"},
	 { (char *)"gr_not_bb_sptr_to_basic_block", _wrap_gr_not_bb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_not_bb_sptr_to_basic_block(gr_not_bb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_not_bb_sptr_check_topology", (PyCFunction) _wrap_gr_not_bb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_bb_sptr_check_topology(gr_not_bb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_not_bb_sptr_swigregister", gr_not_bb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"not_bb", _wrap_not_bb, METH_VARARGS, (char *)"not_bb() -> gr_not_bb_sptr"},
	 { (char *)"new_gr_not_ss_sptr", _wrap_new_gr_not_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_not_ss_sptr()\n"
		"new_gr_not_ss_sptr( p) -> gr_not_ss_sptr\n"
		""},
	 { (char *)"gr_not_ss_sptr___deref__", _wrap_gr_not_ss_sptr___deref__, METH_VARARGS, (char *)"gr_not_ss_sptr___deref__(gr_not_ss_sptr self)"},
	 { (char *)"delete_gr_not_ss_sptr", _wrap_delete_gr_not_ss_sptr, METH_VARARGS, (char *)"delete_gr_not_ss_sptr(gr_not_ss_sptr self)"},
	 { (char *)"gr_not_ss_sptr_history", _wrap_gr_not_ss_sptr_history, METH_VARARGS, (char *)"gr_not_ss_sptr_history(gr_not_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_not_ss_sptr_output_multiple", _wrap_gr_not_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_not_ss_sptr_output_multiple(gr_not_ss_sptr self) -> int"},
	 { (char *)"gr_not_ss_sptr_relative_rate", _wrap_gr_not_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_not_ss_sptr_relative_rate(gr_not_ss_sptr self) -> double"},
	 { (char *)"gr_not_ss_sptr_start", _wrap_gr_not_ss_sptr_start, METH_VARARGS, (char *)"gr_not_ss_sptr_start(gr_not_ss_sptr self) -> bool"},
	 { (char *)"gr_not_ss_sptr_stop", _wrap_gr_not_ss_sptr_stop, METH_VARARGS, (char *)"gr_not_ss_sptr_stop(gr_not_ss_sptr self) -> bool"},
	 { (char *)"gr_not_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_not_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_ss_sptr_nitems_read(gr_not_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_not_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_not_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_ss_sptr_nitems_written(gr_not_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_not_ss_sptr_detail", _wrap_gr_not_ss_sptr_detail, METH_VARARGS, (char *)"gr_not_ss_sptr_detail(gr_not_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_not_ss_sptr_set_detail", (PyCFunction) _wrap_gr_not_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_ss_sptr_set_detail(gr_not_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_not_ss_sptr_name", _wrap_gr_not_ss_sptr_name, METH_VARARGS, (char *)"gr_not_ss_sptr_name(gr_not_ss_sptr self) -> string"},
	 { (char *)"gr_not_ss_sptr_input_signature", _wrap_gr_not_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_not_ss_sptr_input_signature(gr_not_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_not_ss_sptr_output_signature", _wrap_gr_not_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_not_ss_sptr_output_signature(gr_not_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_not_ss_sptr_unique_id", _wrap_gr_not_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_not_ss_sptr_unique_id(gr_not_ss_sptr self) -> long"},
	 { (char *)"gr_not_ss_sptr_to_basic_block", _wrap_gr_not_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_not_ss_sptr_to_basic_block(gr_not_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_not_ss_sptr_check_topology", (PyCFunction) _wrap_gr_not_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_ss_sptr_check_topology(gr_not_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_not_ss_sptr_swigregister", gr_not_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"not_ss", _wrap_not_ss, METH_VARARGS, (char *)"not_ss() -> gr_not_ss_sptr"},
	 { (char *)"new_gr_not_ii_sptr", _wrap_new_gr_not_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_not_ii_sptr()\n"
		"new_gr_not_ii_sptr( p) -> gr_not_ii_sptr\n"
		""},
	 { (char *)"gr_not_ii_sptr___deref__", _wrap_gr_not_ii_sptr___deref__, METH_VARARGS, (char *)"gr_not_ii_sptr___deref__(gr_not_ii_sptr self)"},
	 { (char *)"delete_gr_not_ii_sptr", _wrap_delete_gr_not_ii_sptr, METH_VARARGS, (char *)"delete_gr_not_ii_sptr(gr_not_ii_sptr self)"},
	 { (char *)"gr_not_ii_sptr_history", _wrap_gr_not_ii_sptr_history, METH_VARARGS, (char *)"gr_not_ii_sptr_history(gr_not_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_not_ii_sptr_output_multiple", _wrap_gr_not_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_not_ii_sptr_output_multiple(gr_not_ii_sptr self) -> int"},
	 { (char *)"gr_not_ii_sptr_relative_rate", _wrap_gr_not_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_not_ii_sptr_relative_rate(gr_not_ii_sptr self) -> double"},
	 { (char *)"gr_not_ii_sptr_start", _wrap_gr_not_ii_sptr_start, METH_VARARGS, (char *)"gr_not_ii_sptr_start(gr_not_ii_sptr self) -> bool"},
	 { (char *)"gr_not_ii_sptr_stop", _wrap_gr_not_ii_sptr_stop, METH_VARARGS, (char *)"gr_not_ii_sptr_stop(gr_not_ii_sptr self) -> bool"},
	 { (char *)"gr_not_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_not_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_ii_sptr_nitems_read(gr_not_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_not_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_not_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_ii_sptr_nitems_written(gr_not_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_not_ii_sptr_detail", _wrap_gr_not_ii_sptr_detail, METH_VARARGS, (char *)"gr_not_ii_sptr_detail(gr_not_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_not_ii_sptr_set_detail", (PyCFunction) _wrap_gr_not_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_ii_sptr_set_detail(gr_not_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_not_ii_sptr_name", _wrap_gr_not_ii_sptr_name, METH_VARARGS, (char *)"gr_not_ii_sptr_name(gr_not_ii_sptr self) -> string"},
	 { (char *)"gr_not_ii_sptr_input_signature", _wrap_gr_not_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_not_ii_sptr_input_signature(gr_not_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_not_ii_sptr_output_signature", _wrap_gr_not_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_not_ii_sptr_output_signature(gr_not_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_not_ii_sptr_unique_id", _wrap_gr_not_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_not_ii_sptr_unique_id(gr_not_ii_sptr self) -> long"},
	 { (char *)"gr_not_ii_sptr_to_basic_block", _wrap_gr_not_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_not_ii_sptr_to_basic_block(gr_not_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_not_ii_sptr_check_topology", (PyCFunction) _wrap_gr_not_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_not_ii_sptr_check_topology(gr_not_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_not_ii_sptr_swigregister", gr_not_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"not_ii", _wrap_not_ii, METH_VARARGS, (char *)"not_ii() -> gr_not_ii_sptr"},
	 { (char *)"new_gr_sample_and_hold_bb_sptr", _wrap_new_gr_sample_and_hold_bb_sptr, METH_VARARGS, (char *)"\n"
		"gr_sample_and_hold_bb_sptr()\n"
		"new_gr_sample_and_hold_bb_sptr( p) -> gr_sample_and_hold_bb_sptr\n"
		""},
	 { (char *)"gr_sample_and_hold_bb_sptr___deref__", _wrap_gr_sample_and_hold_bb_sptr___deref__, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr___deref__(gr_sample_and_hold_bb_sptr self)"},
	 { (char *)"delete_gr_sample_and_hold_bb_sptr", _wrap_delete_gr_sample_and_hold_bb_sptr, METH_VARARGS, (char *)"delete_gr_sample_and_hold_bb_sptr(gr_sample_and_hold_bb_sptr self)"},
	 { (char *)"gr_sample_and_hold_bb_sptr_history", _wrap_gr_sample_and_hold_bb_sptr_history, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_history(gr_sample_and_hold_bb_sptr self) -> unsigned int"},
	 { (char *)"gr_sample_and_hold_bb_sptr_output_multiple", _wrap_gr_sample_and_hold_bb_sptr_output_multiple, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_output_multiple(gr_sample_and_hold_bb_sptr self) -> int"},
	 { (char *)"gr_sample_and_hold_bb_sptr_relative_rate", _wrap_gr_sample_and_hold_bb_sptr_relative_rate, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_relative_rate(gr_sample_and_hold_bb_sptr self) -> double"},
	 { (char *)"gr_sample_and_hold_bb_sptr_start", _wrap_gr_sample_and_hold_bb_sptr_start, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_start(gr_sample_and_hold_bb_sptr self) -> bool"},
	 { (char *)"gr_sample_and_hold_bb_sptr_stop", _wrap_gr_sample_and_hold_bb_sptr_stop, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_stop(gr_sample_and_hold_bb_sptr self) -> bool"},
	 { (char *)"gr_sample_and_hold_bb_sptr_nitems_read", (PyCFunction) _wrap_gr_sample_and_hold_bb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_bb_sptr_nitems_read(gr_sample_and_hold_bb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sample_and_hold_bb_sptr_nitems_written", (PyCFunction) _wrap_gr_sample_and_hold_bb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_bb_sptr_nitems_written(gr_sample_and_hold_bb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sample_and_hold_bb_sptr_detail", _wrap_gr_sample_and_hold_bb_sptr_detail, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_detail(gr_sample_and_hold_bb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sample_and_hold_bb_sptr_set_detail", (PyCFunction) _wrap_gr_sample_and_hold_bb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_bb_sptr_set_detail(gr_sample_and_hold_bb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sample_and_hold_bb_sptr_name", _wrap_gr_sample_and_hold_bb_sptr_name, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_name(gr_sample_and_hold_bb_sptr self) -> string"},
	 { (char *)"gr_sample_and_hold_bb_sptr_input_signature", _wrap_gr_sample_and_hold_bb_sptr_input_signature, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_input_signature(gr_sample_and_hold_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sample_and_hold_bb_sptr_output_signature", _wrap_gr_sample_and_hold_bb_sptr_output_signature, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_output_signature(gr_sample_and_hold_bb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sample_and_hold_bb_sptr_unique_id", _wrap_gr_sample_and_hold_bb_sptr_unique_id, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_unique_id(gr_sample_and_hold_bb_sptr self) -> long"},
	 { (char *)"gr_sample_and_hold_bb_sptr_to_basic_block", _wrap_gr_sample_and_hold_bb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sample_and_hold_bb_sptr_to_basic_block(gr_sample_and_hold_bb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sample_and_hold_bb_sptr_check_topology", (PyCFunction) _wrap_gr_sample_and_hold_bb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_bb_sptr_check_topology(gr_sample_and_hold_bb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sample_and_hold_bb_sptr_swigregister", gr_sample_and_hold_bb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sample_and_hold_bb", _wrap_sample_and_hold_bb, METH_VARARGS, (char *)"sample_and_hold_bb() -> gr_sample_and_hold_bb_sptr"},
	 { (char *)"new_gr_sample_and_hold_ss_sptr", _wrap_new_gr_sample_and_hold_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_sample_and_hold_ss_sptr()\n"
		"new_gr_sample_and_hold_ss_sptr( p) -> gr_sample_and_hold_ss_sptr\n"
		""},
	 { (char *)"gr_sample_and_hold_ss_sptr___deref__", _wrap_gr_sample_and_hold_ss_sptr___deref__, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr___deref__(gr_sample_and_hold_ss_sptr self)"},
	 { (char *)"delete_gr_sample_and_hold_ss_sptr", _wrap_delete_gr_sample_and_hold_ss_sptr, METH_VARARGS, (char *)"delete_gr_sample_and_hold_ss_sptr(gr_sample_and_hold_ss_sptr self)"},
	 { (char *)"gr_sample_and_hold_ss_sptr_history", _wrap_gr_sample_and_hold_ss_sptr_history, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_history(gr_sample_and_hold_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_sample_and_hold_ss_sptr_output_multiple", _wrap_gr_sample_and_hold_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_output_multiple(gr_sample_and_hold_ss_sptr self) -> int"},
	 { (char *)"gr_sample_and_hold_ss_sptr_relative_rate", _wrap_gr_sample_and_hold_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_relative_rate(gr_sample_and_hold_ss_sptr self) -> double"},
	 { (char *)"gr_sample_and_hold_ss_sptr_start", _wrap_gr_sample_and_hold_ss_sptr_start, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_start(gr_sample_and_hold_ss_sptr self) -> bool"},
	 { (char *)"gr_sample_and_hold_ss_sptr_stop", _wrap_gr_sample_and_hold_ss_sptr_stop, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_stop(gr_sample_and_hold_ss_sptr self) -> bool"},
	 { (char *)"gr_sample_and_hold_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_sample_and_hold_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ss_sptr_nitems_read(gr_sample_and_hold_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sample_and_hold_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_sample_and_hold_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ss_sptr_nitems_written(gr_sample_and_hold_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sample_and_hold_ss_sptr_detail", _wrap_gr_sample_and_hold_ss_sptr_detail, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_detail(gr_sample_and_hold_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sample_and_hold_ss_sptr_set_detail", (PyCFunction) _wrap_gr_sample_and_hold_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ss_sptr_set_detail(gr_sample_and_hold_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sample_and_hold_ss_sptr_name", _wrap_gr_sample_and_hold_ss_sptr_name, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_name(gr_sample_and_hold_ss_sptr self) -> string"},
	 { (char *)"gr_sample_and_hold_ss_sptr_input_signature", _wrap_gr_sample_and_hold_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_input_signature(gr_sample_and_hold_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sample_and_hold_ss_sptr_output_signature", _wrap_gr_sample_and_hold_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_output_signature(gr_sample_and_hold_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sample_and_hold_ss_sptr_unique_id", _wrap_gr_sample_and_hold_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_unique_id(gr_sample_and_hold_ss_sptr self) -> long"},
	 { (char *)"gr_sample_and_hold_ss_sptr_to_basic_block", _wrap_gr_sample_and_hold_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sample_and_hold_ss_sptr_to_basic_block(gr_sample_and_hold_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sample_and_hold_ss_sptr_check_topology", (PyCFunction) _wrap_gr_sample_and_hold_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ss_sptr_check_topology(gr_sample_and_hold_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sample_and_hold_ss_sptr_swigregister", gr_sample_and_hold_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sample_and_hold_ss", _wrap_sample_and_hold_ss, METH_VARARGS, (char *)"sample_and_hold_ss() -> gr_sample_and_hold_ss_sptr"},
	 { (char *)"new_gr_sample_and_hold_ii_sptr", _wrap_new_gr_sample_and_hold_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_sample_and_hold_ii_sptr()\n"
		"new_gr_sample_and_hold_ii_sptr( p) -> gr_sample_and_hold_ii_sptr\n"
		""},
	 { (char *)"gr_sample_and_hold_ii_sptr___deref__", _wrap_gr_sample_and_hold_ii_sptr___deref__, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr___deref__(gr_sample_and_hold_ii_sptr self)"},
	 { (char *)"delete_gr_sample_and_hold_ii_sptr", _wrap_delete_gr_sample_and_hold_ii_sptr, METH_VARARGS, (char *)"delete_gr_sample_and_hold_ii_sptr(gr_sample_and_hold_ii_sptr self)"},
	 { (char *)"gr_sample_and_hold_ii_sptr_history", _wrap_gr_sample_and_hold_ii_sptr_history, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_history(gr_sample_and_hold_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_sample_and_hold_ii_sptr_output_multiple", _wrap_gr_sample_and_hold_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_output_multiple(gr_sample_and_hold_ii_sptr self) -> int"},
	 { (char *)"gr_sample_and_hold_ii_sptr_relative_rate", _wrap_gr_sample_and_hold_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_relative_rate(gr_sample_and_hold_ii_sptr self) -> double"},
	 { (char *)"gr_sample_and_hold_ii_sptr_start", _wrap_gr_sample_and_hold_ii_sptr_start, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_start(gr_sample_and_hold_ii_sptr self) -> bool"},
	 { (char *)"gr_sample_and_hold_ii_sptr_stop", _wrap_gr_sample_and_hold_ii_sptr_stop, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_stop(gr_sample_and_hold_ii_sptr self) -> bool"},
	 { (char *)"gr_sample_and_hold_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_sample_and_hold_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ii_sptr_nitems_read(gr_sample_and_hold_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sample_and_hold_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_sample_and_hold_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ii_sptr_nitems_written(gr_sample_and_hold_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sample_and_hold_ii_sptr_detail", _wrap_gr_sample_and_hold_ii_sptr_detail, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_detail(gr_sample_and_hold_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sample_and_hold_ii_sptr_set_detail", (PyCFunction) _wrap_gr_sample_and_hold_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ii_sptr_set_detail(gr_sample_and_hold_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sample_and_hold_ii_sptr_name", _wrap_gr_sample_and_hold_ii_sptr_name, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_name(gr_sample_and_hold_ii_sptr self) -> string"},
	 { (char *)"gr_sample_and_hold_ii_sptr_input_signature", _wrap_gr_sample_and_hold_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_input_signature(gr_sample_and_hold_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sample_and_hold_ii_sptr_output_signature", _wrap_gr_sample_and_hold_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_output_signature(gr_sample_and_hold_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sample_and_hold_ii_sptr_unique_id", _wrap_gr_sample_and_hold_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_unique_id(gr_sample_and_hold_ii_sptr self) -> long"},
	 { (char *)"gr_sample_and_hold_ii_sptr_to_basic_block", _wrap_gr_sample_and_hold_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sample_and_hold_ii_sptr_to_basic_block(gr_sample_and_hold_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sample_and_hold_ii_sptr_check_topology", (PyCFunction) _wrap_gr_sample_and_hold_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ii_sptr_check_topology(gr_sample_and_hold_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sample_and_hold_ii_sptr_swigregister", gr_sample_and_hold_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sample_and_hold_ii", _wrap_sample_and_hold_ii, METH_VARARGS, (char *)"sample_and_hold_ii() -> gr_sample_and_hold_ii_sptr"},
	 { (char *)"new_gr_sample_and_hold_ff_sptr", _wrap_new_gr_sample_and_hold_ff_sptr, METH_VARARGS, (char *)"\n"
		"gr_sample_and_hold_ff_sptr()\n"
		"new_gr_sample_and_hold_ff_sptr( p) -> gr_sample_and_hold_ff_sptr\n"
		""},
	 { (char *)"gr_sample_and_hold_ff_sptr___deref__", _wrap_gr_sample_and_hold_ff_sptr___deref__, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr___deref__(gr_sample_and_hold_ff_sptr self)"},
	 { (char *)"delete_gr_sample_and_hold_ff_sptr", _wrap_delete_gr_sample_and_hold_ff_sptr, METH_VARARGS, (char *)"delete_gr_sample_and_hold_ff_sptr(gr_sample_and_hold_ff_sptr self)"},
	 { (char *)"gr_sample_and_hold_ff_sptr_history", _wrap_gr_sample_and_hold_ff_sptr_history, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_history(gr_sample_and_hold_ff_sptr self) -> unsigned int"},
	 { (char *)"gr_sample_and_hold_ff_sptr_output_multiple", _wrap_gr_sample_and_hold_ff_sptr_output_multiple, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_output_multiple(gr_sample_and_hold_ff_sptr self) -> int"},
	 { (char *)"gr_sample_and_hold_ff_sptr_relative_rate", _wrap_gr_sample_and_hold_ff_sptr_relative_rate, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_relative_rate(gr_sample_and_hold_ff_sptr self) -> double"},
	 { (char *)"gr_sample_and_hold_ff_sptr_start", _wrap_gr_sample_and_hold_ff_sptr_start, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_start(gr_sample_and_hold_ff_sptr self) -> bool"},
	 { (char *)"gr_sample_and_hold_ff_sptr_stop", _wrap_gr_sample_and_hold_ff_sptr_stop, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_stop(gr_sample_and_hold_ff_sptr self) -> bool"},
	 { (char *)"gr_sample_and_hold_ff_sptr_nitems_read", (PyCFunction) _wrap_gr_sample_and_hold_ff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ff_sptr_nitems_read(gr_sample_and_hold_ff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_sample_and_hold_ff_sptr_nitems_written", (PyCFunction) _wrap_gr_sample_and_hold_ff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ff_sptr_nitems_written(gr_sample_and_hold_ff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_sample_and_hold_ff_sptr_detail", _wrap_gr_sample_and_hold_ff_sptr_detail, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_detail(gr_sample_and_hold_ff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_sample_and_hold_ff_sptr_set_detail", (PyCFunction) _wrap_gr_sample_and_hold_ff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ff_sptr_set_detail(gr_sample_and_hold_ff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_sample_and_hold_ff_sptr_name", _wrap_gr_sample_and_hold_ff_sptr_name, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_name(gr_sample_and_hold_ff_sptr self) -> string"},
	 { (char *)"gr_sample_and_hold_ff_sptr_input_signature", _wrap_gr_sample_and_hold_ff_sptr_input_signature, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_input_signature(gr_sample_and_hold_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sample_and_hold_ff_sptr_output_signature", _wrap_gr_sample_and_hold_ff_sptr_output_signature, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_output_signature(gr_sample_and_hold_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_sample_and_hold_ff_sptr_unique_id", _wrap_gr_sample_and_hold_ff_sptr_unique_id, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_unique_id(gr_sample_and_hold_ff_sptr self) -> long"},
	 { (char *)"gr_sample_and_hold_ff_sptr_to_basic_block", _wrap_gr_sample_and_hold_ff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_sample_and_hold_ff_sptr_to_basic_block(gr_sample_and_hold_ff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_sample_and_hold_ff_sptr_check_topology", (PyCFunction) _wrap_gr_sample_and_hold_ff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_sample_and_hold_ff_sptr_check_topology(gr_sample_and_hold_ff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_sample_and_hold_ff_sptr_swigregister", gr_sample_and_hold_ff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"sample_and_hold_ff", _wrap_sample_and_hold_ff, METH_VARARGS, (char *)"sample_and_hold_ff() -> gr_sample_and_hold_ff_sptr"},
	 { (char *)"new_gr_argmax_fs_sptr", _wrap_new_gr_argmax_fs_sptr, METH_VARARGS, (char *)"\n"
		"gr_argmax_fs_sptr()\n"
		"new_gr_argmax_fs_sptr( p) -> gr_argmax_fs_sptr\n"
		""},
	 { (char *)"gr_argmax_fs_sptr___deref__", _wrap_gr_argmax_fs_sptr___deref__, METH_VARARGS, (char *)"gr_argmax_fs_sptr___deref__(gr_argmax_fs_sptr self)"},
	 { (char *)"delete_gr_argmax_fs_sptr", _wrap_delete_gr_argmax_fs_sptr, METH_VARARGS, (char *)"delete_gr_argmax_fs_sptr(gr_argmax_fs_sptr self)"},
	 { (char *)"gr_argmax_fs_sptr_history", _wrap_gr_argmax_fs_sptr_history, METH_VARARGS, (char *)"gr_argmax_fs_sptr_history(gr_argmax_fs_sptr self) -> unsigned int"},
	 { (char *)"gr_argmax_fs_sptr_output_multiple", _wrap_gr_argmax_fs_sptr_output_multiple, METH_VARARGS, (char *)"gr_argmax_fs_sptr_output_multiple(gr_argmax_fs_sptr self) -> int"},
	 { (char *)"gr_argmax_fs_sptr_relative_rate", _wrap_gr_argmax_fs_sptr_relative_rate, METH_VARARGS, (char *)"gr_argmax_fs_sptr_relative_rate(gr_argmax_fs_sptr self) -> double"},
	 { (char *)"gr_argmax_fs_sptr_start", _wrap_gr_argmax_fs_sptr_start, METH_VARARGS, (char *)"gr_argmax_fs_sptr_start(gr_argmax_fs_sptr self) -> bool"},
	 { (char *)"gr_argmax_fs_sptr_stop", _wrap_gr_argmax_fs_sptr_stop, METH_VARARGS, (char *)"gr_argmax_fs_sptr_stop(gr_argmax_fs_sptr self) -> bool"},
	 { (char *)"gr_argmax_fs_sptr_nitems_read", (PyCFunction) _wrap_gr_argmax_fs_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_fs_sptr_nitems_read(gr_argmax_fs_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_argmax_fs_sptr_nitems_written", (PyCFunction) _wrap_gr_argmax_fs_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_fs_sptr_nitems_written(gr_argmax_fs_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_argmax_fs_sptr_detail", _wrap_gr_argmax_fs_sptr_detail, METH_VARARGS, (char *)"gr_argmax_fs_sptr_detail(gr_argmax_fs_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_argmax_fs_sptr_set_detail", (PyCFunction) _wrap_gr_argmax_fs_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_fs_sptr_set_detail(gr_argmax_fs_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_argmax_fs_sptr_name", _wrap_gr_argmax_fs_sptr_name, METH_VARARGS, (char *)"gr_argmax_fs_sptr_name(gr_argmax_fs_sptr self) -> string"},
	 { (char *)"gr_argmax_fs_sptr_input_signature", _wrap_gr_argmax_fs_sptr_input_signature, METH_VARARGS, (char *)"gr_argmax_fs_sptr_input_signature(gr_argmax_fs_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_argmax_fs_sptr_output_signature", _wrap_gr_argmax_fs_sptr_output_signature, METH_VARARGS, (char *)"gr_argmax_fs_sptr_output_signature(gr_argmax_fs_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_argmax_fs_sptr_unique_id", _wrap_gr_argmax_fs_sptr_unique_id, METH_VARARGS, (char *)"gr_argmax_fs_sptr_unique_id(gr_argmax_fs_sptr self) -> long"},
	 { (char *)"gr_argmax_fs_sptr_to_basic_block", _wrap_gr_argmax_fs_sptr_to_basic_block, METH_VARARGS, (char *)"gr_argmax_fs_sptr_to_basic_block(gr_argmax_fs_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_argmax_fs_sptr_check_topology", (PyCFunction) _wrap_gr_argmax_fs_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_fs_sptr_check_topology(gr_argmax_fs_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_argmax_fs_sptr_swigregister", gr_argmax_fs_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"argmax_fs", (PyCFunction) _wrap_argmax_fs, METH_VARARGS | METH_KEYWORDS, (char *)"argmax_fs(size_t vlen) -> gr_argmax_fs_sptr"},
	 { (char *)"new_gr_argmax_is_sptr", _wrap_new_gr_argmax_is_sptr, METH_VARARGS, (char *)"\n"
		"gr_argmax_is_sptr()\n"
		"new_gr_argmax_is_sptr( p) -> gr_argmax_is_sptr\n"
		""},
	 { (char *)"gr_argmax_is_sptr___deref__", _wrap_gr_argmax_is_sptr___deref__, METH_VARARGS, (char *)"gr_argmax_is_sptr___deref__(gr_argmax_is_sptr self)"},
	 { (char *)"delete_gr_argmax_is_sptr", _wrap_delete_gr_argmax_is_sptr, METH_VARARGS, (char *)"delete_gr_argmax_is_sptr(gr_argmax_is_sptr self)"},
	 { (char *)"gr_argmax_is_sptr_history", _wrap_gr_argmax_is_sptr_history, METH_VARARGS, (char *)"gr_argmax_is_sptr_history(gr_argmax_is_sptr self) -> unsigned int"},
	 { (char *)"gr_argmax_is_sptr_output_multiple", _wrap_gr_argmax_is_sptr_output_multiple, METH_VARARGS, (char *)"gr_argmax_is_sptr_output_multiple(gr_argmax_is_sptr self) -> int"},
	 { (char *)"gr_argmax_is_sptr_relative_rate", _wrap_gr_argmax_is_sptr_relative_rate, METH_VARARGS, (char *)"gr_argmax_is_sptr_relative_rate(gr_argmax_is_sptr self) -> double"},
	 { (char *)"gr_argmax_is_sptr_start", _wrap_gr_argmax_is_sptr_start, METH_VARARGS, (char *)"gr_argmax_is_sptr_start(gr_argmax_is_sptr self) -> bool"},
	 { (char *)"gr_argmax_is_sptr_stop", _wrap_gr_argmax_is_sptr_stop, METH_VARARGS, (char *)"gr_argmax_is_sptr_stop(gr_argmax_is_sptr self) -> bool"},
	 { (char *)"gr_argmax_is_sptr_nitems_read", (PyCFunction) _wrap_gr_argmax_is_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_is_sptr_nitems_read(gr_argmax_is_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_argmax_is_sptr_nitems_written", (PyCFunction) _wrap_gr_argmax_is_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_is_sptr_nitems_written(gr_argmax_is_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_argmax_is_sptr_detail", _wrap_gr_argmax_is_sptr_detail, METH_VARARGS, (char *)"gr_argmax_is_sptr_detail(gr_argmax_is_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_argmax_is_sptr_set_detail", (PyCFunction) _wrap_gr_argmax_is_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_is_sptr_set_detail(gr_argmax_is_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_argmax_is_sptr_name", _wrap_gr_argmax_is_sptr_name, METH_VARARGS, (char *)"gr_argmax_is_sptr_name(gr_argmax_is_sptr self) -> string"},
	 { (char *)"gr_argmax_is_sptr_input_signature", _wrap_gr_argmax_is_sptr_input_signature, METH_VARARGS, (char *)"gr_argmax_is_sptr_input_signature(gr_argmax_is_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_argmax_is_sptr_output_signature", _wrap_gr_argmax_is_sptr_output_signature, METH_VARARGS, (char *)"gr_argmax_is_sptr_output_signature(gr_argmax_is_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_argmax_is_sptr_unique_id", _wrap_gr_argmax_is_sptr_unique_id, METH_VARARGS, (char *)"gr_argmax_is_sptr_unique_id(gr_argmax_is_sptr self) -> long"},
	 { (char *)"gr_argmax_is_sptr_to_basic_block", _wrap_gr_argmax_is_sptr_to_basic_block, METH_VARARGS, (char *)"gr_argmax_is_sptr_to_basic_block(gr_argmax_is_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_argmax_is_sptr_check_topology", (PyCFunction) _wrap_gr_argmax_is_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_is_sptr_check_topology(gr_argmax_is_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_argmax_is_sptr_swigregister", gr_argmax_is_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"argmax_is", (PyCFunction) _wrap_argmax_is, METH_VARARGS | METH_KEYWORDS, (char *)"argmax_is(size_t vlen) -> gr_argmax_is_sptr"},
	 { (char *)"new_gr_argmax_ss_sptr", _wrap_new_gr_argmax_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_argmax_ss_sptr()\n"
		"new_gr_argmax_ss_sptr( p) -> gr_argmax_ss_sptr\n"
		""},
	 { (char *)"gr_argmax_ss_sptr___deref__", _wrap_gr_argmax_ss_sptr___deref__, METH_VARARGS, (char *)"gr_argmax_ss_sptr___deref__(gr_argmax_ss_sptr self)"},
	 { (char *)"delete_gr_argmax_ss_sptr", _wrap_delete_gr_argmax_ss_sptr, METH_VARARGS, (char *)"delete_gr_argmax_ss_sptr(gr_argmax_ss_sptr self)"},
	 { (char *)"gr_argmax_ss_sptr_history", _wrap_gr_argmax_ss_sptr_history, METH_VARARGS, (char *)"gr_argmax_ss_sptr_history(gr_argmax_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_argmax_ss_sptr_output_multiple", _wrap_gr_argmax_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_argmax_ss_sptr_output_multiple(gr_argmax_ss_sptr self) -> int"},
	 { (char *)"gr_argmax_ss_sptr_relative_rate", _wrap_gr_argmax_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_argmax_ss_sptr_relative_rate(gr_argmax_ss_sptr self) -> double"},
	 { (char *)"gr_argmax_ss_sptr_start", _wrap_gr_argmax_ss_sptr_start, METH_VARARGS, (char *)"gr_argmax_ss_sptr_start(gr_argmax_ss_sptr self) -> bool"},
	 { (char *)"gr_argmax_ss_sptr_stop", _wrap_gr_argmax_ss_sptr_stop, METH_VARARGS, (char *)"gr_argmax_ss_sptr_stop(gr_argmax_ss_sptr self) -> bool"},
	 { (char *)"gr_argmax_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_argmax_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_ss_sptr_nitems_read(gr_argmax_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_argmax_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_argmax_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_ss_sptr_nitems_written(gr_argmax_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_argmax_ss_sptr_detail", _wrap_gr_argmax_ss_sptr_detail, METH_VARARGS, (char *)"gr_argmax_ss_sptr_detail(gr_argmax_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_argmax_ss_sptr_set_detail", (PyCFunction) _wrap_gr_argmax_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_ss_sptr_set_detail(gr_argmax_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_argmax_ss_sptr_name", _wrap_gr_argmax_ss_sptr_name, METH_VARARGS, (char *)"gr_argmax_ss_sptr_name(gr_argmax_ss_sptr self) -> string"},
	 { (char *)"gr_argmax_ss_sptr_input_signature", _wrap_gr_argmax_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_argmax_ss_sptr_input_signature(gr_argmax_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_argmax_ss_sptr_output_signature", _wrap_gr_argmax_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_argmax_ss_sptr_output_signature(gr_argmax_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_argmax_ss_sptr_unique_id", _wrap_gr_argmax_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_argmax_ss_sptr_unique_id(gr_argmax_ss_sptr self) -> long"},
	 { (char *)"gr_argmax_ss_sptr_to_basic_block", _wrap_gr_argmax_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_argmax_ss_sptr_to_basic_block(gr_argmax_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_argmax_ss_sptr_check_topology", (PyCFunction) _wrap_gr_argmax_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_argmax_ss_sptr_check_topology(gr_argmax_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_argmax_ss_sptr_swigregister", gr_argmax_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"argmax_ss", (PyCFunction) _wrap_argmax_ss, METH_VARARGS | METH_KEYWORDS, (char *)"argmax_ss(size_t vlen) -> gr_argmax_ss_sptr"},
	 { (char *)"new_gr_max_ff_sptr", _wrap_new_gr_max_ff_sptr, METH_VARARGS, (char *)"\n"
		"gr_max_ff_sptr()\n"
		"new_gr_max_ff_sptr( p) -> gr_max_ff_sptr\n"
		""},
	 { (char *)"gr_max_ff_sptr___deref__", _wrap_gr_max_ff_sptr___deref__, METH_VARARGS, (char *)"gr_max_ff_sptr___deref__(gr_max_ff_sptr self)"},
	 { (char *)"delete_gr_max_ff_sptr", _wrap_delete_gr_max_ff_sptr, METH_VARARGS, (char *)"delete_gr_max_ff_sptr(gr_max_ff_sptr self)"},
	 { (char *)"gr_max_ff_sptr_history", _wrap_gr_max_ff_sptr_history, METH_VARARGS, (char *)"gr_max_ff_sptr_history(gr_max_ff_sptr self) -> unsigned int"},
	 { (char *)"gr_max_ff_sptr_output_multiple", _wrap_gr_max_ff_sptr_output_multiple, METH_VARARGS, (char *)"gr_max_ff_sptr_output_multiple(gr_max_ff_sptr self) -> int"},
	 { (char *)"gr_max_ff_sptr_relative_rate", _wrap_gr_max_ff_sptr_relative_rate, METH_VARARGS, (char *)"gr_max_ff_sptr_relative_rate(gr_max_ff_sptr self) -> double"},
	 { (char *)"gr_max_ff_sptr_start", _wrap_gr_max_ff_sptr_start, METH_VARARGS, (char *)"gr_max_ff_sptr_start(gr_max_ff_sptr self) -> bool"},
	 { (char *)"gr_max_ff_sptr_stop", _wrap_gr_max_ff_sptr_stop, METH_VARARGS, (char *)"gr_max_ff_sptr_stop(gr_max_ff_sptr self) -> bool"},
	 { (char *)"gr_max_ff_sptr_nitems_read", (PyCFunction) _wrap_gr_max_ff_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ff_sptr_nitems_read(gr_max_ff_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_max_ff_sptr_nitems_written", (PyCFunction) _wrap_gr_max_ff_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ff_sptr_nitems_written(gr_max_ff_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_max_ff_sptr_detail", _wrap_gr_max_ff_sptr_detail, METH_VARARGS, (char *)"gr_max_ff_sptr_detail(gr_max_ff_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_max_ff_sptr_set_detail", (PyCFunction) _wrap_gr_max_ff_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ff_sptr_set_detail(gr_max_ff_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_max_ff_sptr_name", _wrap_gr_max_ff_sptr_name, METH_VARARGS, (char *)"gr_max_ff_sptr_name(gr_max_ff_sptr self) -> string"},
	 { (char *)"gr_max_ff_sptr_input_signature", _wrap_gr_max_ff_sptr_input_signature, METH_VARARGS, (char *)"gr_max_ff_sptr_input_signature(gr_max_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_max_ff_sptr_output_signature", _wrap_gr_max_ff_sptr_output_signature, METH_VARARGS, (char *)"gr_max_ff_sptr_output_signature(gr_max_ff_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_max_ff_sptr_unique_id", _wrap_gr_max_ff_sptr_unique_id, METH_VARARGS, (char *)"gr_max_ff_sptr_unique_id(gr_max_ff_sptr self) -> long"},
	 { (char *)"gr_max_ff_sptr_to_basic_block", _wrap_gr_max_ff_sptr_to_basic_block, METH_VARARGS, (char *)"gr_max_ff_sptr_to_basic_block(gr_max_ff_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_max_ff_sptr_check_topology", (PyCFunction) _wrap_gr_max_ff_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ff_sptr_check_topology(gr_max_ff_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_max_ff_sptr_swigregister", gr_max_ff_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"max_ff", (PyCFunction) _wrap_max_ff, METH_VARARGS | METH_KEYWORDS, (char *)"max_ff(size_t vlen) -> gr_max_ff_sptr"},
	 { (char *)"new_gr_max_ii_sptr", _wrap_new_gr_max_ii_sptr, METH_VARARGS, (char *)"\n"
		"gr_max_ii_sptr()\n"
		"new_gr_max_ii_sptr( p) -> gr_max_ii_sptr\n"
		""},
	 { (char *)"gr_max_ii_sptr___deref__", _wrap_gr_max_ii_sptr___deref__, METH_VARARGS, (char *)"gr_max_ii_sptr___deref__(gr_max_ii_sptr self)"},
	 { (char *)"delete_gr_max_ii_sptr", _wrap_delete_gr_max_ii_sptr, METH_VARARGS, (char *)"delete_gr_max_ii_sptr(gr_max_ii_sptr self)"},
	 { (char *)"gr_max_ii_sptr_history", _wrap_gr_max_ii_sptr_history, METH_VARARGS, (char *)"gr_max_ii_sptr_history(gr_max_ii_sptr self) -> unsigned int"},
	 { (char *)"gr_max_ii_sptr_output_multiple", _wrap_gr_max_ii_sptr_output_multiple, METH_VARARGS, (char *)"gr_max_ii_sptr_output_multiple(gr_max_ii_sptr self) -> int"},
	 { (char *)"gr_max_ii_sptr_relative_rate", _wrap_gr_max_ii_sptr_relative_rate, METH_VARARGS, (char *)"gr_max_ii_sptr_relative_rate(gr_max_ii_sptr self) -> double"},
	 { (char *)"gr_max_ii_sptr_start", _wrap_gr_max_ii_sptr_start, METH_VARARGS, (char *)"gr_max_ii_sptr_start(gr_max_ii_sptr self) -> bool"},
	 { (char *)"gr_max_ii_sptr_stop", _wrap_gr_max_ii_sptr_stop, METH_VARARGS, (char *)"gr_max_ii_sptr_stop(gr_max_ii_sptr self) -> bool"},
	 { (char *)"gr_max_ii_sptr_nitems_read", (PyCFunction) _wrap_gr_max_ii_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ii_sptr_nitems_read(gr_max_ii_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_max_ii_sptr_nitems_written", (PyCFunction) _wrap_gr_max_ii_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ii_sptr_nitems_written(gr_max_ii_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_max_ii_sptr_detail", _wrap_gr_max_ii_sptr_detail, METH_VARARGS, (char *)"gr_max_ii_sptr_detail(gr_max_ii_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_max_ii_sptr_set_detail", (PyCFunction) _wrap_gr_max_ii_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ii_sptr_set_detail(gr_max_ii_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_max_ii_sptr_name", _wrap_gr_max_ii_sptr_name, METH_VARARGS, (char *)"gr_max_ii_sptr_name(gr_max_ii_sptr self) -> string"},
	 { (char *)"gr_max_ii_sptr_input_signature", _wrap_gr_max_ii_sptr_input_signature, METH_VARARGS, (char *)"gr_max_ii_sptr_input_signature(gr_max_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_max_ii_sptr_output_signature", _wrap_gr_max_ii_sptr_output_signature, METH_VARARGS, (char *)"gr_max_ii_sptr_output_signature(gr_max_ii_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_max_ii_sptr_unique_id", _wrap_gr_max_ii_sptr_unique_id, METH_VARARGS, (char *)"gr_max_ii_sptr_unique_id(gr_max_ii_sptr self) -> long"},
	 { (char *)"gr_max_ii_sptr_to_basic_block", _wrap_gr_max_ii_sptr_to_basic_block, METH_VARARGS, (char *)"gr_max_ii_sptr_to_basic_block(gr_max_ii_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_max_ii_sptr_check_topology", (PyCFunction) _wrap_gr_max_ii_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ii_sptr_check_topology(gr_max_ii_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_max_ii_sptr_swigregister", gr_max_ii_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"max_ii", (PyCFunction) _wrap_max_ii, METH_VARARGS | METH_KEYWORDS, (char *)"max_ii(size_t vlen) -> gr_max_ii_sptr"},
	 { (char *)"new_gr_max_ss_sptr", _wrap_new_gr_max_ss_sptr, METH_VARARGS, (char *)"\n"
		"gr_max_ss_sptr()\n"
		"new_gr_max_ss_sptr( p) -> gr_max_ss_sptr\n"
		""},
	 { (char *)"gr_max_ss_sptr___deref__", _wrap_gr_max_ss_sptr___deref__, METH_VARARGS, (char *)"gr_max_ss_sptr___deref__(gr_max_ss_sptr self)"},
	 { (char *)"delete_gr_max_ss_sptr", _wrap_delete_gr_max_ss_sptr, METH_VARARGS, (char *)"delete_gr_max_ss_sptr(gr_max_ss_sptr self)"},
	 { (char *)"gr_max_ss_sptr_history", _wrap_gr_max_ss_sptr_history, METH_VARARGS, (char *)"gr_max_ss_sptr_history(gr_max_ss_sptr self) -> unsigned int"},
	 { (char *)"gr_max_ss_sptr_output_multiple", _wrap_gr_max_ss_sptr_output_multiple, METH_VARARGS, (char *)"gr_max_ss_sptr_output_multiple(gr_max_ss_sptr self) -> int"},
	 { (char *)"gr_max_ss_sptr_relative_rate", _wrap_gr_max_ss_sptr_relative_rate, METH_VARARGS, (char *)"gr_max_ss_sptr_relative_rate(gr_max_ss_sptr self) -> double"},
	 { (char *)"gr_max_ss_sptr_start", _wrap_gr_max_ss_sptr_start, METH_VARARGS, (char *)"gr_max_ss_sptr_start(gr_max_ss_sptr self) -> bool"},
	 { (char *)"gr_max_ss_sptr_stop", _wrap_gr_max_ss_sptr_stop, METH_VARARGS, (char *)"gr_max_ss_sptr_stop(gr_max_ss_sptr self) -> bool"},
	 { (char *)"gr_max_ss_sptr_nitems_read", (PyCFunction) _wrap_gr_max_ss_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ss_sptr_nitems_read(gr_max_ss_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_max_ss_sptr_nitems_written", (PyCFunction) _wrap_gr_max_ss_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ss_sptr_nitems_written(gr_max_ss_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_max_ss_sptr_detail", _wrap_gr_max_ss_sptr_detail, METH_VARARGS, (char *)"gr_max_ss_sptr_detail(gr_max_ss_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_max_ss_sptr_set_detail", (PyCFunction) _wrap_gr_max_ss_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ss_sptr_set_detail(gr_max_ss_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_max_ss_sptr_name", _wrap_gr_max_ss_sptr_name, METH_VARARGS, (char *)"gr_max_ss_sptr_name(gr_max_ss_sptr self) -> string"},
	 { (char *)"gr_max_ss_sptr_input_signature", _wrap_gr_max_ss_sptr_input_signature, METH_VARARGS, (char *)"gr_max_ss_sptr_input_signature(gr_max_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_max_ss_sptr_output_signature", _wrap_gr_max_ss_sptr_output_signature, METH_VARARGS, (char *)"gr_max_ss_sptr_output_signature(gr_max_ss_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_max_ss_sptr_unique_id", _wrap_gr_max_ss_sptr_unique_id, METH_VARARGS, (char *)"gr_max_ss_sptr_unique_id(gr_max_ss_sptr self) -> long"},
	 { (char *)"gr_max_ss_sptr_to_basic_block", _wrap_gr_max_ss_sptr_to_basic_block, METH_VARARGS, (char *)"gr_max_ss_sptr_to_basic_block(gr_max_ss_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_max_ss_sptr_check_topology", (PyCFunction) _wrap_gr_max_ss_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_max_ss_sptr_check_topology(gr_max_ss_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_max_ss_sptr_swigregister", gr_max_ss_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"max_ss", (PyCFunction) _wrap_max_ss, METH_VARARGS | METH_KEYWORDS, (char *)"max_ss(size_t vlen) -> gr_max_ss_sptr"},
	 { (char *)"new_gr_peak_detector_fb_sptr", _wrap_new_gr_peak_detector_fb_sptr, METH_VARARGS, (char *)"\n"
		"gr_peak_detector_fb_sptr()\n"
		"new_gr_peak_detector_fb_sptr( p) -> gr_peak_detector_fb_sptr\n"
		""},
	 { (char *)"gr_peak_detector_fb_sptr___deref__", _wrap_gr_peak_detector_fb_sptr___deref__, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr___deref__(gr_peak_detector_fb_sptr self)"},
	 { (char *)"delete_gr_peak_detector_fb_sptr", _wrap_delete_gr_peak_detector_fb_sptr, METH_VARARGS, (char *)"delete_gr_peak_detector_fb_sptr(gr_peak_detector_fb_sptr self)"},
	 { (char *)"gr_peak_detector_fb_sptr_set_threshold_factor_rise", (PyCFunction) _wrap_gr_peak_detector_fb_sptr_set_threshold_factor_rise, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_fb_sptr_set_threshold_factor_rise(gr_peak_detector_fb_sptr self, float thr)"},
	 { (char *)"gr_peak_detector_fb_sptr_set_threshold_factor_fall", (PyCFunction) _wrap_gr_peak_detector_fb_sptr_set_threshold_factor_fall, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_fb_sptr_set_threshold_factor_fall(gr_peak_detector_fb_sptr self, float thr)"},
	 { (char *)"gr_peak_detector_fb_sptr_set_look_ahead", (PyCFunction) _wrap_gr_peak_detector_fb_sptr_set_look_ahead, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_fb_sptr_set_look_ahead(gr_peak_detector_fb_sptr self, int look)"},
	 { (char *)"gr_peak_detector_fb_sptr_set_alpha", (PyCFunction) _wrap_gr_peak_detector_fb_sptr_set_alpha, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_fb_sptr_set_alpha(gr_peak_detector_fb_sptr self, int alpha)"},
	 { (char *)"gr_peak_detector_fb_sptr_threshold_factor_rise", _wrap_gr_peak_detector_fb_sptr_threshold_factor_rise, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_threshold_factor_rise(gr_peak_detector_fb_sptr self) -> float"},
	 { (char *)"gr_peak_detector_fb_sptr_threshold_factor_fall", _wrap_gr_peak_detector_fb_sptr_threshold_factor_fall, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_threshold_factor_fall(gr_peak_detector_fb_sptr self) -> float"},
	 { (char *)"gr_peak_detector_fb_sptr_look_ahead", _wrap_gr_peak_detector_fb_sptr_look_ahead, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_look_ahead(gr_peak_detector_fb_sptr self) -> int"},
	 { (char *)"gr_peak_detector_fb_sptr_alpha", _wrap_gr_peak_detector_fb_sptr_alpha, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_alpha(gr_peak_detector_fb_sptr self) -> float"},
	 { (char *)"gr_peak_detector_fb_sptr_history", _wrap_gr_peak_detector_fb_sptr_history, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_history(gr_peak_detector_fb_sptr self) -> unsigned int"},
	 { (char *)"gr_peak_detector_fb_sptr_output_multiple", _wrap_gr_peak_detector_fb_sptr_output_multiple, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_output_multiple(gr_peak_detector_fb_sptr self) -> int"},
	 { (char *)"gr_peak_detector_fb_sptr_relative_rate", _wrap_gr_peak_detector_fb_sptr_relative_rate, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_relative_rate(gr_peak_detector_fb_sptr self) -> double"},
	 { (char *)"gr_peak_detector_fb_sptr_start", _wrap_gr_peak_detector_fb_sptr_start, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_start(gr_peak_detector_fb_sptr self) -> bool"},
	 { (char *)"gr_peak_detector_fb_sptr_stop", _wrap_gr_peak_detector_fb_sptr_stop, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_stop(gr_peak_detector_fb_sptr self) -> bool"},
	 { (char *)"gr_peak_detector_fb_sptr_nitems_read", (PyCFunction) _wrap_gr_peak_detector_fb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_fb_sptr_nitems_read(gr_peak_detector_fb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_peak_detector_fb_sptr_nitems_written", (PyCFunction) _wrap_gr_peak_detector_fb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_fb_sptr_nitems_written(gr_peak_detector_fb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_peak_detector_fb_sptr_detail", _wrap_gr_peak_detector_fb_sptr_detail, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_detail(gr_peak_detector_fb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_peak_detector_fb_sptr_set_detail", (PyCFunction) _wrap_gr_peak_detector_fb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_fb_sptr_set_detail(gr_peak_detector_fb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_peak_detector_fb_sptr_name", _wrap_gr_peak_detector_fb_sptr_name, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_name(gr_peak_detector_fb_sptr self) -> string"},
	 { (char *)"gr_peak_detector_fb_sptr_input_signature", _wrap_gr_peak_detector_fb_sptr_input_signature, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_input_signature(gr_peak_detector_fb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_peak_detector_fb_sptr_output_signature", _wrap_gr_peak_detector_fb_sptr_output_signature, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_output_signature(gr_peak_detector_fb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_peak_detector_fb_sptr_unique_id", _wrap_gr_peak_detector_fb_sptr_unique_id, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_unique_id(gr_peak_detector_fb_sptr self) -> long"},
	 { (char *)"gr_peak_detector_fb_sptr_to_basic_block", _wrap_gr_peak_detector_fb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_peak_detector_fb_sptr_to_basic_block(gr_peak_detector_fb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_peak_detector_fb_sptr_check_topology", (PyCFunction) _wrap_gr_peak_detector_fb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_fb_sptr_check_topology(gr_peak_detector_fb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_peak_detector_fb_sptr_swigregister", gr_peak_detector_fb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"peak_detector_fb", (PyCFunction) _wrap_peak_detector_fb, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"peak_detector_fb(float threshold_factor_rise = 0.25, float threshold_factor_fall = 0.40, \n"
		"    int look_ahead = 10, float alpha = 0.001) -> gr_peak_detector_fb_sptr\n"
		""},
	 { (char *)"new_gr_peak_detector_ib_sptr", _wrap_new_gr_peak_detector_ib_sptr, METH_VARARGS, (char *)"\n"
		"gr_peak_detector_ib_sptr()\n"
		"new_gr_peak_detector_ib_sptr( p) -> gr_peak_detector_ib_sptr\n"
		""},
	 { (char *)"gr_peak_detector_ib_sptr___deref__", _wrap_gr_peak_detector_ib_sptr___deref__, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr___deref__(gr_peak_detector_ib_sptr self)"},
	 { (char *)"delete_gr_peak_detector_ib_sptr", _wrap_delete_gr_peak_detector_ib_sptr, METH_VARARGS, (char *)"delete_gr_peak_detector_ib_sptr(gr_peak_detector_ib_sptr self)"},
	 { (char *)"gr_peak_detector_ib_sptr_set_threshold_factor_rise", (PyCFunction) _wrap_gr_peak_detector_ib_sptr_set_threshold_factor_rise, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_ib_sptr_set_threshold_factor_rise(gr_peak_detector_ib_sptr self, float thr)"},
	 { (char *)"gr_peak_detector_ib_sptr_set_threshold_factor_fall", (PyCFunction) _wrap_gr_peak_detector_ib_sptr_set_threshold_factor_fall, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_ib_sptr_set_threshold_factor_fall(gr_peak_detector_ib_sptr self, float thr)"},
	 { (char *)"gr_peak_detector_ib_sptr_set_look_ahead", (PyCFunction) _wrap_gr_peak_detector_ib_sptr_set_look_ahead, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_ib_sptr_set_look_ahead(gr_peak_detector_ib_sptr self, int look)"},
	 { (char *)"gr_peak_detector_ib_sptr_set_alpha", (PyCFunction) _wrap_gr_peak_detector_ib_sptr_set_alpha, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_ib_sptr_set_alpha(gr_peak_detector_ib_sptr self, int alpha)"},
	 { (char *)"gr_peak_detector_ib_sptr_threshold_factor_rise", _wrap_gr_peak_detector_ib_sptr_threshold_factor_rise, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_threshold_factor_rise(gr_peak_detector_ib_sptr self) -> float"},
	 { (char *)"gr_peak_detector_ib_sptr_threshold_factor_fall", _wrap_gr_peak_detector_ib_sptr_threshold_factor_fall, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_threshold_factor_fall(gr_peak_detector_ib_sptr self) -> float"},
	 { (char *)"gr_peak_detector_ib_sptr_look_ahead", _wrap_gr_peak_detector_ib_sptr_look_ahead, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_look_ahead(gr_peak_detector_ib_sptr self) -> int"},
	 { (char *)"gr_peak_detector_ib_sptr_alpha", _wrap_gr_peak_detector_ib_sptr_alpha, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_alpha(gr_peak_detector_ib_sptr self) -> float"},
	 { (char *)"gr_peak_detector_ib_sptr_history", _wrap_gr_peak_detector_ib_sptr_history, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_history(gr_peak_detector_ib_sptr self) -> unsigned int"},
	 { (char *)"gr_peak_detector_ib_sptr_output_multiple", _wrap_gr_peak_detector_ib_sptr_output_multiple, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_output_multiple(gr_peak_detector_ib_sptr self) -> int"},
	 { (char *)"gr_peak_detector_ib_sptr_relative_rate", _wrap_gr_peak_detector_ib_sptr_relative_rate, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_relative_rate(gr_peak_detector_ib_sptr self) -> double"},
	 { (char *)"gr_peak_detector_ib_sptr_start", _wrap_gr_peak_detector_ib_sptr_start, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_start(gr_peak_detector_ib_sptr self) -> bool"},
	 { (char *)"gr_peak_detector_ib_sptr_stop", _wrap_gr_peak_detector_ib_sptr_stop, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_stop(gr_peak_detector_ib_sptr self) -> bool"},
	 { (char *)"gr_peak_detector_ib_sptr_nitems_read", (PyCFunction) _wrap_gr_peak_detector_ib_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_ib_sptr_nitems_read(gr_peak_detector_ib_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_peak_detector_ib_sptr_nitems_written", (PyCFunction) _wrap_gr_peak_detector_ib_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_ib_sptr_nitems_written(gr_peak_detector_ib_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_peak_detector_ib_sptr_detail", _wrap_gr_peak_detector_ib_sptr_detail, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_detail(gr_peak_detector_ib_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_peak_detector_ib_sptr_set_detail", (PyCFunction) _wrap_gr_peak_detector_ib_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_ib_sptr_set_detail(gr_peak_detector_ib_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_peak_detector_ib_sptr_name", _wrap_gr_peak_detector_ib_sptr_name, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_name(gr_peak_detector_ib_sptr self) -> string"},
	 { (char *)"gr_peak_detector_ib_sptr_input_signature", _wrap_gr_peak_detector_ib_sptr_input_signature, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_input_signature(gr_peak_detector_ib_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_peak_detector_ib_sptr_output_signature", _wrap_gr_peak_detector_ib_sptr_output_signature, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_output_signature(gr_peak_detector_ib_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_peak_detector_ib_sptr_unique_id", _wrap_gr_peak_detector_ib_sptr_unique_id, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_unique_id(gr_peak_detector_ib_sptr self) -> long"},
	 { (char *)"gr_peak_detector_ib_sptr_to_basic_block", _wrap_gr_peak_detector_ib_sptr_to_basic_block, METH_VARARGS, (char *)"gr_peak_detector_ib_sptr_to_basic_block(gr_peak_detector_ib_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_peak_detector_ib_sptr_check_topology", (PyCFunction) _wrap_gr_peak_detector_ib_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_ib_sptr_check_topology(gr_peak_detector_ib_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_peak_detector_ib_sptr_swigregister", gr_peak_detector_ib_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"peak_detector_ib", (PyCFunction) _wrap_peak_detector_ib, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"peak_detector_ib(float threshold_factor_rise = 0.25, float threshold_factor_fall = 0.40, \n"
		"    int look_ahead = 10, float alpha = 0.001) -> gr_peak_detector_ib_sptr\n"
		""},
	 { (char *)"new_gr_peak_detector_sb_sptr", _wrap_new_gr_peak_detector_sb_sptr, METH_VARARGS, (char *)"\n"
		"gr_peak_detector_sb_sptr()\n"
		"new_gr_peak_detector_sb_sptr( p) -> gr_peak_detector_sb_sptr\n"
		""},
	 { (char *)"gr_peak_detector_sb_sptr___deref__", _wrap_gr_peak_detector_sb_sptr___deref__, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr___deref__(gr_peak_detector_sb_sptr self)"},
	 { (char *)"delete_gr_peak_detector_sb_sptr", _wrap_delete_gr_peak_detector_sb_sptr, METH_VARARGS, (char *)"delete_gr_peak_detector_sb_sptr(gr_peak_detector_sb_sptr self)"},
	 { (char *)"gr_peak_detector_sb_sptr_set_threshold_factor_rise", (PyCFunction) _wrap_gr_peak_detector_sb_sptr_set_threshold_factor_rise, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_sb_sptr_set_threshold_factor_rise(gr_peak_detector_sb_sptr self, float thr)"},
	 { (char *)"gr_peak_detector_sb_sptr_set_threshold_factor_fall", (PyCFunction) _wrap_gr_peak_detector_sb_sptr_set_threshold_factor_fall, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_sb_sptr_set_threshold_factor_fall(gr_peak_detector_sb_sptr self, float thr)"},
	 { (char *)"gr_peak_detector_sb_sptr_set_look_ahead", (PyCFunction) _wrap_gr_peak_detector_sb_sptr_set_look_ahead, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_sb_sptr_set_look_ahead(gr_peak_detector_sb_sptr self, int look)"},
	 { (char *)"gr_peak_detector_sb_sptr_set_alpha", (PyCFunction) _wrap_gr_peak_detector_sb_sptr_set_alpha, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_sb_sptr_set_alpha(gr_peak_detector_sb_sptr self, int alpha)"},
	 { (char *)"gr_peak_detector_sb_sptr_threshold_factor_rise", _wrap_gr_peak_detector_sb_sptr_threshold_factor_rise, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_threshold_factor_rise(gr_peak_detector_sb_sptr self) -> float"},
	 { (char *)"gr_peak_detector_sb_sptr_threshold_factor_fall", _wrap_gr_peak_detector_sb_sptr_threshold_factor_fall, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_threshold_factor_fall(gr_peak_detector_sb_sptr self) -> float"},
	 { (char *)"gr_peak_detector_sb_sptr_look_ahead", _wrap_gr_peak_detector_sb_sptr_look_ahead, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_look_ahead(gr_peak_detector_sb_sptr self) -> int"},
	 { (char *)"gr_peak_detector_sb_sptr_alpha", _wrap_gr_peak_detector_sb_sptr_alpha, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_alpha(gr_peak_detector_sb_sptr self) -> float"},
	 { (char *)"gr_peak_detector_sb_sptr_history", _wrap_gr_peak_detector_sb_sptr_history, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_history(gr_peak_detector_sb_sptr self) -> unsigned int"},
	 { (char *)"gr_peak_detector_sb_sptr_output_multiple", _wrap_gr_peak_detector_sb_sptr_output_multiple, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_output_multiple(gr_peak_detector_sb_sptr self) -> int"},
	 { (char *)"gr_peak_detector_sb_sptr_relative_rate", _wrap_gr_peak_detector_sb_sptr_relative_rate, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_relative_rate(gr_peak_detector_sb_sptr self) -> double"},
	 { (char *)"gr_peak_detector_sb_sptr_start", _wrap_gr_peak_detector_sb_sptr_start, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_start(gr_peak_detector_sb_sptr self) -> bool"},
	 { (char *)"gr_peak_detector_sb_sptr_stop", _wrap_gr_peak_detector_sb_sptr_stop, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_stop(gr_peak_detector_sb_sptr self) -> bool"},
	 { (char *)"gr_peak_detector_sb_sptr_nitems_read", (PyCFunction) _wrap_gr_peak_detector_sb_sptr_nitems_read, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_sb_sptr_nitems_read(gr_peak_detector_sb_sptr self, unsigned int which_input) -> uint64_t"},
	 { (char *)"gr_peak_detector_sb_sptr_nitems_written", (PyCFunction) _wrap_gr_peak_detector_sb_sptr_nitems_written, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_sb_sptr_nitems_written(gr_peak_detector_sb_sptr self, unsigned int which_output) -> uint64_t"},
	 { (char *)"gr_peak_detector_sb_sptr_detail", _wrap_gr_peak_detector_sb_sptr_detail, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_detail(gr_peak_detector_sb_sptr self) -> gr_block_detail_sptr"},
	 { (char *)"gr_peak_detector_sb_sptr_set_detail", (PyCFunction) _wrap_gr_peak_detector_sb_sptr_set_detail, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_sb_sptr_set_detail(gr_peak_detector_sb_sptr self, gr_block_detail_sptr detail)"},
	 { (char *)"gr_peak_detector_sb_sptr_name", _wrap_gr_peak_detector_sb_sptr_name, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_name(gr_peak_detector_sb_sptr self) -> string"},
	 { (char *)"gr_peak_detector_sb_sptr_input_signature", _wrap_gr_peak_detector_sb_sptr_input_signature, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_input_signature(gr_peak_detector_sb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_peak_detector_sb_sptr_output_signature", _wrap_gr_peak_detector_sb_sptr_output_signature, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_output_signature(gr_peak_detector_sb_sptr self) -> gr_io_signature_sptr"},
	 { (char *)"gr_peak_detector_sb_sptr_unique_id", _wrap_gr_peak_detector_sb_sptr_unique_id, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_unique_id(gr_peak_detector_sb_sptr self) -> long"},
	 { (char *)"gr_peak_detector_sb_sptr_to_basic_block", _wrap_gr_peak_detector_sb_sptr_to_basic_block, METH_VARARGS, (char *)"gr_peak_detector_sb_sptr_to_basic_block(gr_peak_detector_sb_sptr self) -> gr_basic_block_sptr"},
	 { (char *)"gr_peak_detector_sb_sptr_check_topology", (PyCFunction) _wrap_gr_peak_detector_sb_sptr_check_topology, METH_VARARGS | METH_KEYWORDS, (char *)"gr_peak_detector_sb_sptr_check_topology(gr_peak_detector_sb_sptr self, int ninputs, int noutputs) -> bool"},
	 { (char *)"gr_peak_detector_sb_sptr_swigregister", gr_peak_detector_sb_sptr_swigregister, METH_VARARGS, NULL},
	 { (char *)"peak_detector_sb", (PyCFunction) _wrap_peak_detector_sb, METH_VARARGS | METH_KEYWORDS, (char *)"\n"
		"peak_detector_sb(float threshold_factor_rise = 0.25, float threshold_factor_fall = 0.40, \n"
		"    int look_ahead = 10, float alpha = 0.001) -> gr_peak_detector_sb_sptr\n"
		""},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_gr_argmax_isTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_argmax_is *) x));
}
static void *_p_gr_probe_signal_sTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_s *) x));
}
static void *_p_gr_multiply_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_multiply_ss *) x));
}
static void *_p_gr_integrate_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_decimator *) ((gr_integrate_ii *) x));
}
static void *_p_gr_mute_ffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_mute_ff *) x));
}
static void *_p_gr_xor_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_xor_ss *) x));
}
static void *_p_gr_moving_average_ccTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_moving_average_cc *) x));
}
static void *_p_gr_not_bbTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_not_bb *) x));
}
static void *_p_gr_argmax_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_argmax_ss *) x));
}
static void *_p_gr_max_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_max_ss *) x));
}
static void *_p_gr_chunks_to_symbols_icTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_interpolator *) ((gr_chunks_to_symbols_ic *) x));
}
static void *_p_gr_multiply_const_viiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_multiply_const_vii *) x));
}
static void *_p_gr_add_const_viiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_const_vii *) x));
}
static void *_p_gr_and_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_and_ss *) x));
}
static void *_p_gr_chunks_to_symbols_ifTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_interpolator *) ((gr_chunks_to_symbols_if *) x));
}
static void *_p_gr_vector_source_bTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_source_b *) x));
}
static void *_p_gr_chunks_to_symbols_scTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_interpolator *) ((gr_chunks_to_symbols_sc *) x));
}
static void *_p_gr_divide_ffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_divide_ff *) x));
}
static void *_p_gr_sample_and_hold_ffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sample_and_hold_ff *) x));
}
static void *_p_gr_vector_source_cTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_source_c *) x));
}
static void *_p_gr_sig_source_cTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sig_source_c *) x));
}
static void *_p_gr_not_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_not_ss *) x));
}
static void *_p_gr_chunks_to_symbols_sfTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_interpolator *) ((gr_chunks_to_symbols_sf *) x));
}
static void *_p_gr_vector_source_fTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_source_f *) x));
}
static void *_p_gr_sig_source_fTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sig_source_f *) x));
}
static void *_p_gr_add_const_ffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_const_ff *) x));
}
static void *_p_gr_peak_detector_ibTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_peak_detector_ib *) x));
}
static void *_p_gr_integrate_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_decimator *) ((gr_integrate_ss *) x));
}
static void *_p_gr_sig_source_iTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sig_source_i *) x));
}
static void *_p_gr_vector_source_iTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_source_i *) x));
}
static void *_p_gr_vector_sink_bTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_sink_b *) x));
}
static void *_p_gr_vector_sink_cTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_sink_c *) x));
}
static void *_p_gr_chunks_to_symbols_bcTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_interpolator *) ((gr_chunks_to_symbols_bc *) x));
}
static void *_p_gr_peak_detector_sbTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_peak_detector_sb *) x));
}
static void *_p_gr_multiply_const_vssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_multiply_const_vss *) x));
}
static void *_p_gr_add_const_vssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_const_vss *) x));
}
static void *_p_gr_sub_ccTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sub_cc *) x));
}
static void *_p_gr_vector_sink_fTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_sink_f *) x));
}
static void *_p_gr_add_ccTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_cc *) x));
}
static void *_p_gr_chunks_to_symbols_bfTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_interpolator *) ((gr_chunks_to_symbols_bf *) x));
}
static void *_p_gr_probe_signal_vbTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_vb *) x));
}
static void *_p_gr_mute_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_mute_ii *) x));
}
static void *_p_gr_probe_signal_vcTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_vc *) x));
}
static void *_p_gr_moving_average_ffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_moving_average_ff *) x));
}
static void *_p_gr_vector_sink_iTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_sink_i *) x));
}
static void *_p_gr_probe_signal_vfTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_vf *) x));
}
static void *_p_gr_sig_source_sTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sig_source_s *) x));
}
static void *_p_gr_vector_source_sTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_source_s *) x));
}
static void *_p_gr_sync_decimatorTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sync_decimator *) x));
}
static void *_p_gr_probe_signal_viTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_vi *) x));
}
static void *_p_gr_divide_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_divide_ii *) x));
}
static void *_p_gr_or_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_or_ii *) x));
}
static void *_p_gr_sample_and_hold_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sample_and_hold_ii *) x));
}
static void *_p_gr_vector_sink_sTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_vector_sink_s *) x));
}
static void *_p_gr_add_const_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_const_ii *) x));
}
static void *_p_gr_multiply_const_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_multiply_const_ii *) x));
}
static void *_p_gr_and_const_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_and_const_ii *) x));
}
static void *_p_gr_add_const_sfTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_const_sf *) x));
}
static void *_p_gr_or_bbTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_or_bb *) x));
}
static void *_p_gr_sample_and_hold_bbTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sample_and_hold_bb *) x));
}
static void *_p_gr_mute_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_mute_ss *) x));
}
static void *_p_gr_probe_signal_vsTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_vs *) x));
}
static void *_p_gr_sub_ffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sub_ff *) x));
}
static void *_p_gr_and_const_bbTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_and_const_bb *) x));
}
static void *_p_gr_integrate_ccTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_decimator *) ((gr_integrate_cc *) x));
}
static void *_p_gr_divide_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_divide_ss *) x));
}
static void *_p_gr_moving_average_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_moving_average_ii *) x));
}
static void *_p_gr_or_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_or_ss *) x));
}
static void *_p_gr_sample_and_hold_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sample_and_hold_ss *) x));
}
static void *_p_gr_multiply_const_vccTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_multiply_const_vcc *) x));
}
static void *_p_gr_add_const_vccTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_const_vcc *) x));
}
static void *_p_gr_add_const_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_const_ss *) x));
}
static void *_p_gr_multiply_const_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_multiply_const_ss *) x));
}
static void *_p_gr_and_const_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_and_const_ss *) x));
}
static void *_p_gr_max_ffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_max_ff *) x));
}
static void *_p_gr_moving_average_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_moving_average_ss *) x));
}
static void *_p_gr_sub_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sub_ii *) x));
}
static void *_p_gr_add_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_ii *) x));
}
static void *_p_gr_sync_interpolatorTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sync_interpolator *) x));
}
static void *_p_gr_integrate_ffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *) (gr_sync_decimator *) ((gr_integrate_ff *) x));
}
static void *_p_gr_mute_ccTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_mute_cc *) x));
}
static void *_p_gr_argmax_fsTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_argmax_fs *) x));
}
static void *_p_gr_probe_signal_bTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_b *) x));
}
static void *_p_gr_probe_signal_cTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_c *) x));
}
static void *_p_gr_multiply_const_vffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_multiply_const_vff *) x));
}
static void *_p_gr_add_const_vffTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_const_vff *) x));
}
static void *_p_gr_probe_signal_fTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_f *) x));
}
static void *_p_gr_multiply_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_multiply_ii *) x));
}
static void *_p_gr_xor_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_xor_ii *) x));
}
static void *_p_gr_divide_ccTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_divide_cc *) x));
}
static void *_p_gr_max_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_max_ii *) x));
}
static void *_p_gr_probe_signal_iTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_probe_signal_i *) x));
}
static void *_p_gr_and_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_and_ii *) x));
}
static void *_p_gr_add_const_ccTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_const_cc *) x));
}
static void *_p_gr_xor_bbTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_xor_bb *) x));
}
static void *_p_gr_sub_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_sub_ss *) x));
}
static void *_p_gr_add_ssTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_add_ss *) x));
}
static void *_p_gr_not_iiTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_not_ii *) x));
}
static void *_p_gr_peak_detector_fbTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_peak_detector_fb *) x));
}
static void *_p_gr_and_bbTo_p_gr_sync_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_block *)  ((gr_and_bb *) x));
}
static void *_p_gr_argmax_isTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_argmax_is *) x));
}
static void *_p_gr_probe_signal_sTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_s *) x));
}
static void *_p_gr_multiply_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_multiply_ss *) x));
}
static void *_p_gr_integrate_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_decimator *) ((gr_integrate_ii *) x));
}
static void *_p_gr_mute_ffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_mute_ff *) x));
}
static void *_p_gr_xor_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_xor_ss *) x));
}
static void *_p_gr_moving_average_ccTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_moving_average_cc *) x));
}
static void *_p_gr_not_bbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_not_bb *) x));
}
static void *_p_gr_argmax_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_argmax_ss *) x));
}
static void *_p_gr_max_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_max_ss *) x));
}
static void *_p_gr_multiply_const_viiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_multiply_const_vii *) x));
}
static void *_p_gr_add_const_viiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_const_vii *) x));
}
static void *_p_gr_chunks_to_symbols_icTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_ic *) x));
}
static void *_p_gr_and_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_and_ss *) x));
}
static void *_p_gr_chunks_to_symbols_ifTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_if *) x));
}
static void *_p_gr_vector_source_bTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_source_b *) x));
}
static void *_p_gr_divide_ffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_divide_ff *) x));
}
static void *_p_gr_chunks_to_symbols_scTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_sc *) x));
}
static void *_p_gr_sample_and_hold_ffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sample_and_hold_ff *) x));
}
static void *_p_gr_vector_source_cTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_source_c *) x));
}
static void *_p_gr_noise_source_cTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_noise_source_c *) x));
}
static void *_p_gr_sig_source_cTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sig_source_c *) x));
}
static void *_p_gr_not_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_not_ss *) x));
}
static void *_p_gr_chunks_to_symbols_sfTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_sf *) x));
}
static void *_p_gr_top_blockTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_hier_block2 *) ((gr_top_block *) x));
}
static void *_p_gr_blockTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *)  ((gr_block *) x));
}
static void *_p_gr_vector_source_fTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_source_f *) x));
}
static void *_p_gr_noise_source_fTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_noise_source_f *) x));
}
static void *_p_gr_sig_source_fTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sig_source_f *) x));
}
static void *_p_gr_add_const_ffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_const_ff *) x));
}
static void *_p_gr_peak_detector_ibTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_peak_detector_ib *) x));
}
static void *_p_gr_integrate_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_decimator *) ((gr_integrate_ss *) x));
}
static void *_p_gr_vector_source_iTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_source_i *) x));
}
static void *_p_gr_noise_source_iTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_noise_source_i *) x));
}
static void *_p_gr_sig_source_iTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sig_source_i *) x));
}
static void *_p_gr_vector_insert_bTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_vector_insert_b *) x));
}
static void *_p_gr_vector_sink_bTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_sink_b *) x));
}
static void *_p_gr_vector_sink_cTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_sink_c *) x));
}
static void *_p_gr_chunks_to_symbols_bcTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_bc *) x));
}
static void *_p_gr_peak_detector_sbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_peak_detector_sb *) x));
}
static void *_p_gr_multiply_const_vssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_multiply_const_vss *) x));
}
static void *_p_gr_add_const_vssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_const_vss *) x));
}
static void *_p_gr_sub_ccTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sub_cc *) x));
}
static void *_p_gr_vector_sink_fTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_sink_f *) x));
}
static void *_p_gr_add_ccTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_cc *) x));
}
static void *_p_gr_probe_signal_vbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_vb *) x));
}
static void *_p_gr_chunks_to_symbols_bfTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_bf *) x));
}
static void *_p_gr_mute_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_mute_ii *) x));
}
static void *_p_gr_probe_signal_vcTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_vc *) x));
}
static void *_p_gr_moving_average_ffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_moving_average_ff *) x));
}
static void *_p_gr_vector_sink_iTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_sink_i *) x));
}
static void *_p_gr_probe_signal_vfTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_vf *) x));
}
static void *_p_gr_vector_source_sTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_source_s *) x));
}
static void *_p_gr_noise_source_sTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_noise_source_s *) x));
}
static void *_p_gr_sig_source_sTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sig_source_s *) x));
}
static void *_p_gr_unpacked_to_packed_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_unpacked_to_packed_ii *) x));
}
static void *_p_gr_packed_to_unpacked_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_packed_to_unpacked_ii *) x));
}
static void *_p_gr_sync_decimatorTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sync_decimator *) x));
}
static void *_p_gr_probe_signal_viTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_vi *) x));
}
static void *_p_gr_divide_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_divide_ii *) x));
}
static void *_p_gr_or_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_or_ii *) x));
}
static void *_p_gr_sample_and_hold_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sample_and_hold_ii *) x));
}
static void *_p_gr_unpacked_to_packed_bbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_unpacked_to_packed_bb *) x));
}
static void *_p_gr_packed_to_unpacked_bbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_packed_to_unpacked_bb *) x));
}
static void *_p_gr_vector_sink_sTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_vector_sink_s *) x));
}
static void *_p_gr_multiply_const_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_multiply_const_ii *) x));
}
static void *_p_gr_add_const_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_const_ii *) x));
}
static void *_p_gr_and_const_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_and_const_ii *) x));
}
static void *_p_gr_add_const_sfTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_const_sf *) x));
}
static void *_p_gr_or_bbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_or_bb *) x));
}
static void *_p_gr_sample_and_hold_bbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sample_and_hold_bb *) x));
}
static void *_p_gr_mute_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_mute_ss *) x));
}
static void *_p_gr_probe_signal_vsTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_vs *) x));
}
static void *_p_gr_sub_ffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sub_ff *) x));
}
static void *_p_gr_and_const_bbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_and_const_bb *) x));
}
static void *_p_gr_sync_blockTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_sync_block *) x));
}
static void *_p_gr_unpacked_to_packed_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_unpacked_to_packed_ss *) x));
}
static void *_p_gr_packed_to_unpacked_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *) ((gr_packed_to_unpacked_ss *) x));
}
static void *_p_gr_integrate_ccTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_decimator *) ((gr_integrate_cc *) x));
}
static void *_p_gr_divide_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_divide_ss *) x));
}
static void *_p_gr_moving_average_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_moving_average_ii *) x));
}
static void *_p_gr_or_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_or_ss *) x));
}
static void *_p_gr_sample_and_hold_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sample_and_hold_ss *) x));
}
static void *_p_gr_multiply_const_vccTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_multiply_const_vcc *) x));
}
static void *_p_gr_add_const_vccTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_const_vcc *) x));
}
static void *_p_gr_multiply_const_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_multiply_const_ss *) x));
}
static void *_p_gr_add_const_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_const_ss *) x));
}
static void *_p_gr_and_const_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_and_const_ss *) x));
}
static void *_p_gr_max_ffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_max_ff *) x));
}
static void *_p_gr_moving_average_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_moving_average_ss *) x));
}
static void *_p_gr_sub_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sub_ii *) x));
}
static void *_p_gr_add_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_ii *) x));
}
static void *_p_gr_sync_interpolatorTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sync_interpolator *) x));
}
static void *_p_gr_integrate_ffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *)(gr_sync_decimator *) ((gr_integrate_ff *) x));
}
static void *_p_gr_mute_ccTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_mute_cc *) x));
}
static void *_p_gr_argmax_fsTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_argmax_fs *) x));
}
static void *_p_gr_probe_signal_bTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_b *) x));
}
static void *_p_gr_probe_signal_cTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_c *) x));
}
static void *_p_gr_multiply_const_vffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_multiply_const_vff *) x));
}
static void *_p_gr_add_const_vffTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_const_vff *) x));
}
static void *_p_gr_probe_signal_fTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_f *) x));
}
static void *_p_gr_multiply_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_multiply_ii *) x));
}
static void *_p_gr_xor_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_xor_ii *) x));
}
static void *_p_gr_divide_ccTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_divide_cc *) x));
}
static void *_p_gr_max_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_max_ii *) x));
}
static void *_p_gr_probe_signal_iTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_probe_signal_i *) x));
}
static void *_p_gr_and_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_and_ii *) x));
}
static void *_p_gr_add_const_ccTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_const_cc *) x));
}
static void *_p_gr_hier_block2To_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *)  ((gr_hier_block2 *) x));
}
static void *_p_gr_sub_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_sub_ss *) x));
}
static void *_p_gr_xor_bbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_xor_bb *) x));
}
static void *_p_gr_add_ssTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_add_ss *) x));
}
static void *_p_gr_not_iiTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_not_ii *) x));
}
static void *_p_gr_peak_detector_fbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_peak_detector_fb *) x));
}
static void *_p_gr_and_bbTo_p_gr_basic_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_basic_block *) (gr_block *)(gr_sync_block *) ((gr_and_bb *) x));
}
static void *_p_gr_chunks_to_symbols_sfTo_p_gr_sync_interpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_interpolator *)  ((gr_chunks_to_symbols_sf *) x));
}
static void *_p_gr_chunks_to_symbols_bfTo_p_gr_sync_interpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_interpolator *)  ((gr_chunks_to_symbols_bf *) x));
}
static void *_p_gr_chunks_to_symbols_ifTo_p_gr_sync_interpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_interpolator *)  ((gr_chunks_to_symbols_if *) x));
}
static void *_p_gr_chunks_to_symbols_scTo_p_gr_sync_interpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_interpolator *)  ((gr_chunks_to_symbols_sc *) x));
}
static void *_p_gr_chunks_to_symbols_bcTo_p_gr_sync_interpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_interpolator *)  ((gr_chunks_to_symbols_bc *) x));
}
static void *_p_gr_chunks_to_symbols_icTo_p_gr_sync_interpolator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_interpolator *)  ((gr_chunks_to_symbols_ic *) x));
}
static void *_p_gr_argmax_isTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_argmax_is *) x));
}
static void *_p_gr_probe_signal_sTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_s *) x));
}
static void *_p_gr_multiply_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_multiply_ss *) x));
}
static void *_p_gr_integrate_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_decimator *) ((gr_integrate_ii *) x));
}
static void *_p_gr_mute_ffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_mute_ff *) x));
}
static void *_p_gr_xor_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_xor_ss *) x));
}
static void *_p_gr_moving_average_ccTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_moving_average_cc *) x));
}
static void *_p_gr_not_bbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_not_bb *) x));
}
static void *_p_gr_argmax_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_argmax_ss *) x));
}
static void *_p_gr_max_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_max_ss *) x));
}
static void *_p_gr_multiply_const_viiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_multiply_const_vii *) x));
}
static void *_p_gr_add_const_viiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_const_vii *) x));
}
static void *_p_gr_chunks_to_symbols_icTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_ic *) x));
}
static void *_p_gr_and_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_and_ss *) x));
}
static void *_p_gr_chunks_to_symbols_ifTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_if *) x));
}
static void *_p_gr_vector_source_bTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_source_b *) x));
}
static void *_p_gr_divide_ffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_divide_ff *) x));
}
static void *_p_gr_chunks_to_symbols_scTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_sc *) x));
}
static void *_p_gr_sample_and_hold_ffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sample_and_hold_ff *) x));
}
static void *_p_gr_vector_source_cTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_source_c *) x));
}
static void *_p_gr_noise_source_cTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_noise_source_c *) x));
}
static void *_p_gr_sig_source_cTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sig_source_c *) x));
}
static void *_p_gr_not_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_not_ss *) x));
}
static void *_p_gr_chunks_to_symbols_sfTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_sf *) x));
}
static void *_p_gr_vector_source_fTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_source_f *) x));
}
static void *_p_gr_noise_source_fTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_noise_source_f *) x));
}
static void *_p_gr_sig_source_fTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sig_source_f *) x));
}
static void *_p_gr_add_const_ffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_const_ff *) x));
}
static void *_p_gr_peak_detector_ibTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_peak_detector_ib *) x));
}
static void *_p_gr_integrate_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_decimator *) ((gr_integrate_ss *) x));
}
static void *_p_gr_vector_source_iTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_source_i *) x));
}
static void *_p_gr_noise_source_iTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_noise_source_i *) x));
}
static void *_p_gr_sig_source_iTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sig_source_i *) x));
}
static void *_p_gr_vector_insert_bTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_vector_insert_b *) x));
}
static void *_p_gr_vector_sink_bTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_sink_b *) x));
}
static void *_p_gr_vector_sink_cTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_sink_c *) x));
}
static void *_p_gr_chunks_to_symbols_bcTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_bc *) x));
}
static void *_p_gr_peak_detector_sbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_peak_detector_sb *) x));
}
static void *_p_gr_multiply_const_vssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_multiply_const_vss *) x));
}
static void *_p_gr_add_const_vssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_const_vss *) x));
}
static void *_p_gr_sub_ccTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sub_cc *) x));
}
static void *_p_gr_vector_sink_fTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_sink_f *) x));
}
static void *_p_gr_add_ccTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_cc *) x));
}
static void *_p_gr_chunks_to_symbols_bfTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_interpolator *) ((gr_chunks_to_symbols_bf *) x));
}
static void *_p_gr_probe_signal_vbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_vb *) x));
}
static void *_p_gr_mute_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_mute_ii *) x));
}
static void *_p_gr_probe_signal_vcTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_vc *) x));
}
static void *_p_gr_moving_average_ffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_moving_average_ff *) x));
}
static void *_p_gr_vector_sink_iTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_sink_i *) x));
}
static void *_p_gr_probe_signal_vfTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_vf *) x));
}
static void *_p_gr_vector_source_sTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_source_s *) x));
}
static void *_p_gr_noise_source_sTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_noise_source_s *) x));
}
static void *_p_gr_sig_source_sTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sig_source_s *) x));
}
static void *_p_gr_unpacked_to_packed_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_unpacked_to_packed_ii *) x));
}
static void *_p_gr_packed_to_unpacked_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_packed_to_unpacked_ii *) x));
}
static void *_p_gr_sync_decimatorTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sync_decimator *) x));
}
static void *_p_gr_probe_signal_viTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_vi *) x));
}
static void *_p_gr_divide_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_divide_ii *) x));
}
static void *_p_gr_or_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_or_ii *) x));
}
static void *_p_gr_sample_and_hold_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sample_and_hold_ii *) x));
}
static void *_p_gr_unpacked_to_packed_bbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_unpacked_to_packed_bb *) x));
}
static void *_p_gr_packed_to_unpacked_bbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_packed_to_unpacked_bb *) x));
}
static void *_p_gr_vector_sink_sTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_vector_sink_s *) x));
}
static void *_p_gr_multiply_const_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_multiply_const_ii *) x));
}
static void *_p_gr_add_const_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_const_ii *) x));
}
static void *_p_gr_and_const_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_and_const_ii *) x));
}
static void *_p_gr_add_const_sfTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_const_sf *) x));
}
static void *_p_gr_or_bbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_or_bb *) x));
}
static void *_p_gr_sample_and_hold_bbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sample_and_hold_bb *) x));
}
static void *_p_gr_mute_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_mute_ss *) x));
}
static void *_p_gr_probe_signal_vsTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_vs *) x));
}
static void *_p_gr_sub_ffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sub_ff *) x));
}
static void *_p_gr_and_const_bbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_and_const_bb *) x));
}
static void *_p_gr_sync_blockTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_sync_block *) x));
}
static void *_p_gr_unpacked_to_packed_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_unpacked_to_packed_ss *) x));
}
static void *_p_gr_packed_to_unpacked_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *)  ((gr_packed_to_unpacked_ss *) x));
}
static void *_p_gr_integrate_ccTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_decimator *) ((gr_integrate_cc *) x));
}
static void *_p_gr_divide_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_divide_ss *) x));
}
static void *_p_gr_moving_average_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_moving_average_ii *) x));
}
static void *_p_gr_or_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_or_ss *) x));
}
static void *_p_gr_sample_and_hold_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sample_and_hold_ss *) x));
}
static void *_p_gr_multiply_const_vccTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_multiply_const_vcc *) x));
}
static void *_p_gr_add_const_vccTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_const_vcc *) x));
}
static void *_p_gr_multiply_const_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_multiply_const_ss *) x));
}
static void *_p_gr_add_const_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_const_ss *) x));
}
static void *_p_gr_and_const_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_and_const_ss *) x));
}
static void *_p_gr_max_ffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_max_ff *) x));
}
static void *_p_gr_moving_average_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_moving_average_ss *) x));
}
static void *_p_gr_sub_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sub_ii *) x));
}
static void *_p_gr_add_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_ii *) x));
}
static void *_p_gr_sync_interpolatorTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sync_interpolator *) x));
}
static void *_p_gr_integrate_ffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *)(gr_sync_decimator *) ((gr_integrate_ff *) x));
}
static void *_p_gr_mute_ccTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_mute_cc *) x));
}
static void *_p_gr_argmax_fsTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_argmax_fs *) x));
}
static void *_p_gr_probe_signal_bTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_b *) x));
}
static void *_p_gr_probe_signal_cTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_c *) x));
}
static void *_p_gr_multiply_const_vffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_multiply_const_vff *) x));
}
static void *_p_gr_add_const_vffTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_const_vff *) x));
}
static void *_p_gr_probe_signal_fTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_f *) x));
}
static void *_p_gr_multiply_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_multiply_ii *) x));
}
static void *_p_gr_xor_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_xor_ii *) x));
}
static void *_p_gr_divide_ccTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_divide_cc *) x));
}
static void *_p_gr_max_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_max_ii *) x));
}
static void *_p_gr_probe_signal_iTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_probe_signal_i *) x));
}
static void *_p_gr_and_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_and_ii *) x));
}
static void *_p_gr_add_const_ccTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_const_cc *) x));
}
static void *_p_gr_sub_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_sub_ss *) x));
}
static void *_p_gr_xor_bbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_xor_bb *) x));
}
static void *_p_gr_add_ssTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_add_ss *) x));
}
static void *_p_gr_not_iiTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_not_ii *) x));
}
static void *_p_gr_peak_detector_fbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_peak_detector_fb *) x));
}
static void *_p_gr_and_bbTo_p_gr_block(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_block *) (gr_sync_block *) ((gr_and_bb *) x));
}
static void *_p_gr_integrate_ccTo_p_gr_sync_decimator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_decimator *)  ((gr_integrate_cc *) x));
}
static void *_p_gr_integrate_ffTo_p_gr_sync_decimator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_decimator *)  ((gr_integrate_ff *) x));
}
static void *_p_gr_integrate_iiTo_p_gr_sync_decimator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_decimator *)  ((gr_integrate_ii *) x));
}
static void *_p_gr_integrate_ssTo_p_gr_sync_decimator(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((gr_sync_decimator *)  ((gr_integrate_ss *) x));
}
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_cc_t = {"_p_boost__shared_ptrT_gr_add_cc_t", "boost::shared_ptr< gr_add_cc > *|gr_add_cc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_const_cc_t = {"_p_boost__shared_ptrT_gr_add_const_cc_t", "boost::shared_ptr< gr_add_const_cc > *|gr_add_const_cc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_const_ff_t = {"_p_boost__shared_ptrT_gr_add_const_ff_t", "boost::shared_ptr< gr_add_const_ff > *|gr_add_const_ff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_const_ii_t = {"_p_boost__shared_ptrT_gr_add_const_ii_t", "boost::shared_ptr< gr_add_const_ii > *|gr_add_const_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_const_sf_t = {"_p_boost__shared_ptrT_gr_add_const_sf_t", "boost::shared_ptr< gr_add_const_sf > *|gr_add_const_sf_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_const_ss_t = {"_p_boost__shared_ptrT_gr_add_const_ss_t", "boost::shared_ptr< gr_add_const_ss > *|gr_add_const_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_const_vcc_t = {"_p_boost__shared_ptrT_gr_add_const_vcc_t", "boost::shared_ptr< gr_add_const_vcc > *|gr_add_const_vcc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_const_vff_t = {"_p_boost__shared_ptrT_gr_add_const_vff_t", "boost::shared_ptr< gr_add_const_vff > *|gr_add_const_vff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_const_vii_t = {"_p_boost__shared_ptrT_gr_add_const_vii_t", "boost::shared_ptr< gr_add_const_vii > *|gr_add_const_vii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_const_vss_t = {"_p_boost__shared_ptrT_gr_add_const_vss_t", "boost::shared_ptr< gr_add_const_vss > *|gr_add_const_vss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_ii_t = {"_p_boost__shared_ptrT_gr_add_ii_t", "boost::shared_ptr< gr_add_ii > *|gr_add_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_add_ss_t = {"_p_boost__shared_ptrT_gr_add_ss_t", "boost::shared_ptr< gr_add_ss > *|gr_add_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_and_bb_t = {"_p_boost__shared_ptrT_gr_and_bb_t", "boost::shared_ptr< gr_and_bb > *|gr_and_bb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_and_const_bb_t = {"_p_boost__shared_ptrT_gr_and_const_bb_t", "boost::shared_ptr< gr_and_const_bb > *|gr_and_const_bb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_and_const_ii_t = {"_p_boost__shared_ptrT_gr_and_const_ii_t", "boost::shared_ptr< gr_and_const_ii > *|gr_and_const_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_and_const_ss_t = {"_p_boost__shared_ptrT_gr_and_const_ss_t", "boost::shared_ptr< gr_and_const_ss > *|gr_and_const_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_and_ii_t = {"_p_boost__shared_ptrT_gr_and_ii_t", "boost::shared_ptr< gr_and_ii > *|gr_and_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_and_ss_t = {"_p_boost__shared_ptrT_gr_and_ss_t", "boost::shared_ptr< gr_and_ss > *|gr_and_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_argmax_fs_t = {"_p_boost__shared_ptrT_gr_argmax_fs_t", "boost::shared_ptr< gr_argmax_fs > *|gr_argmax_fs_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_argmax_is_t = {"_p_boost__shared_ptrT_gr_argmax_is_t", "boost::shared_ptr< gr_argmax_is > *|gr_argmax_is_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_argmax_ss_t = {"_p_boost__shared_ptrT_gr_argmax_ss_t", "boost::shared_ptr< gr_argmax_ss > *|gr_argmax_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_basic_block_t = {"_p_boost__shared_ptrT_gr_basic_block_t", "boost::shared_ptr< gr_basic_block > *|gr_basic_block_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_block_detail_t = {"_p_boost__shared_ptrT_gr_block_detail_t", "boost::shared_ptr< gr_block_detail > *|gr_block_detail_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_block_t = {"_p_boost__shared_ptrT_gr_block_t", "boost::shared_ptr< gr_block > *|gr_block_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_buffer_reader_t = {"_p_boost__shared_ptrT_gr_buffer_reader_t", "boost::shared_ptr< gr_buffer_reader > *|gr_buffer_reader_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_buffer_t = {"_p_boost__shared_ptrT_gr_buffer_t", "boost::shared_ptr< gr_buffer > *|gr_buffer_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t = {"_p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t", "boost::shared_ptr< gr_chunks_to_symbols_bc > *|gr_chunks_to_symbols_bc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t = {"_p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t", "boost::shared_ptr< gr_chunks_to_symbols_bf > *|gr_chunks_to_symbols_bf_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t = {"_p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t", "boost::shared_ptr< gr_chunks_to_symbols_ic > *|gr_chunks_to_symbols_ic_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_if_t = {"_p_boost__shared_ptrT_gr_chunks_to_symbols_if_t", "boost::shared_ptr< gr_chunks_to_symbols_if > *|gr_chunks_to_symbols_if_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t = {"_p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t", "boost::shared_ptr< gr_chunks_to_symbols_sc > *|gr_chunks_to_symbols_sc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t = {"_p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t", "boost::shared_ptr< gr_chunks_to_symbols_sf > *|gr_chunks_to_symbols_sf_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_dispatcher_t = {"_p_boost__shared_ptrT_gr_dispatcher_t", "boost::shared_ptr< gr_dispatcher > *|gr_dispatcher_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_divide_cc_t = {"_p_boost__shared_ptrT_gr_divide_cc_t", "boost::shared_ptr< gr_divide_cc > *|gr_divide_cc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_divide_ff_t = {"_p_boost__shared_ptrT_gr_divide_ff_t", "boost::shared_ptr< gr_divide_ff > *|gr_divide_ff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_divide_ii_t = {"_p_boost__shared_ptrT_gr_divide_ii_t", "boost::shared_ptr< gr_divide_ii > *|gr_divide_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_divide_ss_t = {"_p_boost__shared_ptrT_gr_divide_ss_t", "boost::shared_ptr< gr_divide_ss > *|gr_divide_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_hier_block2_t = {"_p_boost__shared_ptrT_gr_hier_block2_t", "boost::shared_ptr< gr_hier_block2 > *|gr_hier_block2_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_integrate_cc_t = {"_p_boost__shared_ptrT_gr_integrate_cc_t", "boost::shared_ptr< gr_integrate_cc > *|gr_integrate_cc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_integrate_ff_t = {"_p_boost__shared_ptrT_gr_integrate_ff_t", "boost::shared_ptr< gr_integrate_ff > *|gr_integrate_ff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_integrate_ii_t = {"_p_boost__shared_ptrT_gr_integrate_ii_t", "boost::shared_ptr< gr_integrate_ii > *|gr_integrate_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_integrate_ss_t = {"_p_boost__shared_ptrT_gr_integrate_ss_t", "boost::shared_ptr< gr_integrate_ss > *|gr_integrate_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_io_signature_t = {"_p_boost__shared_ptrT_gr_io_signature_t", "boost::shared_ptr< gr_io_signature > *|gr_io_signature_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_max_ff_t = {"_p_boost__shared_ptrT_gr_max_ff_t", "boost::shared_ptr< gr_max_ff > *|gr_max_ff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_max_ii_t = {"_p_boost__shared_ptrT_gr_max_ii_t", "boost::shared_ptr< gr_max_ii > *|gr_max_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_max_ss_t = {"_p_boost__shared_ptrT_gr_max_ss_t", "boost::shared_ptr< gr_max_ss > *|gr_max_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_message_t = {"_p_boost__shared_ptrT_gr_message_t", "boost::shared_ptr< gr_message > *|gr_message_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_moving_average_cc_t = {"_p_boost__shared_ptrT_gr_moving_average_cc_t", "boost::shared_ptr< gr_moving_average_cc > *|gr_moving_average_cc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_moving_average_ff_t = {"_p_boost__shared_ptrT_gr_moving_average_ff_t", "boost::shared_ptr< gr_moving_average_ff > *|gr_moving_average_ff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_moving_average_ii_t = {"_p_boost__shared_ptrT_gr_moving_average_ii_t", "boost::shared_ptr< gr_moving_average_ii > *|gr_moving_average_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_moving_average_ss_t = {"_p_boost__shared_ptrT_gr_moving_average_ss_t", "boost::shared_ptr< gr_moving_average_ss > *|gr_moving_average_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_msg_queue_t = {"_p_boost__shared_ptrT_gr_msg_queue_t", "boost::shared_ptr< gr_msg_queue > *|gr_msg_queue_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_multiply_const_ii_t = {"_p_boost__shared_ptrT_gr_multiply_const_ii_t", "boost::shared_ptr< gr_multiply_const_ii > *|gr_multiply_const_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_multiply_const_ss_t = {"_p_boost__shared_ptrT_gr_multiply_const_ss_t", "boost::shared_ptr< gr_multiply_const_ss > *|gr_multiply_const_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_multiply_const_vcc_t = {"_p_boost__shared_ptrT_gr_multiply_const_vcc_t", "boost::shared_ptr< gr_multiply_const_vcc > *|gr_multiply_const_vcc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_multiply_const_vff_t = {"_p_boost__shared_ptrT_gr_multiply_const_vff_t", "boost::shared_ptr< gr_multiply_const_vff > *|gr_multiply_const_vff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_multiply_const_vii_t = {"_p_boost__shared_ptrT_gr_multiply_const_vii_t", "boost::shared_ptr< gr_multiply_const_vii > *|gr_multiply_const_vii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_multiply_const_vss_t = {"_p_boost__shared_ptrT_gr_multiply_const_vss_t", "boost::shared_ptr< gr_multiply_const_vss > *|gr_multiply_const_vss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_multiply_ii_t = {"_p_boost__shared_ptrT_gr_multiply_ii_t", "boost::shared_ptr< gr_multiply_ii > *|gr_multiply_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_multiply_ss_t = {"_p_boost__shared_ptrT_gr_multiply_ss_t", "boost::shared_ptr< gr_multiply_ss > *|gr_multiply_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_mute_cc_t = {"_p_boost__shared_ptrT_gr_mute_cc_t", "boost::shared_ptr< gr_mute_cc > *|gr_mute_cc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_mute_ff_t = {"_p_boost__shared_ptrT_gr_mute_ff_t", "boost::shared_ptr< gr_mute_ff > *|gr_mute_ff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_mute_ii_t = {"_p_boost__shared_ptrT_gr_mute_ii_t", "boost::shared_ptr< gr_mute_ii > *|gr_mute_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_mute_ss_t = {"_p_boost__shared_ptrT_gr_mute_ss_t", "boost::shared_ptr< gr_mute_ss > *|gr_mute_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_noise_source_c_t = {"_p_boost__shared_ptrT_gr_noise_source_c_t", "boost::shared_ptr< gr_noise_source_c > *|gr_noise_source_c_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_noise_source_f_t = {"_p_boost__shared_ptrT_gr_noise_source_f_t", "boost::shared_ptr< gr_noise_source_f > *|gr_noise_source_f_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_noise_source_i_t = {"_p_boost__shared_ptrT_gr_noise_source_i_t", "boost::shared_ptr< gr_noise_source_i > *|gr_noise_source_i_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_noise_source_s_t = {"_p_boost__shared_ptrT_gr_noise_source_s_t", "boost::shared_ptr< gr_noise_source_s > *|gr_noise_source_s_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_not_bb_t = {"_p_boost__shared_ptrT_gr_not_bb_t", "boost::shared_ptr< gr_not_bb > *|gr_not_bb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_not_ii_t = {"_p_boost__shared_ptrT_gr_not_ii_t", "boost::shared_ptr< gr_not_ii > *|gr_not_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_not_ss_t = {"_p_boost__shared_ptrT_gr_not_ss_t", "boost::shared_ptr< gr_not_ss > *|gr_not_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_or_bb_t = {"_p_boost__shared_ptrT_gr_or_bb_t", "boost::shared_ptr< gr_or_bb > *|gr_or_bb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_or_ii_t = {"_p_boost__shared_ptrT_gr_or_ii_t", "boost::shared_ptr< gr_or_ii > *|gr_or_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_or_ss_t = {"_p_boost__shared_ptrT_gr_or_ss_t", "boost::shared_ptr< gr_or_ss > *|gr_or_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t = {"_p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t", "boost::shared_ptr< gr_packed_to_unpacked_bb > *|gr_packed_to_unpacked_bb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t = {"_p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t", "boost::shared_ptr< gr_packed_to_unpacked_ii > *|gr_packed_to_unpacked_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t = {"_p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t", "boost::shared_ptr< gr_packed_to_unpacked_ss > *|gr_packed_to_unpacked_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_peak_detector_fb_t = {"_p_boost__shared_ptrT_gr_peak_detector_fb_t", "boost::shared_ptr< gr_peak_detector_fb > *|gr_peak_detector_fb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_peak_detector_ib_t = {"_p_boost__shared_ptrT_gr_peak_detector_ib_t", "boost::shared_ptr< gr_peak_detector_ib > *|gr_peak_detector_ib_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_peak_detector_sb_t = {"_p_boost__shared_ptrT_gr_peak_detector_sb_t", "boost::shared_ptr< gr_peak_detector_sb > *|gr_peak_detector_sb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_b_t = {"_p_boost__shared_ptrT_gr_probe_signal_b_t", "boost::shared_ptr< gr_probe_signal_b > *|gr_probe_signal_b_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_c_t = {"_p_boost__shared_ptrT_gr_probe_signal_c_t", "boost::shared_ptr< gr_probe_signal_c > *|gr_probe_signal_c_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_f_t = {"_p_boost__shared_ptrT_gr_probe_signal_f_t", "boost::shared_ptr< gr_probe_signal_f > *|gr_probe_signal_f_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_i_t = {"_p_boost__shared_ptrT_gr_probe_signal_i_t", "boost::shared_ptr< gr_probe_signal_i > *|gr_probe_signal_i_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_s_t = {"_p_boost__shared_ptrT_gr_probe_signal_s_t", "boost::shared_ptr< gr_probe_signal_s > *|gr_probe_signal_s_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_vb_t = {"_p_boost__shared_ptrT_gr_probe_signal_vb_t", "boost::shared_ptr< gr_probe_signal_vb > *|gr_probe_signal_vb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_vc_t = {"_p_boost__shared_ptrT_gr_probe_signal_vc_t", "boost::shared_ptr< gr_probe_signal_vc > *|gr_probe_signal_vc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_vf_t = {"_p_boost__shared_ptrT_gr_probe_signal_vf_t", "boost::shared_ptr< gr_probe_signal_vf > *|gr_probe_signal_vf_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_vi_t = {"_p_boost__shared_ptrT_gr_probe_signal_vi_t", "boost::shared_ptr< gr_probe_signal_vi > *|gr_probe_signal_vi_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_probe_signal_vs_t = {"_p_boost__shared_ptrT_gr_probe_signal_vs_t", "boost::shared_ptr< gr_probe_signal_vs > *|gr_probe_signal_vs_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sample_and_hold_bb_t = {"_p_boost__shared_ptrT_gr_sample_and_hold_bb_t", "boost::shared_ptr< gr_sample_and_hold_bb > *|gr_sample_and_hold_bb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sample_and_hold_ff_t = {"_p_boost__shared_ptrT_gr_sample_and_hold_ff_t", "boost::shared_ptr< gr_sample_and_hold_ff > *|gr_sample_and_hold_ff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sample_and_hold_ii_t = {"_p_boost__shared_ptrT_gr_sample_and_hold_ii_t", "boost::shared_ptr< gr_sample_and_hold_ii > *|gr_sample_and_hold_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sample_and_hold_ss_t = {"_p_boost__shared_ptrT_gr_sample_and_hold_ss_t", "boost::shared_ptr< gr_sample_and_hold_ss > *|gr_sample_and_hold_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sig_source_c_t = {"_p_boost__shared_ptrT_gr_sig_source_c_t", "boost::shared_ptr< gr_sig_source_c > *|gr_sig_source_c_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sig_source_f_t = {"_p_boost__shared_ptrT_gr_sig_source_f_t", "boost::shared_ptr< gr_sig_source_f > *|gr_sig_source_f_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sig_source_i_t = {"_p_boost__shared_ptrT_gr_sig_source_i_t", "boost::shared_ptr< gr_sig_source_i > *|gr_sig_source_i_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sig_source_s_t = {"_p_boost__shared_ptrT_gr_sig_source_s_t", "boost::shared_ptr< gr_sig_source_s > *|gr_sig_source_s_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_single_threaded_scheduler_t = {"_p_boost__shared_ptrT_gr_single_threaded_scheduler_t", "boost::shared_ptr< gr_single_threaded_scheduler > *|gr_single_threaded_scheduler_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sub_cc_t = {"_p_boost__shared_ptrT_gr_sub_cc_t", "boost::shared_ptr< gr_sub_cc > *|gr_sub_cc_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sub_ff_t = {"_p_boost__shared_ptrT_gr_sub_ff_t", "boost::shared_ptr< gr_sub_ff > *|gr_sub_ff_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sub_ii_t = {"_p_boost__shared_ptrT_gr_sub_ii_t", "boost::shared_ptr< gr_sub_ii > *|gr_sub_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_sub_ss_t = {"_p_boost__shared_ptrT_gr_sub_ss_t", "boost::shared_ptr< gr_sub_ss > *|gr_sub_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_top_block_t = {"_p_boost__shared_ptrT_gr_top_block_t", "boost::shared_ptr< gr_top_block > *|gr_top_block_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t = {"_p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t", "boost::shared_ptr< gr_unpacked_to_packed_bb > *|gr_unpacked_to_packed_bb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t = {"_p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t", "boost::shared_ptr< gr_unpacked_to_packed_ii > *|gr_unpacked_to_packed_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t = {"_p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t", "boost::shared_ptr< gr_unpacked_to_packed_ss > *|gr_unpacked_to_packed_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_insert_b_t = {"_p_boost__shared_ptrT_gr_vector_insert_b_t", "boost::shared_ptr< gr_vector_insert_b > *|gr_vector_insert_b_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_sink_b_t = {"_p_boost__shared_ptrT_gr_vector_sink_b_t", "boost::shared_ptr< gr_vector_sink_b > *|gr_vector_sink_b_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_sink_c_t = {"_p_boost__shared_ptrT_gr_vector_sink_c_t", "boost::shared_ptr< gr_vector_sink_c > *|gr_vector_sink_c_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_sink_f_t = {"_p_boost__shared_ptrT_gr_vector_sink_f_t", "boost::shared_ptr< gr_vector_sink_f > *|gr_vector_sink_f_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_sink_i_t = {"_p_boost__shared_ptrT_gr_vector_sink_i_t", "boost::shared_ptr< gr_vector_sink_i > *|gr_vector_sink_i_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_sink_s_t = {"_p_boost__shared_ptrT_gr_vector_sink_s_t", "boost::shared_ptr< gr_vector_sink_s > *|gr_vector_sink_s_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_source_b_t = {"_p_boost__shared_ptrT_gr_vector_source_b_t", "boost::shared_ptr< gr_vector_source_b > *|gr_vector_source_b_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_source_c_t = {"_p_boost__shared_ptrT_gr_vector_source_c_t", "boost::shared_ptr< gr_vector_source_c > *|gr_vector_source_c_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_source_f_t = {"_p_boost__shared_ptrT_gr_vector_source_f_t", "boost::shared_ptr< gr_vector_source_f > *|gr_vector_source_f_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_source_i_t = {"_p_boost__shared_ptrT_gr_vector_source_i_t", "boost::shared_ptr< gr_vector_source_i > *|gr_vector_source_i_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_vector_source_s_t = {"_p_boost__shared_ptrT_gr_vector_source_s_t", "boost::shared_ptr< gr_vector_source_s > *|gr_vector_source_s_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_xor_bb_t = {"_p_boost__shared_ptrT_gr_xor_bb_t", "boost::shared_ptr< gr_xor_bb > *|gr_xor_bb_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_xor_ii_t = {"_p_boost__shared_ptrT_gr_xor_ii_t", "boost::shared_ptr< gr_xor_ii > *|gr_xor_ii_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_boost__shared_ptrT_gr_xor_ss_t = {"_p_boost__shared_ptrT_gr_xor_ss_t", "boost::shared_ptr< gr_xor_ss > *|gr_xor_ss_sptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_cc = {"_p_gr_add_cc", "gr_add_cc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_const_cc = {"_p_gr_add_const_cc", "gr_add_const_cc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_const_ff = {"_p_gr_add_const_ff", "gr_add_const_ff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_const_ii = {"_p_gr_add_const_ii", "gr_add_const_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_const_sf = {"_p_gr_add_const_sf", "gr_add_const_sf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_const_ss = {"_p_gr_add_const_ss", "gr_add_const_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_const_vcc = {"_p_gr_add_const_vcc", "gr_add_const_vcc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_const_vff = {"_p_gr_add_const_vff", "gr_add_const_vff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_const_vii = {"_p_gr_add_const_vii", "gr_add_const_vii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_const_vss = {"_p_gr_add_const_vss", "gr_add_const_vss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_ii = {"_p_gr_add_ii", "gr_add_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_add_ss = {"_p_gr_add_ss", "gr_add_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_and_bb = {"_p_gr_and_bb", "gr_and_bb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_and_const_bb = {"_p_gr_and_const_bb", "gr_and_const_bb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_and_const_ii = {"_p_gr_and_const_ii", "gr_and_const_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_and_const_ss = {"_p_gr_and_const_ss", "gr_and_const_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_and_ii = {"_p_gr_and_ii", "gr_and_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_and_ss = {"_p_gr_and_ss", "gr_and_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_argmax_fs = {"_p_gr_argmax_fs", "gr_argmax_fs *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_argmax_is = {"_p_gr_argmax_is", "gr_argmax_is *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_argmax_ss = {"_p_gr_argmax_ss", "gr_argmax_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_basic_block = {"_p_gr_basic_block", "gr_basic_block *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_top_block = {"_p_gr_top_block", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_gr_hier_block2 = {"_p_gr_hier_block2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_gr_block = {"_p_gr_block", "gr_block *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_chunks_to_symbols_bc = {"_p_gr_chunks_to_symbols_bc", "gr_chunks_to_symbols_bc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_chunks_to_symbols_bf = {"_p_gr_chunks_to_symbols_bf", "gr_chunks_to_symbols_bf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_chunks_to_symbols_ic = {"_p_gr_chunks_to_symbols_ic", "gr_chunks_to_symbols_ic *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_chunks_to_symbols_if = {"_p_gr_chunks_to_symbols_if", "gr_chunks_to_symbols_if *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_chunks_to_symbols_sc = {"_p_gr_chunks_to_symbols_sc", "gr_chunks_to_symbols_sc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_chunks_to_symbols_sf = {"_p_gr_chunks_to_symbols_sf", "gr_chunks_to_symbols_sf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_divide_cc = {"_p_gr_divide_cc", "gr_divide_cc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_divide_ff = {"_p_gr_divide_ff", "gr_divide_ff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_divide_ii = {"_p_gr_divide_ii", "gr_divide_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_divide_ss = {"_p_gr_divide_ss", "gr_divide_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_endianness_t = {"_p_gr_endianness_t", "enum gr_endianness_t *|gr_endianness_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_integrate_cc = {"_p_gr_integrate_cc", "gr_integrate_cc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_integrate_ff = {"_p_gr_integrate_ff", "gr_integrate_ff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_integrate_ii = {"_p_gr_integrate_ii", "gr_integrate_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_integrate_ss = {"_p_gr_integrate_ss", "gr_integrate_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_max_ff = {"_p_gr_max_ff", "gr_max_ff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_max_ii = {"_p_gr_max_ii", "gr_max_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_max_ss = {"_p_gr_max_ss", "gr_max_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_moving_average_cc = {"_p_gr_moving_average_cc", "gr_moving_average_cc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_moving_average_ff = {"_p_gr_moving_average_ff", "gr_moving_average_ff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_moving_average_ii = {"_p_gr_moving_average_ii", "gr_moving_average_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_moving_average_ss = {"_p_gr_moving_average_ss", "gr_moving_average_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_multiply_const_ii = {"_p_gr_multiply_const_ii", "gr_multiply_const_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_multiply_const_ss = {"_p_gr_multiply_const_ss", "gr_multiply_const_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_multiply_const_vcc = {"_p_gr_multiply_const_vcc", "gr_multiply_const_vcc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_multiply_const_vff = {"_p_gr_multiply_const_vff", "gr_multiply_const_vff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_multiply_const_vii = {"_p_gr_multiply_const_vii", "gr_multiply_const_vii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_multiply_const_vss = {"_p_gr_multiply_const_vss", "gr_multiply_const_vss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_multiply_ii = {"_p_gr_multiply_ii", "gr_multiply_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_multiply_ss = {"_p_gr_multiply_ss", "gr_multiply_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_mute_cc = {"_p_gr_mute_cc", "gr_mute_cc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_mute_ff = {"_p_gr_mute_ff", "gr_mute_ff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_mute_ii = {"_p_gr_mute_ii", "gr_mute_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_mute_ss = {"_p_gr_mute_ss", "gr_mute_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_noise_source_c = {"_p_gr_noise_source_c", "gr_noise_source_c *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_noise_source_f = {"_p_gr_noise_source_f", "gr_noise_source_f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_noise_source_i = {"_p_gr_noise_source_i", "gr_noise_source_i *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_noise_source_s = {"_p_gr_noise_source_s", "gr_noise_source_s *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_noise_type_t = {"_p_gr_noise_type_t", "enum gr_noise_type_t *|gr_noise_type_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_not_bb = {"_p_gr_not_bb", "gr_not_bb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_not_ii = {"_p_gr_not_ii", "gr_not_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_not_ss = {"_p_gr_not_ss", "gr_not_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_or_bb = {"_p_gr_or_bb", "gr_or_bb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_or_ii = {"_p_gr_or_ii", "gr_or_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_or_ss = {"_p_gr_or_ss", "gr_or_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_packed_to_unpacked_bb = {"_p_gr_packed_to_unpacked_bb", "gr_packed_to_unpacked_bb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_packed_to_unpacked_ii = {"_p_gr_packed_to_unpacked_ii", "gr_packed_to_unpacked_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_packed_to_unpacked_ss = {"_p_gr_packed_to_unpacked_ss", "gr_packed_to_unpacked_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_peak_detector_fb = {"_p_gr_peak_detector_fb", "gr_peak_detector_fb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_peak_detector_ib = {"_p_gr_peak_detector_ib", "gr_peak_detector_ib *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_peak_detector_sb = {"_p_gr_peak_detector_sb", "gr_peak_detector_sb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_b = {"_p_gr_probe_signal_b", "gr_probe_signal_b *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_c = {"_p_gr_probe_signal_c", "gr_probe_signal_c *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_f = {"_p_gr_probe_signal_f", "gr_probe_signal_f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_i = {"_p_gr_probe_signal_i", "gr_probe_signal_i *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_s = {"_p_gr_probe_signal_s", "gr_probe_signal_s *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_vb = {"_p_gr_probe_signal_vb", "gr_probe_signal_vb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_vc = {"_p_gr_probe_signal_vc", "gr_probe_signal_vc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_vf = {"_p_gr_probe_signal_vf", "gr_probe_signal_vf *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_vi = {"_p_gr_probe_signal_vi", "gr_probe_signal_vi *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_probe_signal_vs = {"_p_gr_probe_signal_vs", "gr_probe_signal_vs *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sample_and_hold_bb = {"_p_gr_sample_and_hold_bb", "gr_sample_and_hold_bb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sample_and_hold_ff = {"_p_gr_sample_and_hold_ff", "gr_sample_and_hold_ff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sample_and_hold_ii = {"_p_gr_sample_and_hold_ii", "gr_sample_and_hold_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sample_and_hold_ss = {"_p_gr_sample_and_hold_ss", "gr_sample_and_hold_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sig_source_c = {"_p_gr_sig_source_c", "gr_sig_source_c *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sig_source_f = {"_p_gr_sig_source_f", "gr_sig_source_f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sig_source_i = {"_p_gr_sig_source_i", "gr_sig_source_i *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sig_source_s = {"_p_gr_sig_source_s", "gr_sig_source_s *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sub_cc = {"_p_gr_sub_cc", "gr_sub_cc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sub_ff = {"_p_gr_sub_ff", "gr_sub_ff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sub_ii = {"_p_gr_sub_ii", "gr_sub_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sub_ss = {"_p_gr_sub_ss", "gr_sub_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sync_block = {"_p_gr_sync_block", "gr_sync_block *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sync_decimator = {"_p_gr_sync_decimator", "gr_sync_decimator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_sync_interpolator = {"_p_gr_sync_interpolator", "gr_sync_interpolator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_unpacked_to_packed_bb = {"_p_gr_unpacked_to_packed_bb", "gr_unpacked_to_packed_bb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_unpacked_to_packed_ii = {"_p_gr_unpacked_to_packed_ii", "gr_unpacked_to_packed_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_unpacked_to_packed_ss = {"_p_gr_unpacked_to_packed_ss", "gr_unpacked_to_packed_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_insert_b = {"_p_gr_vector_insert_b", "gr_vector_insert_b *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_sink_b = {"_p_gr_vector_sink_b", "gr_vector_sink_b *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_sink_c = {"_p_gr_vector_sink_c", "gr_vector_sink_c *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_sink_f = {"_p_gr_vector_sink_f", "gr_vector_sink_f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_sink_i = {"_p_gr_vector_sink_i", "gr_vector_sink_i *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_sink_s = {"_p_gr_vector_sink_s", "gr_vector_sink_s *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_source_b = {"_p_gr_vector_source_b", "gr_vector_source_b *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_source_c = {"_p_gr_vector_source_c", "gr_vector_source_c *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_source_f = {"_p_gr_vector_source_f", "gr_vector_source_f *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_source_i = {"_p_gr_vector_source_i", "gr_vector_source_i *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_vector_source_s = {"_p_gr_vector_source_s", "gr_vector_source_s *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_waveform_t = {"_p_gr_waveform_t", "enum gr_waveform_t *|gr_waveform_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_xor_bb = {"_p_gr_xor_bb", "gr_xor_bb *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_xor_ii = {"_p_gr_xor_ii", "gr_xor_ii *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gr_xor_ss = {"_p_gr_xor_ss", "gr_xor_ss *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_gruel__rt_status_t = {"_p_gruel__rt_status_t", "enum gruel::rt_status_t *|gruel::rt_status_t *|gr_rt_status_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "int64_t *|long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__complexT_double_t = {"_p_std__complexT_double_t", "gr_complexd *|std::complex< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__complexT_float_t = {"_p_std__complexT_float_t", "std::complex< float > *|gr_complex *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "uint64_t *|unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_allocator_type,
  &_swigt__p_boost__shared_ptrT_gr_add_cc_t,
  &_swigt__p_boost__shared_ptrT_gr_add_const_cc_t,
  &_swigt__p_boost__shared_ptrT_gr_add_const_ff_t,
  &_swigt__p_boost__shared_ptrT_gr_add_const_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_add_const_sf_t,
  &_swigt__p_boost__shared_ptrT_gr_add_const_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_add_const_vcc_t,
  &_swigt__p_boost__shared_ptrT_gr_add_const_vff_t,
  &_swigt__p_boost__shared_ptrT_gr_add_const_vii_t,
  &_swigt__p_boost__shared_ptrT_gr_add_const_vss_t,
  &_swigt__p_boost__shared_ptrT_gr_add_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_add_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_and_bb_t,
  &_swigt__p_boost__shared_ptrT_gr_and_const_bb_t,
  &_swigt__p_boost__shared_ptrT_gr_and_const_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_and_const_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_and_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_and_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_argmax_fs_t,
  &_swigt__p_boost__shared_ptrT_gr_argmax_is_t,
  &_swigt__p_boost__shared_ptrT_gr_argmax_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_basic_block_t,
  &_swigt__p_boost__shared_ptrT_gr_block_detail_t,
  &_swigt__p_boost__shared_ptrT_gr_block_t,
  &_swigt__p_boost__shared_ptrT_gr_buffer_reader_t,
  &_swigt__p_boost__shared_ptrT_gr_buffer_t,
  &_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t,
  &_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t,
  &_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t,
  &_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_if_t,
  &_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t,
  &_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t,
  &_swigt__p_boost__shared_ptrT_gr_dispatcher_t,
  &_swigt__p_boost__shared_ptrT_gr_divide_cc_t,
  &_swigt__p_boost__shared_ptrT_gr_divide_ff_t,
  &_swigt__p_boost__shared_ptrT_gr_divide_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_divide_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_hier_block2_t,
  &_swigt__p_boost__shared_ptrT_gr_integrate_cc_t,
  &_swigt__p_boost__shared_ptrT_gr_integrate_ff_t,
  &_swigt__p_boost__shared_ptrT_gr_integrate_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_integrate_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_io_signature_t,
  &_swigt__p_boost__shared_ptrT_gr_max_ff_t,
  &_swigt__p_boost__shared_ptrT_gr_max_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_max_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_message_t,
  &_swigt__p_boost__shared_ptrT_gr_moving_average_cc_t,
  &_swigt__p_boost__shared_ptrT_gr_moving_average_ff_t,
  &_swigt__p_boost__shared_ptrT_gr_moving_average_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_moving_average_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_msg_queue_t,
  &_swigt__p_boost__shared_ptrT_gr_multiply_const_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_multiply_const_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_multiply_const_vcc_t,
  &_swigt__p_boost__shared_ptrT_gr_multiply_const_vff_t,
  &_swigt__p_boost__shared_ptrT_gr_multiply_const_vii_t,
  &_swigt__p_boost__shared_ptrT_gr_multiply_const_vss_t,
  &_swigt__p_boost__shared_ptrT_gr_multiply_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_multiply_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_mute_cc_t,
  &_swigt__p_boost__shared_ptrT_gr_mute_ff_t,
  &_swigt__p_boost__shared_ptrT_gr_mute_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_mute_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_noise_source_c_t,
  &_swigt__p_boost__shared_ptrT_gr_noise_source_f_t,
  &_swigt__p_boost__shared_ptrT_gr_noise_source_i_t,
  &_swigt__p_boost__shared_ptrT_gr_noise_source_s_t,
  &_swigt__p_boost__shared_ptrT_gr_not_bb_t,
  &_swigt__p_boost__shared_ptrT_gr_not_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_not_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_or_bb_t,
  &_swigt__p_boost__shared_ptrT_gr_or_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_or_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t,
  &_swigt__p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_peak_detector_fb_t,
  &_swigt__p_boost__shared_ptrT_gr_peak_detector_ib_t,
  &_swigt__p_boost__shared_ptrT_gr_peak_detector_sb_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_b_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_c_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_f_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_i_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_s_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_vb_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_vc_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_vf_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_vi_t,
  &_swigt__p_boost__shared_ptrT_gr_probe_signal_vs_t,
  &_swigt__p_boost__shared_ptrT_gr_sample_and_hold_bb_t,
  &_swigt__p_boost__shared_ptrT_gr_sample_and_hold_ff_t,
  &_swigt__p_boost__shared_ptrT_gr_sample_and_hold_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_sample_and_hold_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_sig_source_c_t,
  &_swigt__p_boost__shared_ptrT_gr_sig_source_f_t,
  &_swigt__p_boost__shared_ptrT_gr_sig_source_i_t,
  &_swigt__p_boost__shared_ptrT_gr_sig_source_s_t,
  &_swigt__p_boost__shared_ptrT_gr_single_threaded_scheduler_t,
  &_swigt__p_boost__shared_ptrT_gr_sub_cc_t,
  &_swigt__p_boost__shared_ptrT_gr_sub_ff_t,
  &_swigt__p_boost__shared_ptrT_gr_sub_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_sub_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_top_block_t,
  &_swigt__p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t,
  &_swigt__p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_insert_b_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_sink_b_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_sink_c_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_sink_f_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_sink_i_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_sink_s_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_source_b_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_source_c_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_source_f_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_source_i_t,
  &_swigt__p_boost__shared_ptrT_gr_vector_source_s_t,
  &_swigt__p_boost__shared_ptrT_gr_xor_bb_t,
  &_swigt__p_boost__shared_ptrT_gr_xor_ii_t,
  &_swigt__p_boost__shared_ptrT_gr_xor_ss_t,
  &_swigt__p_char,
  &_swigt__p_difference_type,
  &_swigt__p_gr_add_cc,
  &_swigt__p_gr_add_const_cc,
  &_swigt__p_gr_add_const_ff,
  &_swigt__p_gr_add_const_ii,
  &_swigt__p_gr_add_const_sf,
  &_swigt__p_gr_add_const_ss,
  &_swigt__p_gr_add_const_vcc,
  &_swigt__p_gr_add_const_vff,
  &_swigt__p_gr_add_const_vii,
  &_swigt__p_gr_add_const_vss,
  &_swigt__p_gr_add_ii,
  &_swigt__p_gr_add_ss,
  &_swigt__p_gr_and_bb,
  &_swigt__p_gr_and_const_bb,
  &_swigt__p_gr_and_const_ii,
  &_swigt__p_gr_and_const_ss,
  &_swigt__p_gr_and_ii,
  &_swigt__p_gr_and_ss,
  &_swigt__p_gr_argmax_fs,
  &_swigt__p_gr_argmax_is,
  &_swigt__p_gr_argmax_ss,
  &_swigt__p_gr_basic_block,
  &_swigt__p_gr_block,
  &_swigt__p_gr_chunks_to_symbols_bc,
  &_swigt__p_gr_chunks_to_symbols_bf,
  &_swigt__p_gr_chunks_to_symbols_ic,
  &_swigt__p_gr_chunks_to_symbols_if,
  &_swigt__p_gr_chunks_to_symbols_sc,
  &_swigt__p_gr_chunks_to_symbols_sf,
  &_swigt__p_gr_divide_cc,
  &_swigt__p_gr_divide_ff,
  &_swigt__p_gr_divide_ii,
  &_swigt__p_gr_divide_ss,
  &_swigt__p_gr_endianness_t,
  &_swigt__p_gr_hier_block2,
  &_swigt__p_gr_integrate_cc,
  &_swigt__p_gr_integrate_ff,
  &_swigt__p_gr_integrate_ii,
  &_swigt__p_gr_integrate_ss,
  &_swigt__p_gr_max_ff,
  &_swigt__p_gr_max_ii,
  &_swigt__p_gr_max_ss,
  &_swigt__p_gr_moving_average_cc,
  &_swigt__p_gr_moving_average_ff,
  &_swigt__p_gr_moving_average_ii,
  &_swigt__p_gr_moving_average_ss,
  &_swigt__p_gr_multiply_const_ii,
  &_swigt__p_gr_multiply_const_ss,
  &_swigt__p_gr_multiply_const_vcc,
  &_swigt__p_gr_multiply_const_vff,
  &_swigt__p_gr_multiply_const_vii,
  &_swigt__p_gr_multiply_const_vss,
  &_swigt__p_gr_multiply_ii,
  &_swigt__p_gr_multiply_ss,
  &_swigt__p_gr_mute_cc,
  &_swigt__p_gr_mute_ff,
  &_swigt__p_gr_mute_ii,
  &_swigt__p_gr_mute_ss,
  &_swigt__p_gr_noise_source_c,
  &_swigt__p_gr_noise_source_f,
  &_swigt__p_gr_noise_source_i,
  &_swigt__p_gr_noise_source_s,
  &_swigt__p_gr_noise_type_t,
  &_swigt__p_gr_not_bb,
  &_swigt__p_gr_not_ii,
  &_swigt__p_gr_not_ss,
  &_swigt__p_gr_or_bb,
  &_swigt__p_gr_or_ii,
  &_swigt__p_gr_or_ss,
  &_swigt__p_gr_packed_to_unpacked_bb,
  &_swigt__p_gr_packed_to_unpacked_ii,
  &_swigt__p_gr_packed_to_unpacked_ss,
  &_swigt__p_gr_peak_detector_fb,
  &_swigt__p_gr_peak_detector_ib,
  &_swigt__p_gr_peak_detector_sb,
  &_swigt__p_gr_probe_signal_b,
  &_swigt__p_gr_probe_signal_c,
  &_swigt__p_gr_probe_signal_f,
  &_swigt__p_gr_probe_signal_i,
  &_swigt__p_gr_probe_signal_s,
  &_swigt__p_gr_probe_signal_vb,
  &_swigt__p_gr_probe_signal_vc,
  &_swigt__p_gr_probe_signal_vf,
  &_swigt__p_gr_probe_signal_vi,
  &_swigt__p_gr_probe_signal_vs,
  &_swigt__p_gr_sample_and_hold_bb,
  &_swigt__p_gr_sample_and_hold_ff,
  &_swigt__p_gr_sample_and_hold_ii,
  &_swigt__p_gr_sample_and_hold_ss,
  &_swigt__p_gr_sig_source_c,
  &_swigt__p_gr_sig_source_f,
  &_swigt__p_gr_sig_source_i,
  &_swigt__p_gr_sig_source_s,
  &_swigt__p_gr_sub_cc,
  &_swigt__p_gr_sub_ff,
  &_swigt__p_gr_sub_ii,
  &_swigt__p_gr_sub_ss,
  &_swigt__p_gr_sync_block,
  &_swigt__p_gr_sync_decimator,
  &_swigt__p_gr_sync_interpolator,
  &_swigt__p_gr_top_block,
  &_swigt__p_gr_unpacked_to_packed_bb,
  &_swigt__p_gr_unpacked_to_packed_ii,
  &_swigt__p_gr_unpacked_to_packed_ss,
  &_swigt__p_gr_vector_insert_b,
  &_swigt__p_gr_vector_sink_b,
  &_swigt__p_gr_vector_sink_c,
  &_swigt__p_gr_vector_sink_f,
  &_swigt__p_gr_vector_sink_i,
  &_swigt__p_gr_vector_sink_s,
  &_swigt__p_gr_vector_source_b,
  &_swigt__p_gr_vector_source_c,
  &_swigt__p_gr_vector_source_f,
  &_swigt__p_gr_vector_source_i,
  &_swigt__p_gr_vector_source_s,
  &_swigt__p_gr_waveform_t,
  &_swigt__p_gr_xor_bb,
  &_swigt__p_gr_xor_ii,
  &_swigt__p_gr_xor_ss,
  &_swigt__p_gruel__rt_status_t,
  &_swigt__p_long_long,
  &_swigt__p_size_type,
  &_swigt__p_std__complexT_double_t,
  &_swigt__p_std__complexT_float_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_value_type,
};

static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_cc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_cc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_const_cc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_const_cc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_const_ff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_const_ff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_const_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_const_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_const_sf_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_const_sf_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_const_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_const_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_const_vcc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_const_vcc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_const_vff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_const_vff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_const_vii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_const_vii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_const_vss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_const_vss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_add_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_add_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_and_bb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_and_bb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_and_const_bb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_and_const_bb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_and_const_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_and_const_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_and_const_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_and_const_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_and_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_and_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_and_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_and_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_argmax_fs_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_argmax_fs_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_argmax_is_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_argmax_is_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_argmax_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_argmax_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_basic_block_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_basic_block_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_block_detail_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_block_detail_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_block_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_block_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_buffer_reader_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_buffer_reader_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_buffer_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_buffer_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_if_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_if_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_dispatcher_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_dispatcher_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_divide_cc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_divide_cc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_divide_ff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_divide_ff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_divide_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_divide_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_divide_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_divide_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_hier_block2_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_hier_block2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_integrate_cc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_integrate_cc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_integrate_ff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_integrate_ff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_integrate_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_integrate_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_integrate_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_integrate_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_io_signature_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_io_signature_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_max_ff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_max_ff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_max_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_max_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_max_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_max_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_message_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_message_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_moving_average_cc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_moving_average_cc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_moving_average_ff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_moving_average_ff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_moving_average_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_moving_average_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_moving_average_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_moving_average_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_msg_queue_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_msg_queue_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_multiply_const_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_multiply_const_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_multiply_const_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_multiply_const_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_multiply_const_vcc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_multiply_const_vcc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_multiply_const_vff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_multiply_const_vff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_multiply_const_vii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_multiply_const_vii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_multiply_const_vss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_multiply_const_vss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_multiply_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_multiply_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_multiply_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_multiply_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_mute_cc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_mute_cc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_mute_ff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_mute_ff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_mute_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_mute_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_mute_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_mute_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_noise_source_c_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_noise_source_c_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_noise_source_f_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_noise_source_f_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_noise_source_i_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_noise_source_i_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_noise_source_s_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_noise_source_s_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_not_bb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_not_bb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_not_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_not_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_not_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_not_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_or_bb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_or_bb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_or_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_or_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_or_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_or_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_peak_detector_fb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_peak_detector_fb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_peak_detector_ib_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_peak_detector_ib_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_peak_detector_sb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_peak_detector_sb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_b_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_b_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_c_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_c_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_f_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_f_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_i_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_i_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_s_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_s_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_vb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_vb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_vc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_vc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_vf_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_vf_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_vi_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_vi_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_probe_signal_vs_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_probe_signal_vs_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sample_and_hold_bb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sample_and_hold_bb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sample_and_hold_ff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sample_and_hold_ff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sample_and_hold_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sample_and_hold_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sample_and_hold_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sample_and_hold_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sig_source_c_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sig_source_c_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sig_source_f_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sig_source_f_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sig_source_i_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sig_source_i_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sig_source_s_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sig_source_s_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_single_threaded_scheduler_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_single_threaded_scheduler_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sub_cc_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sub_cc_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sub_ff_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sub_ff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sub_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sub_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_sub_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_sub_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_top_block_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_top_block_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_insert_b_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_insert_b_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_sink_b_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_sink_b_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_sink_c_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_sink_c_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_sink_f_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_sink_f_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_sink_i_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_sink_i_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_sink_s_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_sink_s_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_source_b_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_source_b_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_source_c_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_source_c_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_source_f_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_source_f_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_source_i_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_source_i_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_vector_source_s_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_vector_source_s_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_xor_bb_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_xor_bb_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_xor_ii_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_xor_ii_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_boost__shared_ptrT_gr_xor_ss_t[] = {  {&_swigt__p_boost__shared_ptrT_gr_xor_ss_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_cc[] = {  {&_swigt__p_gr_add_cc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_const_cc[] = {  {&_swigt__p_gr_add_const_cc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_const_ff[] = {  {&_swigt__p_gr_add_const_ff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_const_ii[] = {  {&_swigt__p_gr_add_const_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_const_sf[] = {  {&_swigt__p_gr_add_const_sf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_const_ss[] = {  {&_swigt__p_gr_add_const_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_const_vcc[] = {  {&_swigt__p_gr_add_const_vcc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_const_vff[] = {  {&_swigt__p_gr_add_const_vff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_const_vii[] = {  {&_swigt__p_gr_add_const_vii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_const_vss[] = {  {&_swigt__p_gr_add_const_vss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_ii[] = {  {&_swigt__p_gr_add_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_add_ss[] = {  {&_swigt__p_gr_add_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_and_bb[] = {  {&_swigt__p_gr_and_bb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_and_const_bb[] = {  {&_swigt__p_gr_and_const_bb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_and_const_ii[] = {  {&_swigt__p_gr_and_const_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_and_const_ss[] = {  {&_swigt__p_gr_and_const_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_and_ii[] = {  {&_swigt__p_gr_and_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_and_ss[] = {  {&_swigt__p_gr_and_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_argmax_fs[] = {  {&_swigt__p_gr_argmax_fs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_argmax_is[] = {  {&_swigt__p_gr_argmax_is, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_argmax_ss[] = {  {&_swigt__p_gr_argmax_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_top_block[] = {{&_swigt__p_gr_top_block, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_hier_block2[] = {{&_swigt__p_gr_hier_block2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_basic_block[] = {  {&_swigt__p_gr_argmax_is, _p_gr_argmax_isTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_s, _p_gr_probe_signal_sTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_multiply_ss, _p_gr_multiply_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_integrate_ii, _p_gr_integrate_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_mute_ff, _p_gr_mute_ffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_xor_ss, _p_gr_xor_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_moving_average_cc, _p_gr_moving_average_ccTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_argmax_ss, _p_gr_argmax_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_max_ss, _p_gr_max_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_not_bb, _p_gr_not_bbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_ic, _p_gr_chunks_to_symbols_icTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_multiply_const_vii, _p_gr_multiply_const_viiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_const_vii, _p_gr_add_const_viiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_and_ss, _p_gr_and_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_if, _p_gr_chunks_to_symbols_ifTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_source_b, _p_gr_vector_source_bTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_sc, _p_gr_chunks_to_symbols_scTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_divide_ff, _p_gr_divide_ffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_ff, _p_gr_sample_and_hold_ffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_source_c, _p_gr_vector_source_cTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_noise_source_c, _p_gr_noise_source_cTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sig_source_c, _p_gr_sig_source_cTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_not_ss, _p_gr_not_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_sf, _p_gr_chunks_to_symbols_sfTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_top_block, _p_gr_top_blockTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_block, _p_gr_blockTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_source_f, _p_gr_vector_source_fTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_noise_source_f, _p_gr_noise_source_fTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sig_source_f, _p_gr_sig_source_fTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_const_ff, _p_gr_add_const_ffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_peak_detector_ib, _p_gr_peak_detector_ibTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_integrate_ss, _p_gr_integrate_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sig_source_i, _p_gr_sig_source_iTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_noise_source_i, _p_gr_noise_source_iTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_source_i, _p_gr_vector_source_iTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_insert_b, _p_gr_vector_insert_bTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_sink_b, _p_gr_vector_sink_bTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_sink_c, _p_gr_vector_sink_cTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_peak_detector_sb, _p_gr_peak_detector_sbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_bc, _p_gr_chunks_to_symbols_bcTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_multiply_const_vss, _p_gr_multiply_const_vssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_const_vss, _p_gr_add_const_vssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sub_cc, _p_gr_sub_ccTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_sink_f, _p_gr_vector_sink_fTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_cc, _p_gr_add_ccTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_bf, _p_gr_chunks_to_symbols_bfTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_vb, _p_gr_probe_signal_vbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_mute_ii, _p_gr_mute_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_vc, _p_gr_probe_signal_vcTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_moving_average_ff, _p_gr_moving_average_ffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_sink_i, _p_gr_vector_sink_iTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_vf, _p_gr_probe_signal_vfTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_source_s, _p_gr_vector_source_sTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_noise_source_s, _p_gr_noise_source_sTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sig_source_s, _p_gr_sig_source_sTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_unpacked_to_packed_ii, _p_gr_unpacked_to_packed_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_packed_to_unpacked_ii, _p_gr_packed_to_unpacked_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sync_decimator, _p_gr_sync_decimatorTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_vi, _p_gr_probe_signal_viTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_divide_ii, _p_gr_divide_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_ii, _p_gr_sample_and_hold_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_or_ii, _p_gr_or_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_unpacked_to_packed_bb, _p_gr_unpacked_to_packed_bbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_packed_to_unpacked_bb, _p_gr_packed_to_unpacked_bbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_vector_sink_s, _p_gr_vector_sink_sTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_multiply_const_ii, _p_gr_multiply_const_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_const_ii, _p_gr_add_const_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_and_const_ii, _p_gr_and_const_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_const_sf, _p_gr_add_const_sfTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_bb, _p_gr_sample_and_hold_bbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_or_bb, _p_gr_or_bbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_mute_ss, _p_gr_mute_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_vs, _p_gr_probe_signal_vsTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_and_const_bb, _p_gr_and_const_bbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sub_ff, _p_gr_sub_ffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_basic_block, 0, 0, 0},  {&_swigt__p_gr_sync_block, _p_gr_sync_blockTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_unpacked_to_packed_ss, _p_gr_unpacked_to_packed_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_packed_to_unpacked_ss, _p_gr_packed_to_unpacked_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_integrate_cc, _p_gr_integrate_ccTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_divide_ss, _p_gr_divide_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_ss, _p_gr_sample_and_hold_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_or_ss, _p_gr_or_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_moving_average_ii, _p_gr_moving_average_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_const_vcc, _p_gr_add_const_vccTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_multiply_const_vcc, _p_gr_multiply_const_vccTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_multiply_const_ss, _p_gr_multiply_const_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_const_ss, _p_gr_add_const_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_and_const_ss, _p_gr_and_const_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_max_ff, _p_gr_max_ffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_moving_average_ss, _p_gr_moving_average_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sub_ii, _p_gr_sub_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_ii, _p_gr_add_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sync_interpolator, _p_gr_sync_interpolatorTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_integrate_ff, _p_gr_integrate_ffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_mute_cc, _p_gr_mute_ccTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_argmax_fs, _p_gr_argmax_fsTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_b, _p_gr_probe_signal_bTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_c, _p_gr_probe_signal_cTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_multiply_const_vff, _p_gr_multiply_const_vffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_const_vff, _p_gr_add_const_vffTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_f, _p_gr_probe_signal_fTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_multiply_ii, _p_gr_multiply_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_xor_ii, _p_gr_xor_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_divide_cc, _p_gr_divide_ccTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_max_ii, _p_gr_max_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_probe_signal_i, _p_gr_probe_signal_iTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_and_ii, _p_gr_and_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_const_cc, _p_gr_add_const_ccTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_hier_block2, _p_gr_hier_block2To_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_xor_bb, _p_gr_xor_bbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_sub_ss, _p_gr_sub_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_add_ss, _p_gr_add_ssTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_not_ii, _p_gr_not_iiTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_peak_detector_fb, _p_gr_peak_detector_fbTo_p_gr_basic_block, 0, 0},  {&_swigt__p_gr_and_bb, _p_gr_and_bbTo_p_gr_basic_block, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_block[] = {  {&_swigt__p_gr_argmax_is, _p_gr_argmax_isTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_s, _p_gr_probe_signal_sTo_p_gr_block, 0, 0},  {&_swigt__p_gr_multiply_ss, _p_gr_multiply_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_integrate_ii, _p_gr_integrate_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_mute_ff, _p_gr_mute_ffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_xor_ss, _p_gr_xor_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_moving_average_cc, _p_gr_moving_average_ccTo_p_gr_block, 0, 0},  {&_swigt__p_gr_argmax_ss, _p_gr_argmax_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_max_ss, _p_gr_max_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_not_bb, _p_gr_not_bbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_ic, _p_gr_chunks_to_symbols_icTo_p_gr_block, 0, 0},  {&_swigt__p_gr_multiply_const_vii, _p_gr_multiply_const_viiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_const_vii, _p_gr_add_const_viiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_and_ss, _p_gr_and_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_if, _p_gr_chunks_to_symbols_ifTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_source_b, _p_gr_vector_source_bTo_p_gr_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_sc, _p_gr_chunks_to_symbols_scTo_p_gr_block, 0, 0},  {&_swigt__p_gr_divide_ff, _p_gr_divide_ffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_ff, _p_gr_sample_and_hold_ffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_source_c, _p_gr_vector_source_cTo_p_gr_block, 0, 0},  {&_swigt__p_gr_noise_source_c, _p_gr_noise_source_cTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sig_source_c, _p_gr_sig_source_cTo_p_gr_block, 0, 0},  {&_swigt__p_gr_not_ss, _p_gr_not_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_sf, _p_gr_chunks_to_symbols_sfTo_p_gr_block, 0, 0},  {&_swigt__p_gr_block, 0, 0, 0},  {&_swigt__p_gr_vector_source_f, _p_gr_vector_source_fTo_p_gr_block, 0, 0},  {&_swigt__p_gr_noise_source_f, _p_gr_noise_source_fTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sig_source_f, _p_gr_sig_source_fTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_const_ff, _p_gr_add_const_ffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_peak_detector_ib, _p_gr_peak_detector_ibTo_p_gr_block, 0, 0},  {&_swigt__p_gr_integrate_ss, _p_gr_integrate_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_source_i, _p_gr_vector_source_iTo_p_gr_block, 0, 0},  {&_swigt__p_gr_noise_source_i, _p_gr_noise_source_iTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sig_source_i, _p_gr_sig_source_iTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_insert_b, _p_gr_vector_insert_bTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_sink_b, _p_gr_vector_sink_bTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_sink_c, _p_gr_vector_sink_cTo_p_gr_block, 0, 0},  {&_swigt__p_gr_peak_detector_sb, _p_gr_peak_detector_sbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_bc, _p_gr_chunks_to_symbols_bcTo_p_gr_block, 0, 0},  {&_swigt__p_gr_multiply_const_vss, _p_gr_multiply_const_vssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_const_vss, _p_gr_add_const_vssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sub_cc, _p_gr_sub_ccTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_sink_f, _p_gr_vector_sink_fTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_cc, _p_gr_add_ccTo_p_gr_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_bf, _p_gr_chunks_to_symbols_bfTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_vb, _p_gr_probe_signal_vbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_mute_ii, _p_gr_mute_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_vc, _p_gr_probe_signal_vcTo_p_gr_block, 0, 0},  {&_swigt__p_gr_moving_average_ff, _p_gr_moving_average_ffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_sink_i, _p_gr_vector_sink_iTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_vf, _p_gr_probe_signal_vfTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_source_s, _p_gr_vector_source_sTo_p_gr_block, 0, 0},  {&_swigt__p_gr_noise_source_s, _p_gr_noise_source_sTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sig_source_s, _p_gr_sig_source_sTo_p_gr_block, 0, 0},  {&_swigt__p_gr_unpacked_to_packed_ii, _p_gr_unpacked_to_packed_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_packed_to_unpacked_ii, _p_gr_packed_to_unpacked_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sync_decimator, _p_gr_sync_decimatorTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_vi, _p_gr_probe_signal_viTo_p_gr_block, 0, 0},  {&_swigt__p_gr_divide_ii, _p_gr_divide_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_ii, _p_gr_sample_and_hold_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_or_ii, _p_gr_or_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_unpacked_to_packed_bb, _p_gr_unpacked_to_packed_bbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_packed_to_unpacked_bb, _p_gr_packed_to_unpacked_bbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_vector_sink_s, _p_gr_vector_sink_sTo_p_gr_block, 0, 0},  {&_swigt__p_gr_multiply_const_ii, _p_gr_multiply_const_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_const_ii, _p_gr_add_const_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_and_const_ii, _p_gr_and_const_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_const_sf, _p_gr_add_const_sfTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_bb, _p_gr_sample_and_hold_bbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_or_bb, _p_gr_or_bbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_mute_ss, _p_gr_mute_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_vs, _p_gr_probe_signal_vsTo_p_gr_block, 0, 0},  {&_swigt__p_gr_and_const_bb, _p_gr_and_const_bbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sub_ff, _p_gr_sub_ffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sync_block, _p_gr_sync_blockTo_p_gr_block, 0, 0},  {&_swigt__p_gr_unpacked_to_packed_ss, _p_gr_unpacked_to_packed_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_packed_to_unpacked_ss, _p_gr_packed_to_unpacked_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_integrate_cc, _p_gr_integrate_ccTo_p_gr_block, 0, 0},  {&_swigt__p_gr_divide_ss, _p_gr_divide_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_ss, _p_gr_sample_and_hold_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_or_ss, _p_gr_or_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_moving_average_ii, _p_gr_moving_average_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_const_vcc, _p_gr_add_const_vccTo_p_gr_block, 0, 0},  {&_swigt__p_gr_multiply_const_vcc, _p_gr_multiply_const_vccTo_p_gr_block, 0, 0},  {&_swigt__p_gr_multiply_const_ss, _p_gr_multiply_const_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_const_ss, _p_gr_add_const_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_and_const_ss, _p_gr_and_const_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_max_ff, _p_gr_max_ffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_moving_average_ss, _p_gr_moving_average_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sub_ii, _p_gr_sub_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_ii, _p_gr_add_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sync_interpolator, _p_gr_sync_interpolatorTo_p_gr_block, 0, 0},  {&_swigt__p_gr_integrate_ff, _p_gr_integrate_ffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_mute_cc, _p_gr_mute_ccTo_p_gr_block, 0, 0},  {&_swigt__p_gr_argmax_fs, _p_gr_argmax_fsTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_b, _p_gr_probe_signal_bTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_c, _p_gr_probe_signal_cTo_p_gr_block, 0, 0},  {&_swigt__p_gr_multiply_const_vff, _p_gr_multiply_const_vffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_const_vff, _p_gr_add_const_vffTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_f, _p_gr_probe_signal_fTo_p_gr_block, 0, 0},  {&_swigt__p_gr_multiply_ii, _p_gr_multiply_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_xor_ii, _p_gr_xor_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_divide_cc, _p_gr_divide_ccTo_p_gr_block, 0, 0},  {&_swigt__p_gr_max_ii, _p_gr_max_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_probe_signal_i, _p_gr_probe_signal_iTo_p_gr_block, 0, 0},  {&_swigt__p_gr_and_ii, _p_gr_and_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_const_cc, _p_gr_add_const_ccTo_p_gr_block, 0, 0},  {&_swigt__p_gr_xor_bb, _p_gr_xor_bbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_sub_ss, _p_gr_sub_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_add_ss, _p_gr_add_ssTo_p_gr_block, 0, 0},  {&_swigt__p_gr_not_ii, _p_gr_not_iiTo_p_gr_block, 0, 0},  {&_swigt__p_gr_peak_detector_fb, _p_gr_peak_detector_fbTo_p_gr_block, 0, 0},  {&_swigt__p_gr_and_bb, _p_gr_and_bbTo_p_gr_block, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_chunks_to_symbols_bc[] = {  {&_swigt__p_gr_chunks_to_symbols_bc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_chunks_to_symbols_bf[] = {  {&_swigt__p_gr_chunks_to_symbols_bf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_chunks_to_symbols_ic[] = {  {&_swigt__p_gr_chunks_to_symbols_ic, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_chunks_to_symbols_if[] = {  {&_swigt__p_gr_chunks_to_symbols_if, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_chunks_to_symbols_sc[] = {  {&_swigt__p_gr_chunks_to_symbols_sc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_chunks_to_symbols_sf[] = {  {&_swigt__p_gr_chunks_to_symbols_sf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_divide_cc[] = {  {&_swigt__p_gr_divide_cc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_divide_ff[] = {  {&_swigt__p_gr_divide_ff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_divide_ii[] = {  {&_swigt__p_gr_divide_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_divide_ss[] = {  {&_swigt__p_gr_divide_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_endianness_t[] = {  {&_swigt__p_gr_endianness_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_integrate_cc[] = {  {&_swigt__p_gr_integrate_cc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_integrate_ff[] = {  {&_swigt__p_gr_integrate_ff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_integrate_ii[] = {  {&_swigt__p_gr_integrate_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_integrate_ss[] = {  {&_swigt__p_gr_integrate_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_max_ff[] = {  {&_swigt__p_gr_max_ff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_max_ii[] = {  {&_swigt__p_gr_max_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_max_ss[] = {  {&_swigt__p_gr_max_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_moving_average_cc[] = {  {&_swigt__p_gr_moving_average_cc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_moving_average_ff[] = {  {&_swigt__p_gr_moving_average_ff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_moving_average_ii[] = {  {&_swigt__p_gr_moving_average_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_moving_average_ss[] = {  {&_swigt__p_gr_moving_average_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_multiply_const_ii[] = {  {&_swigt__p_gr_multiply_const_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_multiply_const_ss[] = {  {&_swigt__p_gr_multiply_const_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_multiply_const_vcc[] = {  {&_swigt__p_gr_multiply_const_vcc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_multiply_const_vff[] = {  {&_swigt__p_gr_multiply_const_vff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_multiply_const_vii[] = {  {&_swigt__p_gr_multiply_const_vii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_multiply_const_vss[] = {  {&_swigt__p_gr_multiply_const_vss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_multiply_ii[] = {  {&_swigt__p_gr_multiply_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_multiply_ss[] = {  {&_swigt__p_gr_multiply_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_mute_cc[] = {  {&_swigt__p_gr_mute_cc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_mute_ff[] = {  {&_swigt__p_gr_mute_ff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_mute_ii[] = {  {&_swigt__p_gr_mute_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_mute_ss[] = {  {&_swigt__p_gr_mute_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_noise_source_c[] = {  {&_swigt__p_gr_noise_source_c, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_noise_source_f[] = {  {&_swigt__p_gr_noise_source_f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_noise_source_i[] = {  {&_swigt__p_gr_noise_source_i, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_noise_source_s[] = {  {&_swigt__p_gr_noise_source_s, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_noise_type_t[] = {  {&_swigt__p_gr_noise_type_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_not_bb[] = {  {&_swigt__p_gr_not_bb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_not_ii[] = {  {&_swigt__p_gr_not_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_not_ss[] = {  {&_swigt__p_gr_not_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_or_bb[] = {  {&_swigt__p_gr_or_bb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_or_ii[] = {  {&_swigt__p_gr_or_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_or_ss[] = {  {&_swigt__p_gr_or_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_packed_to_unpacked_bb[] = {  {&_swigt__p_gr_packed_to_unpacked_bb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_packed_to_unpacked_ii[] = {  {&_swigt__p_gr_packed_to_unpacked_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_packed_to_unpacked_ss[] = {  {&_swigt__p_gr_packed_to_unpacked_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_peak_detector_fb[] = {  {&_swigt__p_gr_peak_detector_fb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_peak_detector_ib[] = {  {&_swigt__p_gr_peak_detector_ib, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_peak_detector_sb[] = {  {&_swigt__p_gr_peak_detector_sb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_b[] = {  {&_swigt__p_gr_probe_signal_b, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_c[] = {  {&_swigt__p_gr_probe_signal_c, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_f[] = {  {&_swigt__p_gr_probe_signal_f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_i[] = {  {&_swigt__p_gr_probe_signal_i, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_s[] = {  {&_swigt__p_gr_probe_signal_s, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_vb[] = {  {&_swigt__p_gr_probe_signal_vb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_vc[] = {  {&_swigt__p_gr_probe_signal_vc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_vf[] = {  {&_swigt__p_gr_probe_signal_vf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_vi[] = {  {&_swigt__p_gr_probe_signal_vi, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_probe_signal_vs[] = {  {&_swigt__p_gr_probe_signal_vs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sample_and_hold_bb[] = {  {&_swigt__p_gr_sample_and_hold_bb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sample_and_hold_ff[] = {  {&_swigt__p_gr_sample_and_hold_ff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sample_and_hold_ii[] = {  {&_swigt__p_gr_sample_and_hold_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sample_and_hold_ss[] = {  {&_swigt__p_gr_sample_and_hold_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sig_source_c[] = {  {&_swigt__p_gr_sig_source_c, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sig_source_f[] = {  {&_swigt__p_gr_sig_source_f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sig_source_i[] = {  {&_swigt__p_gr_sig_source_i, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sig_source_s[] = {  {&_swigt__p_gr_sig_source_s, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sub_cc[] = {  {&_swigt__p_gr_sub_cc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sub_ff[] = {  {&_swigt__p_gr_sub_ff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sub_ii[] = {  {&_swigt__p_gr_sub_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sub_ss[] = {  {&_swigt__p_gr_sub_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sync_block[] = {  {&_swigt__p_gr_argmax_is, _p_gr_argmax_isTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_s, _p_gr_probe_signal_sTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_multiply_ss, _p_gr_multiply_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_integrate_ii, _p_gr_integrate_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_mute_ff, _p_gr_mute_ffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_xor_ss, _p_gr_xor_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_moving_average_cc, _p_gr_moving_average_ccTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_argmax_ss, _p_gr_argmax_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_max_ss, _p_gr_max_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_not_bb, _p_gr_not_bbTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_ic, _p_gr_chunks_to_symbols_icTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_multiply_const_vii, _p_gr_multiply_const_viiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_const_vii, _p_gr_add_const_viiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_and_ss, _p_gr_and_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_if, _p_gr_chunks_to_symbols_ifTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_source_b, _p_gr_vector_source_bTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_sc, _p_gr_chunks_to_symbols_scTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_divide_ff, _p_gr_divide_ffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_ff, _p_gr_sample_and_hold_ffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_source_c, _p_gr_vector_source_cTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sig_source_c, _p_gr_sig_source_cTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_not_ss, _p_gr_not_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_sf, _p_gr_chunks_to_symbols_sfTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_source_f, _p_gr_vector_source_fTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sig_source_f, _p_gr_sig_source_fTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_const_ff, _p_gr_add_const_ffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_peak_detector_ib, _p_gr_peak_detector_ibTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_integrate_ss, _p_gr_integrate_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sig_source_i, _p_gr_sig_source_iTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_source_i, _p_gr_vector_source_iTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_sink_b, _p_gr_vector_sink_bTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_sink_c, _p_gr_vector_sink_cTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_peak_detector_sb, _p_gr_peak_detector_sbTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_bc, _p_gr_chunks_to_symbols_bcTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_multiply_const_vss, _p_gr_multiply_const_vssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_const_vss, _p_gr_add_const_vssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sub_cc, _p_gr_sub_ccTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_sink_f, _p_gr_vector_sink_fTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_cc, _p_gr_add_ccTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_bf, _p_gr_chunks_to_symbols_bfTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_vb, _p_gr_probe_signal_vbTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_mute_ii, _p_gr_mute_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_vc, _p_gr_probe_signal_vcTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_moving_average_ff, _p_gr_moving_average_ffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_sink_i, _p_gr_vector_sink_iTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_vf, _p_gr_probe_signal_vfTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sig_source_s, _p_gr_sig_source_sTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_source_s, _p_gr_vector_source_sTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sync_decimator, _p_gr_sync_decimatorTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_vi, _p_gr_probe_signal_viTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_divide_ii, _p_gr_divide_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_ii, _p_gr_sample_and_hold_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_or_ii, _p_gr_or_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_vector_sink_s, _p_gr_vector_sink_sTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_const_ii, _p_gr_add_const_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_multiply_const_ii, _p_gr_multiply_const_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_and_const_ii, _p_gr_and_const_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_const_sf, _p_gr_add_const_sfTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_bb, _p_gr_sample_and_hold_bbTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_or_bb, _p_gr_or_bbTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_mute_ss, _p_gr_mute_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_vs, _p_gr_probe_signal_vsTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_and_const_bb, _p_gr_and_const_bbTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sub_ff, _p_gr_sub_ffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sync_block, 0, 0, 0},  {&_swigt__p_gr_integrate_cc, _p_gr_integrate_ccTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_divide_ss, _p_gr_divide_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sample_and_hold_ss, _p_gr_sample_and_hold_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_or_ss, _p_gr_or_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_moving_average_ii, _p_gr_moving_average_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_multiply_const_vcc, _p_gr_multiply_const_vccTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_const_vcc, _p_gr_add_const_vccTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_multiply_const_ss, _p_gr_multiply_const_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_const_ss, _p_gr_add_const_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_and_const_ss, _p_gr_and_const_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_max_ff, _p_gr_max_ffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_moving_average_ss, _p_gr_moving_average_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sub_ii, _p_gr_sub_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_ii, _p_gr_add_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sync_interpolator, _p_gr_sync_interpolatorTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_integrate_ff, _p_gr_integrate_ffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_mute_cc, _p_gr_mute_ccTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_argmax_fs, _p_gr_argmax_fsTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_b, _p_gr_probe_signal_bTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_c, _p_gr_probe_signal_cTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_multiply_const_vff, _p_gr_multiply_const_vffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_const_vff, _p_gr_add_const_vffTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_f, _p_gr_probe_signal_fTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_multiply_ii, _p_gr_multiply_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_xor_ii, _p_gr_xor_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_divide_cc, _p_gr_divide_ccTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_max_ii, _p_gr_max_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_probe_signal_i, _p_gr_probe_signal_iTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_and_ii, _p_gr_and_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_const_cc, _p_gr_add_const_ccTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_xor_bb, _p_gr_xor_bbTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_sub_ss, _p_gr_sub_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_add_ss, _p_gr_add_ssTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_not_ii, _p_gr_not_iiTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_peak_detector_fb, _p_gr_peak_detector_fbTo_p_gr_sync_block, 0, 0},  {&_swigt__p_gr_and_bb, _p_gr_and_bbTo_p_gr_sync_block, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sync_decimator[] = {  {&_swigt__p_gr_integrate_cc, _p_gr_integrate_ccTo_p_gr_sync_decimator, 0, 0},  {&_swigt__p_gr_integrate_ff, _p_gr_integrate_ffTo_p_gr_sync_decimator, 0, 0},  {&_swigt__p_gr_integrate_ii, _p_gr_integrate_iiTo_p_gr_sync_decimator, 0, 0},  {&_swigt__p_gr_integrate_ss, _p_gr_integrate_ssTo_p_gr_sync_decimator, 0, 0},  {&_swigt__p_gr_sync_decimator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_sync_interpolator[] = {  {&_swigt__p_gr_chunks_to_symbols_sf, _p_gr_chunks_to_symbols_sfTo_p_gr_sync_interpolator, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_bf, _p_gr_chunks_to_symbols_bfTo_p_gr_sync_interpolator, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_if, _p_gr_chunks_to_symbols_ifTo_p_gr_sync_interpolator, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_sc, _p_gr_chunks_to_symbols_scTo_p_gr_sync_interpolator, 0, 0},  {&_swigt__p_gr_sync_interpolator, 0, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_bc, _p_gr_chunks_to_symbols_bcTo_p_gr_sync_interpolator, 0, 0},  {&_swigt__p_gr_chunks_to_symbols_ic, _p_gr_chunks_to_symbols_icTo_p_gr_sync_interpolator, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_unpacked_to_packed_bb[] = {  {&_swigt__p_gr_unpacked_to_packed_bb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_unpacked_to_packed_ii[] = {  {&_swigt__p_gr_unpacked_to_packed_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_unpacked_to_packed_ss[] = {  {&_swigt__p_gr_unpacked_to_packed_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_insert_b[] = {  {&_swigt__p_gr_vector_insert_b, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_sink_b[] = {  {&_swigt__p_gr_vector_sink_b, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_sink_c[] = {  {&_swigt__p_gr_vector_sink_c, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_sink_f[] = {  {&_swigt__p_gr_vector_sink_f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_sink_i[] = {  {&_swigt__p_gr_vector_sink_i, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_sink_s[] = {  {&_swigt__p_gr_vector_sink_s, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_source_b[] = {  {&_swigt__p_gr_vector_source_b, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_source_c[] = {  {&_swigt__p_gr_vector_source_c, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_source_f[] = {  {&_swigt__p_gr_vector_source_f, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_source_i[] = {  {&_swigt__p_gr_vector_source_i, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_vector_source_s[] = {  {&_swigt__p_gr_vector_source_s, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_waveform_t[] = {  {&_swigt__p_gr_waveform_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_xor_bb[] = {  {&_swigt__p_gr_xor_bb, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_xor_ii[] = {  {&_swigt__p_gr_xor_ii, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gr_xor_ss[] = {  {&_swigt__p_gr_xor_ss, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_gruel__rt_status_t[] = {  {&_swigt__p_gruel__rt_status_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__complexT_double_t[] = {  {&_swigt__p_std__complexT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__complexT_float_t[] = {  {&_swigt__p_std__complexT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_allocator_type,
  _swigc__p_boost__shared_ptrT_gr_add_cc_t,
  _swigc__p_boost__shared_ptrT_gr_add_const_cc_t,
  _swigc__p_boost__shared_ptrT_gr_add_const_ff_t,
  _swigc__p_boost__shared_ptrT_gr_add_const_ii_t,
  _swigc__p_boost__shared_ptrT_gr_add_const_sf_t,
  _swigc__p_boost__shared_ptrT_gr_add_const_ss_t,
  _swigc__p_boost__shared_ptrT_gr_add_const_vcc_t,
  _swigc__p_boost__shared_ptrT_gr_add_const_vff_t,
  _swigc__p_boost__shared_ptrT_gr_add_const_vii_t,
  _swigc__p_boost__shared_ptrT_gr_add_const_vss_t,
  _swigc__p_boost__shared_ptrT_gr_add_ii_t,
  _swigc__p_boost__shared_ptrT_gr_add_ss_t,
  _swigc__p_boost__shared_ptrT_gr_and_bb_t,
  _swigc__p_boost__shared_ptrT_gr_and_const_bb_t,
  _swigc__p_boost__shared_ptrT_gr_and_const_ii_t,
  _swigc__p_boost__shared_ptrT_gr_and_const_ss_t,
  _swigc__p_boost__shared_ptrT_gr_and_ii_t,
  _swigc__p_boost__shared_ptrT_gr_and_ss_t,
  _swigc__p_boost__shared_ptrT_gr_argmax_fs_t,
  _swigc__p_boost__shared_ptrT_gr_argmax_is_t,
  _swigc__p_boost__shared_ptrT_gr_argmax_ss_t,
  _swigc__p_boost__shared_ptrT_gr_basic_block_t,
  _swigc__p_boost__shared_ptrT_gr_block_detail_t,
  _swigc__p_boost__shared_ptrT_gr_block_t,
  _swigc__p_boost__shared_ptrT_gr_buffer_reader_t,
  _swigc__p_boost__shared_ptrT_gr_buffer_t,
  _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_bc_t,
  _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_bf_t,
  _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_ic_t,
  _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_if_t,
  _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_sc_t,
  _swigc__p_boost__shared_ptrT_gr_chunks_to_symbols_sf_t,
  _swigc__p_boost__shared_ptrT_gr_dispatcher_t,
  _swigc__p_boost__shared_ptrT_gr_divide_cc_t,
  _swigc__p_boost__shared_ptrT_gr_divide_ff_t,
  _swigc__p_boost__shared_ptrT_gr_divide_ii_t,
  _swigc__p_boost__shared_ptrT_gr_divide_ss_t,
  _swigc__p_boost__shared_ptrT_gr_hier_block2_t,
  _swigc__p_boost__shared_ptrT_gr_integrate_cc_t,
  _swigc__p_boost__shared_ptrT_gr_integrate_ff_t,
  _swigc__p_boost__shared_ptrT_gr_integrate_ii_t,
  _swigc__p_boost__shared_ptrT_gr_integrate_ss_t,
  _swigc__p_boost__shared_ptrT_gr_io_signature_t,
  _swigc__p_boost__shared_ptrT_gr_max_ff_t,
  _swigc__p_boost__shared_ptrT_gr_max_ii_t,
  _swigc__p_boost__shared_ptrT_gr_max_ss_t,
  _swigc__p_boost__shared_ptrT_gr_message_t,
  _swigc__p_boost__shared_ptrT_gr_moving_average_cc_t,
  _swigc__p_boost__shared_ptrT_gr_moving_average_ff_t,
  _swigc__p_boost__shared_ptrT_gr_moving_average_ii_t,
  _swigc__p_boost__shared_ptrT_gr_moving_average_ss_t,
  _swigc__p_boost__shared_ptrT_gr_msg_queue_t,
  _swigc__p_boost__shared_ptrT_gr_multiply_const_ii_t,
  _swigc__p_boost__shared_ptrT_gr_multiply_const_ss_t,
  _swigc__p_boost__shared_ptrT_gr_multiply_const_vcc_t,
  _swigc__p_boost__shared_ptrT_gr_multiply_const_vff_t,
  _swigc__p_boost__shared_ptrT_gr_multiply_const_vii_t,
  _swigc__p_boost__shared_ptrT_gr_multiply_const_vss_t,
  _swigc__p_boost__shared_ptrT_gr_multiply_ii_t,
  _swigc__p_boost__shared_ptrT_gr_multiply_ss_t,
  _swigc__p_boost__shared_ptrT_gr_mute_cc_t,
  _swigc__p_boost__shared_ptrT_gr_mute_ff_t,
  _swigc__p_boost__shared_ptrT_gr_mute_ii_t,
  _swigc__p_boost__shared_ptrT_gr_mute_ss_t,
  _swigc__p_boost__shared_ptrT_gr_noise_source_c_t,
  _swigc__p_boost__shared_ptrT_gr_noise_source_f_t,
  _swigc__p_boost__shared_ptrT_gr_noise_source_i_t,
  _swigc__p_boost__shared_ptrT_gr_noise_source_s_t,
  _swigc__p_boost__shared_ptrT_gr_not_bb_t,
  _swigc__p_boost__shared_ptrT_gr_not_ii_t,
  _swigc__p_boost__shared_ptrT_gr_not_ss_t,
  _swigc__p_boost__shared_ptrT_gr_or_bb_t,
  _swigc__p_boost__shared_ptrT_gr_or_ii_t,
  _swigc__p_boost__shared_ptrT_gr_or_ss_t,
  _swigc__p_boost__shared_ptrT_gr_packed_to_unpacked_bb_t,
  _swigc__p_boost__shared_ptrT_gr_packed_to_unpacked_ii_t,
  _swigc__p_boost__shared_ptrT_gr_packed_to_unpacked_ss_t,
  _swigc__p_boost__shared_ptrT_gr_peak_detector_fb_t,
  _swigc__p_boost__shared_ptrT_gr_peak_detector_ib_t,
  _swigc__p_boost__shared_ptrT_gr_peak_detector_sb_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_b_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_c_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_f_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_i_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_s_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_vb_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_vc_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_vf_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_vi_t,
  _swigc__p_boost__shared_ptrT_gr_probe_signal_vs_t,
  _swigc__p_boost__shared_ptrT_gr_sample_and_hold_bb_t,
  _swigc__p_boost__shared_ptrT_gr_sample_and_hold_ff_t,
  _swigc__p_boost__shared_ptrT_gr_sample_and_hold_ii_t,
  _swigc__p_boost__shared_ptrT_gr_sample_and_hold_ss_t,
  _swigc__p_boost__shared_ptrT_gr_sig_source_c_t,
  _swigc__p_boost__shared_ptrT_gr_sig_source_f_t,
  _swigc__p_boost__shared_ptrT_gr_sig_source_i_t,
  _swigc__p_boost__shared_ptrT_gr_sig_source_s_t,
  _swigc__p_boost__shared_ptrT_gr_single_threaded_scheduler_t,
  _swigc__p_boost__shared_ptrT_gr_sub_cc_t,
  _swigc__p_boost__shared_ptrT_gr_sub_ff_t,
  _swigc__p_boost__shared_ptrT_gr_sub_ii_t,
  _swigc__p_boost__shared_ptrT_gr_sub_ss_t,
  _swigc__p_boost__shared_ptrT_gr_top_block_t,
  _swigc__p_boost__shared_ptrT_gr_unpacked_to_packed_bb_t,
  _swigc__p_boost__shared_ptrT_gr_unpacked_to_packed_ii_t,
  _swigc__p_boost__shared_ptrT_gr_unpacked_to_packed_ss_t,
  _swigc__p_boost__shared_ptrT_gr_vector_insert_b_t,
  _swigc__p_boost__shared_ptrT_gr_vector_sink_b_t,
  _swigc__p_boost__shared_ptrT_gr_vector_sink_c_t,
  _swigc__p_boost__shared_ptrT_gr_vector_sink_f_t,
  _swigc__p_boost__shared_ptrT_gr_vector_sink_i_t,
  _swigc__p_boost__shared_ptrT_gr_vector_sink_s_t,
  _swigc__p_boost__shared_ptrT_gr_vector_source_b_t,
  _swigc__p_boost__shared_ptrT_gr_vector_source_c_t,
  _swigc__p_boost__shared_ptrT_gr_vector_source_f_t,
  _swigc__p_boost__shared_ptrT_gr_vector_source_i_t,
  _swigc__p_boost__shared_ptrT_gr_vector_source_s_t,
  _swigc__p_boost__shared_ptrT_gr_xor_bb_t,
  _swigc__p_boost__shared_ptrT_gr_xor_ii_t,
  _swigc__p_boost__shared_ptrT_gr_xor_ss_t,
  _swigc__p_char,
  _swigc__p_difference_type,
  _swigc__p_gr_add_cc,
  _swigc__p_gr_add_const_cc,
  _swigc__p_gr_add_const_ff,
  _swigc__p_gr_add_const_ii,
  _swigc__p_gr_add_const_sf,
  _swigc__p_gr_add_const_ss,
  _swigc__p_gr_add_const_vcc,
  _swigc__p_gr_add_const_vff,
  _swigc__p_gr_add_const_vii,
  _swigc__p_gr_add_const_vss,
  _swigc__p_gr_add_ii,
  _swigc__p_gr_add_ss,
  _swigc__p_gr_and_bb,
  _swigc__p_gr_and_const_bb,
  _swigc__p_gr_and_const_ii,
  _swigc__p_gr_and_const_ss,
  _swigc__p_gr_and_ii,
  _swigc__p_gr_and_ss,
  _swigc__p_gr_argmax_fs,
  _swigc__p_gr_argmax_is,
  _swigc__p_gr_argmax_ss,
  _swigc__p_gr_basic_block,
  _swigc__p_gr_block,
  _swigc__p_gr_chunks_to_symbols_bc,
  _swigc__p_gr_chunks_to_symbols_bf,
  _swigc__p_gr_chunks_to_symbols_ic,
  _swigc__p_gr_chunks_to_symbols_if,
  _swigc__p_gr_chunks_to_symbols_sc,
  _swigc__p_gr_chunks_to_symbols_sf,
  _swigc__p_gr_divide_cc,
  _swigc__p_gr_divide_ff,
  _swigc__p_gr_divide_ii,
  _swigc__p_gr_divide_ss,
  _swigc__p_gr_endianness_t,
  _swigc__p_gr_hier_block2,
  _swigc__p_gr_integrate_cc,
  _swigc__p_gr_integrate_ff,
  _swigc__p_gr_integrate_ii,
  _swigc__p_gr_integrate_ss,
  _swigc__p_gr_max_ff,
  _swigc__p_gr_max_ii,
  _swigc__p_gr_max_ss,
  _swigc__p_gr_moving_average_cc,
  _swigc__p_gr_moving_average_ff,
  _swigc__p_gr_moving_average_ii,
  _swigc__p_gr_moving_average_ss,
  _swigc__p_gr_multiply_const_ii,
  _swigc__p_gr_multiply_const_ss,
  _swigc__p_gr_multiply_const_vcc,
  _swigc__p_gr_multiply_const_vff,
  _swigc__p_gr_multiply_const_vii,
  _swigc__p_gr_multiply_const_vss,
  _swigc__p_gr_multiply_ii,
  _swigc__p_gr_multiply_ss,
  _swigc__p_gr_mute_cc,
  _swigc__p_gr_mute_ff,
  _swigc__p_gr_mute_ii,
  _swigc__p_gr_mute_ss,
  _swigc__p_gr_noise_source_c,
  _swigc__p_gr_noise_source_f,
  _swigc__p_gr_noise_source_i,
  _swigc__p_gr_noise_source_s,
  _swigc__p_gr_noise_type_t,
  _swigc__p_gr_not_bb,
  _swigc__p_gr_not_ii,
  _swigc__p_gr_not_ss,
  _swigc__p_gr_or_bb,
  _swigc__p_gr_or_ii,
  _swigc__p_gr_or_ss,
  _swigc__p_gr_packed_to_unpacked_bb,
  _swigc__p_gr_packed_to_unpacked_ii,
  _swigc__p_gr_packed_to_unpacked_ss,
  _swigc__p_gr_peak_detector_fb,
  _swigc__p_gr_peak_detector_ib,
  _swigc__p_gr_peak_detector_sb,
  _swigc__p_gr_probe_signal_b,
  _swigc__p_gr_probe_signal_c,
  _swigc__p_gr_probe_signal_f,
  _swigc__p_gr_probe_signal_i,
  _swigc__p_gr_probe_signal_s,
  _swigc__p_gr_probe_signal_vb,
  _swigc__p_gr_probe_signal_vc,
  _swigc__p_gr_probe_signal_vf,
  _swigc__p_gr_probe_signal_vi,
  _swigc__p_gr_probe_signal_vs,
  _swigc__p_gr_sample_and_hold_bb,
  _swigc__p_gr_sample_and_hold_ff,
  _swigc__p_gr_sample_and_hold_ii,
  _swigc__p_gr_sample_and_hold_ss,
  _swigc__p_gr_sig_source_c,
  _swigc__p_gr_sig_source_f,
  _swigc__p_gr_sig_source_i,
  _swigc__p_gr_sig_source_s,
  _swigc__p_gr_sub_cc,
  _swigc__p_gr_sub_ff,
  _swigc__p_gr_sub_ii,
  _swigc__p_gr_sub_ss,
  _swigc__p_gr_sync_block,
  _swigc__p_gr_sync_decimator,
  _swigc__p_gr_sync_interpolator,
  _swigc__p_gr_top_block,
  _swigc__p_gr_unpacked_to_packed_bb,
  _swigc__p_gr_unpacked_to_packed_ii,
  _swigc__p_gr_unpacked_to_packed_ss,
  _swigc__p_gr_vector_insert_b,
  _swigc__p_gr_vector_sink_b,
  _swigc__p_gr_vector_sink_c,
  _swigc__p_gr_vector_sink_f,
  _swigc__p_gr_vector_sink_i,
  _swigc__p_gr_vector_sink_s,
  _swigc__p_gr_vector_source_b,
  _swigc__p_gr_vector_source_c,
  _swigc__p_gr_vector_source_f,
  _swigc__p_gr_vector_source_i,
  _swigc__p_gr_vector_source_s,
  _swigc__p_gr_waveform_t,
  _swigc__p_gr_xor_bb,
  _swigc__p_gr_xor_ii,
  _swigc__p_gr_xor_ss,
  _swigc__p_gruel__rt_status_t,
  _swigc__p_long_long,
  _swigc__p_size_type,
  _swigc__p_std__complexT_double_t,
  _swigc__p_std__complexT_float_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_unsigned_long_long,
  _swigc__p_value_type,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  md = d = PyModule_GetDict(m);
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  SWIG_Python_SetConstant(d, "GR_MSB_FIRST",SWIG_From_int(static_cast< int >(GR_MSB_FIRST)));
  SWIG_Python_SetConstant(d, "GR_LSB_FIRST",SWIG_From_int(static_cast< int >(GR_LSB_FIRST)));
  SWIG_Python_SetConstant(d, "GR_CONST_WAVE",SWIG_From_int(static_cast< int >(GR_CONST_WAVE)));
  SWIG_Python_SetConstant(d, "GR_SIN_WAVE",SWIG_From_int(static_cast< int >(GR_SIN_WAVE)));
  SWIG_Python_SetConstant(d, "GR_COS_WAVE",SWIG_From_int(static_cast< int >(GR_COS_WAVE)));
  SWIG_Python_SetConstant(d, "GR_SQR_WAVE",SWIG_From_int(static_cast< int >(GR_SQR_WAVE)));
  SWIG_Python_SetConstant(d, "GR_TRI_WAVE",SWIG_From_int(static_cast< int >(GR_TRI_WAVE)));
  SWIG_Python_SetConstant(d, "GR_SAW_WAVE",SWIG_From_int(static_cast< int >(GR_SAW_WAVE)));
  SWIG_Python_SetConstant(d, "GR_UNIFORM",SWIG_From_int(static_cast< int >(GR_UNIFORM)));
  SWIG_Python_SetConstant(d, "GR_GAUSSIAN",SWIG_From_int(static_cast< int >(GR_GAUSSIAN)));
  SWIG_Python_SetConstant(d, "GR_LAPLACIAN",SWIG_From_int(static_cast< int >(GR_LAPLACIAN)));
  SWIG_Python_SetConstant(d, "GR_IMPULSE",SWIG_From_int(static_cast< int >(GR_IMPULSE)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

